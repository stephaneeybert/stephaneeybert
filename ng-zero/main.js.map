{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-gui.module.ts","webpack:///./src/app/app-preloading-strategy.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core.module.ts","webpack:///./src/app/core/auth/auth-guard.service.ts","webpack:///./src/app/core/auth/auth.interceptor.ts","webpack:///./src/app/core/auth/auth.module.ts","webpack:///./src/app/core/auth/auth.service.ts","webpack:///./src/app/core/auth/keycloak-client.service.ts","webpack:///./src/app/core/auth/token.service.ts","webpack:///./src/app/core/error/error-custom-handler.ts","webpack:///./src/app/core/error/error-request-interceptor.ts","webpack:///./src/app/core/error/error-routing.module.ts","webpack:///./src/app/core/error/error.component.html","webpack:///./src/app/core/error/error.component.scss","webpack:///./src/app/core/error/error.component.ts","webpack:///./src/app/core/error/error.module.ts","webpack:///./src/app/core/error/error.service.ts","webpack:///./src/app/core/error/index.ts","webpack:///./src/app/core/login/login-dialog.component.html","webpack:///./src/app/core/login/login-dialog.component.ts","webpack:///./src/app/core/login/login.component.css","webpack:///./src/app/core/login/login.component.html","webpack:///./src/app/core/login/login.component.ts","webpack:///./src/app/core/messages/message.service.ts","webpack:///./src/app/core/messages/messages.component.css","webpack:///./src/app/core/messages/messages.component.html","webpack:///./src/app/core/messages/messages.component.ts","webpack:///./src/app/core/service/http.service.ts","webpack:///./src/app/core/service/login.service.ts","webpack:///./src/app/core/service/notification.service.ts","webpack:///./src/app/core/service/pagination.api.ts","webpack:///./src/app/core/service/pagination.service.ts","webpack:///./src/app/core/service/utils.service.ts","webpack:///./src/app/layouts/secured.layout.component.html","webpack:///./src/app/layouts/secured.layout.ts","webpack:///./src/app/layouts/unsecured.layout.component.html","webpack:///./src/app/layouts/unsecured.layout.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/views/dashboard/dashboard.component.css","webpack:///./src/app/views/dashboard/dashboard.component.html","webpack:///./src/app/views/dashboard/dashboard.component.ts","webpack:///./src/app/views/header/header.component.css","webpack:///./src/app/views/header/header.component.html","webpack:///./src/app/views/header/header.component.ts","webpack:///./src/app/views/user/user-confirmed.component.html","webpack:///./src/app/views/user/user-confirmed.component.ts","webpack:///./src/app/views/user/user-dialog.component.html","webpack:///./src/app/views/user/user-dialog.component.ts","webpack:///./src/app/views/user/user-edit.component.html","webpack:///./src/app/views/user/user-edit.component.ts","webpack:///./src/app/views/user/user.component.css","webpack:///./src/app/views/user/user.component.html","webpack:///./src/app/views/user/user.component.ts","webpack:///./src/app/views/user/user.service.ts","webpack:///./src/app/views/user/user.ts","webpack:///./src/app/views/user/users.api.ts","webpack:///./src/app/views/user/users.component.css","webpack:///./src/app/views/user/users.component.html","webpack:///./src/app/views/user/users.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./views/home/home.module\": [\n\t\t\"./src/app/views/home/home.module.ts\",\n\t\t\"views-home-home-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'always'}),\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class AppGuiModule { }\n","import { Route, PreloadingStrategy } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { of, timer } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\nexport class AppPreloadingStrategy implements PreloadingStrategy {\n\n    preload(route: Route, load: Function): Observable<any> {\n        const loadRoute = (delay) => delay\n            ? timer(150).pipe(mergeMap(_ => load()))\n            : load();\n        return route.data && route.data.preload\n            ? loadRoute(route.data.delay)\n            : of(null);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppPreloadingStrategy } from './app-preloading-strategy';\nimport { AuthGuardService } from './core/auth/auth-guard.service';\nimport { SecuredLayoutComponent } from './layouts/secured.layout';\nimport { UnsecuredLayoutComponent } from './layouts/unsecured.layout';\nimport { LoginComponent } from './core/login/login.component';\nimport { ErrorComponent } from './core/error/error.component';\nimport { UsersComponent } from './views/user/users.component';\nimport { DashboardComponent } from './views/dashboard/dashboard.component';\nimport { UserComponent } from './views/user/user.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnsecuredLayoutComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'home',\n        loadChildren: './views/home/home.module#HomeModule',\n        data: {\n          preload: true,\n          delay: false\n        }\n      },\n    ]\n  },\n  {\n    path: '',\n    component: SecuredLayoutComponent,\n    canActivateChild: [AuthGuardService],\n    children: [\n      {\n        path: 'users',\n        component: UsersComponent,\n      },\n      {\n        path: 'users/:id',\n        component: UserComponent,\n      },\n      {\n        path: 'dashboard',\n        component: DashboardComponent,\n        data: {\n          expectedRole: 'admin'\n        }\n      },\n      {\n        path: 'error',\n        component: ErrorComponent\n      },\n    ]\n  },\n];\n\n@NgModule({\n  providers: [AppPreloadingStrategy],\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: AppPreloadingStrategy })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"/* DashboardComponent's private CSS styles */\\n[class*='col-'] {\\n  float: left;\\n  padding-right: 20px;\\n  padding-bottom: 20px;\\n}\\n[class*='col-']:last-of-type {\\n  padding-right: 0;\\n}\\na {\\n  text-decoration: none;\\n}\\n*, *:after, *:before {\\n  box-sizing: border-box;\\n}\\nh3 {\\n  text-align: center; margin-bottom: 0;\\n}\\nh4 {\\n  position: relative;\\n}\\n.grid {\\n  margin: 0;\\n}\\n.col-1-4 {\\n  width: 25%;\\n}\\n.module {\\n  padding: 20px;\\n  text-align: center;\\n  color: #eee;\\n  max-height: 120px;\\n  min-width: 120px;\\n  background-color: #607D8B;\\n  border-radius: 2px;\\n}\\n.module:hover {\\n  background-color: #EEE;\\n  cursor: pointer;\\n  color: #607d8b;\\n}\\n.grid-pad {\\n  padding: 10px 0;\\n}\\n.grid-pad > [class*='col-']:last-of-type {\\n  padding-right: 20px;\\n}\\n@media (max-width: 600px) {\\n  .module {\\n    font-size: 10px;\\n    max-height: 75px; }\\n}\\n@media (max-width: 1024px) {\\n  .grid {\\n    margin: 0;\\n  }\\n  .module {\\n    min-width: 60px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDO0VBQ0UsWUFBWTtFQUNaLG9CQUFvQjtFQUNwQixxQkFBcUI7Q0FDdEI7QUFDRDtFQUNFLGlCQUFpQjtDQUNsQjtBQUNEO0VBQ0Usc0JBQXNCO0NBQ3ZCO0FBQ0Q7RUFHRSx1QkFBdUI7Q0FDeEI7QUFDRDtFQUNFLG1CQUFtQixDQUFDLGlCQUFpQjtDQUN0QztBQUNEO0VBQ0UsbUJBQW1CO0NBQ3BCO0FBQ0Q7RUFDRSxVQUFVO0NBQ1g7QUFDRDtFQUNFLFdBQVc7Q0FDWjtBQUNEO0VBQ0UsY0FBYztFQUNkLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQiwwQkFBMEI7RUFDMUIsbUJBQW1CO0NBQ3BCO0FBQ0Q7RUFDRSx1QkFBdUI7RUFDdkIsZ0JBQWdCO0VBQ2hCLGVBQWU7Q0FDaEI7QUFDRDtFQUNFLGdCQUFnQjtDQUNqQjtBQUNEO0VBQ0Usb0JBQW9CO0NBQ3JCO0FBQ0Q7RUFDRTtJQUNFLGdCQUFnQjtJQUNoQixpQkFBaUIsRUFBRTtDQUN0QjtBQUNEO0VBQ0U7SUFDRSxVQUFVO0dBQ1g7RUFDRDtJQUNFLGdCQUFnQjtHQUNqQjtDQUNGIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBEYXNoYm9hcmRDb21wb25lbnQncyBwcml2YXRlIENTUyBzdHlsZXMgKi9cbltjbGFzcyo9J2NvbC0nXSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbn1cbltjbGFzcyo9J2NvbC0nXTpsYXN0LW9mLXR5cGUge1xuICBwYWRkaW5nLXJpZ2h0OiAwO1xufVxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbiosICo6YWZ0ZXIsICo6YmVmb3JlIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5oMyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLWJvdHRvbTogMDtcbn1cbmg0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmdyaWQge1xuICBtYXJnaW46IDA7XG59XG4uY29sLTEtNCB7XG4gIHdpZHRoOiAyNSU7XG59XG4ubW9kdWxlIHtcbiAgcGFkZGluZzogMjBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogI2VlZTtcbiAgbWF4LWhlaWdodDogMTIwcHg7XG4gIG1pbi13aWR0aDogMTIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2MDdEOEI7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbn1cbi5tb2R1bGU6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUVFO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiAjNjA3ZDhiO1xufVxuLmdyaWQtcGFkIHtcbiAgcGFkZGluZzogMTBweCAwO1xufVxuLmdyaWQtcGFkID4gW2NsYXNzKj0nY29sLSddOmxhc3Qtb2YtdHlwZSB7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLm1vZHVsZSB7XG4gICAgZm9udC1zaXplOiAxMHB4O1xuICAgIG1heC1oZWlnaHQ6IDc1cHg7IH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmdyaWQge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuICAubW9kdWxlIHtcbiAgICBtaW4td2lkdGg6IDYwcHg7XG4gIH1cbn0iXX0= */\"","module.exports = \"<router-outlet></router-outlet>\\n<app-messages></app-messages>\"","import { Component, OnInit } from '@angular/core';\nimport { SwUpdate } from '@angular/service-worker';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private swUpdate: SwUpdate) {\n  }\n\n  ngOnInit() {\n    if (this.swUpdate.isEnabled) {\n      this.swUpdate.available.subscribe(() => {\n        if (confirm('A newer version of the application is available. Load the new version ?')) {\n          window.location.reload();\n        }\n      });\n    }\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { CoreModule } from './core.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ErrorModule } from './core/error';\nimport { AppGuiModule } from './app-gui.module';\nimport { AuthModule } from './core/auth/auth.module';\nimport { MaterialModule } from './material.module';\n\nimport { AppComponent } from './app.component';\nimport { MessagesComponent } from './core/messages/messages.component';\nimport { SecuredLayoutComponent } from './layouts/secured.layout';\nimport { UnsecuredLayoutComponent } from './layouts/unsecured.layout';\nimport { LoginComponent } from './core/login/login.component';\nimport { UsersComponent } from './views/user/users.component';\nimport { UserComponent } from './views/user/user.component';\nimport { UserConfirmedComponent } from './views/user/user-confirmed.component';\nimport { DashboardComponent } from './views/dashboard/dashboard.component';\n\nimport { environment } from '../environments/environment';\nimport { LoginDialogComponent } from './core/login/login-dialog.component';\nimport { UserDialogComponent } from './views/user/user-dialog.component';\nimport { HeaderComponent } from './views/header/header.component';\nimport { UserEditComponent } from '@app/views/user/user-edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent,\n    UserComponent,\n    UserConfirmedComponent,\n    UserEditComponent,\n    MessagesComponent,\n    DashboardComponent,\n    SecuredLayoutComponent,\n    UnsecuredLayoutComponent,\n    LoginComponent,\n    LoginDialogComponent,\n    HeaderComponent,\n    UserDialogComponent\n  ],\n  imports: [\n    CoreModule,\n    BrowserModule,\n    LayoutModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    AppRoutingModule,\n    ErrorModule,\n    AuthModule,\n    MaterialModule,\n    AppGuiModule,\n  ],\n  entryComponents: [\n    LoginDialogComponent,\n    UserDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UtilsService } from './core/service/utils.service';\nimport { MessageService } from './core/messages/message.service';\nimport { HttpService } from './core/service/http.service';\nimport { NotificationService } from './core/service/notification.service';\nimport { PaginationService } from './core/service/pagination.service';\nimport { LoginService } from './core/service/login.service';\nimport { UserService } from './views/user/user.service';\n\n// TODO Should the core module only contains services ?\n@NgModule({\n  providers: [\n    UtilsService,\n    MessageService,\n    HttpService,\n    NotificationService,\n    PaginationService,\n    UserService,\n    LoginService\n  ],\n})\nexport class CoreModule {\n\n  // Make sure the core module is imported only once as it contains all global services which are to be singletons\n  constructor(@Optional() @SkipSelf() coreModule: CoreModule) {\n    if (coreModule) {\n      throw new Error('The core module has ALREADY been imported.');\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Router, CanActivate, CanActivateChild, CanLoad, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { of } from 'rxjs';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\nimport { TokenService } from './token.service';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate, CanActivateChild, CanLoad {\n\n  constructor(\n    private router: Router,\n    private tokenService: TokenService,\n    private authService: AuthService\n  ) { }\n\n  // Check if the user can navigate to a route\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.authService.isAuthenticated()\n    .pipe(\n      map(isAuthenticated => {\n        if (!isAuthenticated) {\n          this.authService.setPostLoginRedirectUrl(state.url);\n          this.router.navigate(['login']);\n          return false;\n        } else {\n          return true;\n        }\n      }),\n      catchError((error, caught) => {\n        console.log(error);\n        return of(false);\n      })\n    );\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.authService.isAuthenticated()\n    .pipe(\n      map(isAuthenticated => {\n        if (!isAuthenticated) {\n          this.authService.setPostLoginRedirectUrl(state.url);\n          this.router.navigate(['login']);\n          return false;\n        } else {\n          const expectedRole = route.data.expectedRole ? (environment.ROLE_PREFIX + route.data.expectedRole).toUpperCase() : null;\n          const tokenPayload = this.tokenService.getDecodedAccessToken();\n          const actualRoles = tokenPayload.scopes ? tokenPayload.scopes : null;\n          // Check the role only if the route expects one\n          if (expectedRole != null && (actualRoles == null || !actualRoles.includes(expectedRole))) {\n            this.router.navigate(['home']);\n            return false;\n          } else {\n            return true;\n          }\n        }\n      }),\n      catchError((error, caught) => {\n        console.log(error);\n        return of(false);\n      })\n    );\n  }\n\n  // Check if a module should be loaded\n  // It would be pointless to load a module if the user may not use it\n  canLoad(): Observable<boolean> {\n    if (this.authService.isAuthenticated()) {\n      return of(true);\n    } else {\n      return of(false);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { tap, catchError, take, filter, switchMap } from 'rxjs/operators';\nimport { empty, throwError, Subject } from 'rxjs';\n\nimport { TokenService } from './token.service';\nimport { AuthService } from '../auth/auth.service';\n\nconst PATH_LOGIN = 'login';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  private refreshTokenInProgress = false;\n  tokenRefreshedSource = new Subject();\n  tokenRefreshed$ = this.tokenRefreshedSource.asObservable();\n\n  // Contains the current refresh token or is null if\n  // the refresh is pending and no refresh token is currently available\n  private refreshTokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(\n    null\n  );\n\n  constructor(\n    private router: Router,\n    private tokenService: TokenService,\n    private authService: AuthService\n  ) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (this.authService.isSecuredUrl(request)) {\n      return this.handleRequest(request, next);\n    } else {\n      return next.handle(request);\n    }\n  }\n\n  private handleRequest(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = this.addAccessToken(request);\n    return next.handle(request)\n      .pipe(\n        tap((response: HttpEvent<any>) => {\n          if (response instanceof HttpResponse) {\n          }\n        }),\n        catchError(error => {\n          if (error instanceof HttpErrorResponse) {\n            if (error.status === 401) {\n              console.log('The response returned a 401 error');\n              if (this.authService.isLoginRequest(request)) {\n                return throwError(error);\n              } else if (this.authService.isRefreshTokenRequest(request)) {\n                this.logout();\n                return throwError(error);\n              } else {\n                if (this.authService.rememberMe()) {\n                  // if (this.refreshTokenInProgress) {\n                  //   return this.refreshTokenSubject\n                  //     .pipe(\n                  //       filter(result => result !== null),\n                  //       take(1),\n                  //       switchMap((token: any) => {\n                  //         return next.handle(this.addAuthenticationAccessToken(request));\n                  //       })\n                  //     );\n                  // } else {\n                  //   this.refreshTokenInProgress = true;\n                  //   // Reset the refresh token subject to null so that subsequent\n                  //   // requests will wait until the new refresh token has been retrieved\n                  //   this.refreshTokenSubject.next(null);\n                  //   return this.authService.refreshAccessToken()\n                  //     .pipe(\n                  //       switchMap((token: any) => {\n                  //         this.refreshTokenInProgress = false;\n                  //         this.refreshTokenSubject.next(token);\n                  //         return next.handle(this.addAuthenticationAccessToken(request));\n                  //       })\n                  //     )\n                  //     .pipe(\n                  //       catchError((err: any) => {\n                  //         this.refreshTokenInProgress = false;\n                  //         // this.logout();\n                  //         return throwError(error);\n                  //       })\n                  //     );\n                  // }\n\n                  console.log('Remember me...');\n                  return this.refreshToken()\n                    .pipe(\n                      switchMap(() => {\n                        request = this.addAccessToken(request);\n                        return next.handle(request);\n                      })\n                    )\n                    .pipe(\n                      catchError(\n                        (refreshError) => {\n                          this.authService.logout();\n                          return empty();\n                          // return throwError(refreshError); TODO\n                        })\n                    );\n                }\n              }\n            } else if (error.status === 498) {\n              // The token expired\n              this.logout();\n            }\n            console.log('The response returned the error with the status ' + error.status + ' ' + error.statusText);\n          }\n          return throwError(error);\n        }) as any\n      );\n  }\n\n  private addAccessToken(request): HttpRequest<any> {\n    if (!this.tokenService.getAccessTokenFromLocalStorage()) {\n      return request;\n    }\n\n    // The original request is immutable and cannot be changed\n    return this.authService.addAccessTokenToClonedRequest(request);\n  }\n\n  private refreshToken() {\n    if (this.refreshTokenInProgress) {\n      return new Observable(observer => {\n        this.tokenRefreshed$.subscribe(() => {\n          observer.next();\n          observer.complete();\n        });\n      });\n    } else {\n      this.refreshTokenInProgress = true;\n      console.log('Sending a refresh token request...');\n      return this.authService.refreshAccessToken()\n        .pipe(\n          tap(() => {\n            console.log('The access token has been refreshed by the interceptor');\n            this.refreshTokenInProgress = false;\n            this.tokenRefreshedSource.next();\n          })\n        );\n    }\n  }\n\n  private logout() {\n    this.authService.logout();\n    this.router.navigate(['login']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { JwtModule, JWT_OPTIONS } from '@auth0/angular-jwt';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { KeycloakInterceptor } from './keycloak.interceptor';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { AuthService } from './auth.service';\nimport { KeycloakClientService } from './keycloak-client.service';\nimport { TokenService } from './token.service';\nimport { AuthGuardService } from './auth-guard.service';\n\nexport function jwtOptionsFactory(tokenService: TokenService) {\n  return {\n    // whitelistedDomains: ['localhost:4200'],\n    // blacklistedRoutes: ['localhost:8180/auth/'],\n    tokenGetter: () => {\n      return tokenService.getAccessTokenFromLocalStorage();\n    }\n  };\n}\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    JwtModule.forRoot({\n      jwtOptionsProvider: {\n        provide: JWT_OPTIONS,\n        useFactory: jwtOptionsFactory,\n        deps: [TokenService]\n      }\n    })\n  ],\n  providers: [\n    AuthService,\n    KeycloakClientService,\n    TokenService,\n    AuthGuardService,\n    // {\n    //   provide: HTTP_INTERCEPTORS, TODO\n    //   useClass: KeycloakInterceptor,\n    //   multi: true\n    // },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ]\n})\nexport class AuthModule {\n\n  constructor(keycloakClientService: KeycloakClientService) {\n    // const subscription = keycloakClientService.init() TODO\n    // .subscribe(\n    //   () => {\n    //     console.log('The keycloak client service has been initialized');\n    //   }\n    // );\n    // subscription.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { map, tap, catchError } from 'rxjs/operators';\nimport { of, empty } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\nimport { HttpService } from '../service/http.service';\nimport { TokenService } from '../auth/token.service';\n\nconst PATH_AUTH = 'auth';\nconst PATH_LOGIN = 'login';\nconst URI_LOGIN = environment.BASE_REST_URI + '/' + PATH_AUTH + '/' + PATH_LOGIN;\nconst PATH_LOGOUT = 'logout';\nconst URI_LOGOUT = environment.BASE_REST_URI + '/' + PATH_AUTH + '/' + PATH_LOGOUT;\nconst PATH_TOKEN_REFRESH = 'token-refresh';\nconst URI_REFRESH_TOKEN = environment.BASE_REST_URI + '/' + PATH_AUTH + '/' + PATH_TOKEN_REFRESH;\n\n@Injectable()\nexport class AuthService {\n\n  private postLoginRedirectUrl: string;\n\n  constructor(\n    private httpService: HttpService,\n    private tokenService: TokenService) { }\n\n  public login(username: string, password: string): Observable<any> {\n    console.log('Sending the login credentials to obtain a token');\n    const credentials = { 'email': username, 'password': password };\n    let httpHeaders: HttpHeaders = this.httpService.buildHeader(null);\n    httpHeaders = this.addClientIdHeader(httpHeaders);\n    return this.httpService.postWithHeadersInResponse(URI_LOGIN, credentials, httpHeaders)\n      .pipe(\n        map((response: HttpResponse<any>) => {\n          this.storeTokensInLocalStorage(response);\n        })\n      );\n  }\n\n  public logout(): Observable<any> {\n    return this.httpService.postWithHeadersInResponse(URI_LOGOUT, {})\n      .pipe(\n        map((response: HttpResponse<any>) => {\n          this.clearTokensFromLocalStorage(response);\n        })\n      );\n  }\n\n  public isAuthenticated(): Observable<boolean> {\n    if (this.tokenService.accessTokenExpired()) {\n      console.log('The access token expired.');\n      if (this.tokenService.refreshTokenExpired()) {\n        console.log('The refresh token expired.');\n        return of(false);\n      } else {\n        return this.refreshAccessToken()\n        .pipe(\n          map(response => {\n            if (response) {\n              console.log('The access token has been refreshed');\n              return true;\n            }\n          }),\n          catchError((error, caught) => {\n            console.log('The access token could not be refreshed');\n            console.log(error);\n            return of(false);\n          })\n        );\n      }\n    } else {\n      return of(true);\n    }\n  }\n\n  private storeTokensInLocalStorage(response: HttpResponse<any>): void {\n    this.storeAccessTokenInLocalStorage(response);\n    this.storeRefreshTokenInLocalStorage(response);\n  }\n\n  private storeAccessTokenInLocalStorage(response: HttpResponse<any>): void {\n    const accessTokenHeader = response.headers.get(this.tokenService.getAccessTokenHeaderName());\n    if (null != accessTokenHeader) {\n      const accessToken = this.tokenService.extractTokenFromHeaderValue(accessTokenHeader);\n      if (null != accessToken) {\n        console.log('Storing the access token from the response header: ' + accessToken);\n        this.tokenService.setAccessTokenToLocalStorage(accessToken);\n      }\n    }\n  }\n\n  private storeRefreshTokenInLocalStorage(response: HttpResponse<any>): void {\n    const name = this.tokenService.getRefreshTokenHeaderName();\n    const refreshTokenHeader = response.headers.get(this.tokenService.getRefreshTokenHeaderName());\n    if (null != refreshTokenHeader) {\n      const refreshToken = this.tokenService.extractTokenFromHeaderValue(refreshTokenHeader);\n      if (null != refreshToken) {\n        console.log('Storing the refresh token from the response header: ' + refreshToken);\n        this.tokenService.setRefreshTokenToLocalStorage(refreshToken);\n      }\n    }\n  }\n\n  private clearTokensFromLocalStorage(response: HttpResponse<any>): void {\n    this.tokenService.setAccessTokenToLocalStorage('');\n    this.tokenService.setRefreshTokenToLocalStorage('');\n  }\n\n  private addRefreshTokenHeader(httpHeaders: HttpHeaders): HttpHeaders {\n    const refreshHeaderName: string = this.tokenService.getRefreshTokenHeaderName();\n    const refreshToken: string = this.tokenService.buildRefreshTokenValue();\n    httpHeaders = httpHeaders.append(refreshHeaderName, refreshToken);\n    return httpHeaders;\n  }\n\n  private addClientIdHeader(httpHeaders: HttpHeaders): HttpHeaders {\n    const clientIdHeaderName: string = this.tokenService.getClientIdHeaderName();\n    const clientId: string = environment.CLIENT_ID;\n    httpHeaders = httpHeaders.append(clientIdHeaderName, clientId);\n    return httpHeaders;\n  }\n\n  public refreshAccessToken(): Observable<any> {\n    console.log('Sending the refresh token to obtain a new access token');\n    let httpHeaders: HttpHeaders = this.httpService.buildHeader(null);\n    httpHeaders = this.addRefreshTokenHeader(httpHeaders);\n    httpHeaders = this.addClientIdHeader(httpHeaders);\n\n    return this.httpService.postWithHeadersInResponse(URI_REFRESH_TOKEN, {}, httpHeaders)\n      .pipe(\n        map((response: HttpResponse<any>) => {\n          // Only the access token is refreshed\n          // Refresing the refresh token would be like giving a never expiring refresh token\n          this.storeAccessTokenInLocalStorage(response);\n          console.log('Stored the refreshed access token in the local storage');\n          return true;\n        })\n      );\n  }\n\n  public isLoginRequest(request: HttpRequest<any>) {\n    return request.url.includes(PATH_LOGIN);\n  }\n\n  public isRefreshTokenRequest(request: HttpRequest<any>) {\n    return request.url.includes(PATH_TOKEN_REFRESH);\n  }\n\n  public isSecuredUrl(request: HttpRequest<any>) {\n    if (request.url.match(URI_LOGIN) || request.url.match(URI_REFRESH_TOKEN)) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  public rememberMe(): boolean {\n    return true; // TODO Implement the remember me\n  }\n\n  public addAccessTokenToClonedRequest(request: HttpRequest<any>): HttpRequest<any> {\n    const accessTokenHeaderName: string = this.tokenService.getAccessTokenHeaderName();\n    return request.clone({\n      setHeaders: {\n        [accessTokenHeaderName]: this.tokenService.buildAccessTokenValue(),\n        // The cache and pragma headers prevent IE from caching GET 200 requests\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache'\n      }\n    });\n  }\n\n  public setPostLoginRedirectUrl(postLoginRedirectUrl: string) {\n    this.postLoginRedirectUrl = postLoginRedirectUrl;\n  }\n\n  public getPostLoginRedirectUrl() {\n    return this.postLoginRedirectUrl;\n  }\n\n  /* TODO\n    public hasRole(role: string): boolean {\n      return KeycloakClientService.auth.authz.tokenParsed.realm_access.roles.indexOf(role) > -1;\n    }\n\n    public getRealmRoles(): void {\n      return KeycloakClientService.auth.authz.realmAccess.roles;\n    }\n\n    public hasRealmRole(role: String): boolean {\n      return KeycloakClientService.auth.authz.hasRealmRole(role);\n    }\n\n    public getUsername(): string {\n      return KeycloakClientService.auth.authz.tokenParsed.preferred_username;\n    }\n\n    public getFullName(): string {\n      return KeycloakClientService.auth.authz.tokenParsed.name;\n    }\n\n    public getToken(): Observable<string> {\n      console.log('Getting the retrieved token');\n      return new Observable<string>((observer) => {\n        if (KeycloakClientService.auth.authz && KeycloakClientService.auth.authz.token) {\n          KeycloakClientService.auth.authz\n            .updateToken(5) // Refresh the token if it will expire in n seconds or less\n            .success(() => {\n              observer.next(<string>KeycloakClientService.auth.authz.token);\n              observer.complete();\n            })\n            .error(() => {\n              observer.error('Failed to refresh the auth token');\n            });\n        } else {\n          observer.error('The auth token could not be retrieved because the user was not logged in');\n        }\n      });\n    }\n\n    public clearToken(): void {\n      KeycloakClientService.auth.authz.clearToken();\n    }\n\n    public accountManagement(): void {\n      KeycloakClientService.auth.authz.accountManagement();\n    }\n\n    public getConfiguration(): object {\n      const notAvailable = 'N/A';\n      return {\n        'authServerUrl': KeycloakClientService.auth.authz.authServerUrl ? KeycloakClientService.auth.authz.authServerUrl : notAvailable,\n        'openIdFlow': KeycloakClientService.auth.authz.flow ? KeycloakClientService.auth.authz.flow : notAvailable,\n        'openIdResponseMode': KeycloakClientService.auth.authz.responseMode ? KeycloakClientService.auth.authz.responseMode : notAvailable,\n        'openIdResponseType': KeycloakClientService.auth.authz.responseType ? KeycloakClientService.auth.authz.responseType : notAvailable,\n        'realm': KeycloakClientService.auth.authz.realm ? KeycloakClientService.auth.authz.realm : notAvailable,\n        'clientId': KeycloakClientService.auth.authz.clientId ? KeycloakClientService.auth.authz.clientId : notAvailable,\n        'timeSkew': KeycloakClientService.auth.authz.timeSkew ? KeycloakClientService.auth.authz.timeSkew : notAvailable\n      };\n    }\n\n    public loadUserProfile(): any {\n      return new Promise((resolve, reject) => {\n        KeycloakClientService.auth.authz.loadUserProfile().success((profile) => {\n          resolve(<object>profile);\n        }).error(() => {\n          reject('Failed to retrieve user profile');\n        });\n      });\n    }\n  */\n}\n","import { Injectable, Injector, NgZone } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\ndeclare let Keycloak: any;\n\n@Injectable()\nexport class KeycloakClientService {\n\n  static auth: any = {};\n\n  constructor(private httpClient: HttpClient, private zone: NgZone) { }\n\n  public init(): Observable<any> {\n    KeycloakClientService.auth.loggedIn = false;\n    return new Observable((observer) => {\n      const keycloakConfig = {\n        'url': environment.KEYCLOAK_URI,\n        'realm': environment.KEYCLOAK_REALM,\n        'clientId': environment.KEYCLOAK_CLIENTID,\n        'ssl-required': 'external',\n        'public-client': true\n      };\n      const keycloakAuth: any = new Keycloak(keycloakConfig);\n\n      keycloakAuth.init({ 'onLoad': 'check-sso' })\n        .success(() => {\n          KeycloakClientService.auth.loggedIn = true;\n          KeycloakClientService.auth.authz = keycloakAuth;\n          KeycloakClientService.auth.logoutUrl = environment.KEYCLOAK_URI\n            + '/realms/' + environment.KEYCLOAK_REALM + '/protocol/openid-connect/logout?redirect_uri='\n            + document.baseURI;\n          console.log('The keycloak auth has been initialized');\n          observer.next('Succeeded in initiating the keycloak client');\n          observer.complete();\n        })\n        .error(() => {\n          console.log('The keycloak client could not be initiated');\n          observer.error('Failed to initiate the keycloak client');\n        });\n    });\n  }\n\n  public login(ussername: string, password: string): Observable<any> {\n    console.log('Sending the login credentials to obtain a token');\n    const credentials = { username: ussername, password: password };\n    const url: string = environment.KEYCLOAK_URI + '/realms/' + environment.KEYCLOAK_REALM\n      + '/protocol/openid-connect/token/generate-token';\n    return this.httpClient.post(url, credentials);\n  }\n\n  public logout(): void {\n    KeycloakClientService.auth.loggedIn = false;\n    KeycloakClientService.auth.authz = null;\n    window.location.href = KeycloakClientService.auth.logoutUrl;\n  }\n\n  public hasRole(role: string): boolean {\n    return KeycloakClientService.auth.authz.tokenParsed.realm_access.roles.indexOf(role) > -1;\n  }\n\n  public getRealmRoles(): void {\n    return KeycloakClientService.auth.authz.realmAccess.roles;\n  }\n\n  public hasRealmRole(role: String): boolean {\n    return KeycloakClientService.auth.authz.hasRealmRole(role);\n  }\n\n  public getUsername(): string {\n    return KeycloakClientService.auth.authz.tokenParsed.preferred_username;\n  }\n\n  public getFullName(): string {\n    return KeycloakClientService.auth.authz.tokenParsed.name;\n  }\n\n  public getToken(): Observable<string> {\n    console.log('Getting the retrieved token');\n    return new Observable<string>((observer) => {\n      if (KeycloakClientService.auth.authz && KeycloakClientService.auth.authz.token) {\n        KeycloakClientService.auth.authz\n          .updateToken(5) // Refresh the token if it will expire in n seconds or less\n          .success(() => {\n            observer.next(<string>KeycloakClientService.auth.authz.token);\n            observer.complete();\n          })\n          .error(() => {\n            observer.error('Failed to refresh the auth token');\n          });\n      } else {\n        observer.error('The auth token could not be retrieved because the user was not logged in');\n      }\n    });\n  }\n\n  public clearToken(): void {\n    KeycloakClientService.auth.authz.clearToken();\n  }\n\n  public accountManagement(): void {\n    KeycloakClientService.auth.authz.accountManagement();\n  }\n\n  public getConfiguration(): object {\n    const notAvailable = 'N/A';\n    return {\n      'authServerUrl': KeycloakClientService.auth.authz.authServerUrl ? KeycloakClientService.auth.authz.authServerUrl : notAvailable,\n      'openIdFlow': KeycloakClientService.auth.authz.flow ? KeycloakClientService.auth.authz.flow : notAvailable,\n      'openIdResponseMode': KeycloakClientService.auth.authz.responseMode ? KeycloakClientService.auth.authz.responseMode : notAvailable,\n      'openIdResponseType': KeycloakClientService.auth.authz.responseType ? KeycloakClientService.auth.authz.responseType : notAvailable,\n      'realm': KeycloakClientService.auth.authz.realm ? KeycloakClientService.auth.authz.realm : notAvailable,\n      'clientId': KeycloakClientService.auth.authz.clientId ? KeycloakClientService.auth.authz.clientId : notAvailable,\n      'timeSkew': KeycloakClientService.auth.authz.timeSkew ? KeycloakClientService.auth.authz.timeSkew : notAvailable\n    };\n  }\n\n  public loadUserProfile(): any {\n    return new Promise((resolve, reject) => {\n      KeycloakClientService.auth.authz.loadUserProfile().success((profile) => {\n        resolve(<object>profile);\n      }).error(() => {\n        reject('Failed to retrieve user profile');\n      });\n    });\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n// See https://github.com/auth0/angular2-jwt\n\nconst ACCESS_TOKEN_NAME = 'accessToken';\nconst REFRESH_TOKEN_NAME = 'refreshToken';\nconst ACCESS_TOKEN_HEADER_NAME = 'Authorization';\nconst AUTH_BEARER_HEADER = 'Bearer';\nconst REFRESH_TOKEN_HEADER_NAME = 'TokenRefresh';\nconst CLIENT_ID_HEADER_NAME = 'ClientId';\n\n@Injectable()\nexport class TokenService {\n\n  // See https://stackoverflow.com/questions/49240232/getting-a-cyclic-dependency-error\n  jwtHelperService = new JwtHelperService();\n  constructor() { }\n  // constructor(private jwtHelperService: JwtHelperService) {}\n\n  public accessTokenExpired(): boolean {\n    const token = this.getAccessTokenFromLocalStorage();\n    return (!token || this.jwtHelperService.isTokenExpired(token));\n  }\n\n  public refreshTokenExpired(): boolean {\n    const token = this.getRefreshTokenFromLocalStorage();\n    return (!token || this.jwtHelperService.isTokenExpired(token));\n  }\n\n  public getAccessTokenExpirationDate() {\n    const token = this.getAccessTokenFromLocalStorage();\n    return this.jwtHelperService.getTokenExpirationDate(token);\n  }\n\n  public getDecodedAccessToken() {\n    const token = this.getAccessTokenFromLocalStorage();\n    return this.jwtHelperService.decodeToken(token);\n  }\n\n  public getAccessTokenFromLocalStorage(): string {\n    return localStorage.getItem(ACCESS_TOKEN_NAME);\n  }\n\n  public setAccessTokenToLocalStorage(token: string): void {\n    localStorage.setItem(ACCESS_TOKEN_NAME, token);\n  }\n\n  public getRefreshTokenFromLocalStorage(): string {\n    return localStorage.getItem(REFRESH_TOKEN_NAME);\n  }\n\n  public setRefreshTokenToLocalStorage(token: string): void {\n    localStorage.setItem(REFRESH_TOKEN_NAME, token);\n  }\n\n  public extractTokenFromHeaderValue(header: string): string {\n    if (header.startsWith(AUTH_BEARER_HEADER)) {\n      return header.substring(7, header.length);\n    } else {\n      return null;\n    }\n  }\n\n  public buildAccessTokenValue(): string {\n    return AUTH_BEARER_HEADER + ' ' + this.getAccessTokenFromLocalStorage();\n  }\n\n  public buildRefreshTokenValue(): string {\n    return AUTH_BEARER_HEADER + ' ' + this.getRefreshTokenFromLocalStorage();\n  }\n\n  public getAccessTokenHeaderName() {\n    return ACCESS_TOKEN_HEADER_NAME;\n  }\n\n  public getRefreshTokenHeaderName() {\n    return REFRESH_TOKEN_HEADER_NAME;\n  }\n\n  public getClientIdHeaderName() {\n    return CLIENT_ID_HEADER_NAME;\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ErrorHandler } from '@angular/core';\n\nimport { ErrorService } from './error.service';\nimport { NotificationService } from '../service/notification.service';\n\n@Injectable()\nexport class ErrorCustomHandler implements ErrorHandler {\n\n    constructor(private injector: Injector) { }\n\n    handleError(error: Error | HttpErrorResponse): void {\n        const notificationService = this.injector.get(NotificationService);\n        const errorService = this.injector.get(ErrorService);\n        const router = this.injector.get(Router);\n\n        if (error instanceof HttpErrorResponse) {\n            // Handle server or connection errors\n            if (!navigator.onLine) {\n                // TODO return notificationService.notify('No Internet Connection');\n                console.log('No internet connection');\n            } else {\n                // Handle Http errors (like error.status === 403, 404...)\n                console.log('An HTTP error occured');\n                errorService.log(error).subscribe(errorWithContextInfo => {\n                    console.log(errorWithContextInfo);\n                });\n                // TODO return notificationService.notify(`${error.status} - ${error.message}`);\n            }\n        } else {\n            // Handle client errors (Angular Error, ReferenceError...)\n            // Client errors can completely crash the app,\n            // or originate corrupt data that could be stored in the server,\n            // or keep the user working on stuff that wouldn’t be saved\n            // If something is broken in the app, stop the app and\n            // redirect the user to an error screen with all the information\n            console.log('A client error occured');\n            errorService.log(error).subscribe(errorWithContextInfo => {\n                console.log(errorWithContextInfo);\n                router.navigate(['error'], { queryParams: errorWithContextInfo });\n            });\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor,\n    HttpResponse,\n    HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { of, throwError } from 'rxjs';\nimport { catchError, retryWhen, switchMap, delay, take, concat } from 'rxjs/operators';\n\nimport { ErrorCustomHandler } from './error-custom-handler';\n\n// Because the best Error is the one that never happens, improve the error handling\n// using an HttpInterceptor to intercept all the server calls and retry them n times\n// before throwing an error\nconst NB_RETRIES = 3;\nconst HTTP_SERVER_ERROR = /^5.*$/;\n\n@Injectable()\nexport class ErrorRequestInterceptor implements HttpInterceptor {\n\n    constructor(\n        private errorCustomHandler: ErrorCustomHandler\n    ) { }\n\n    // TODO https://stackoverflow.com/questions/51999929\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(\n            retryWhen(errors => {\n                return errors\n                    .pipe(\n                        switchMap(error => {\n                            if (this.isServerError(error)) {\n                                return of(error)\n                                    .pipe(\n                                        delay(200)\n                                    );\n                            } else {\n                                return throwError(error);\n                            }\n                        })\n                    )\n                    .pipe(\n                        take(NB_RETRIES)\n                    )\n                    .pipe(\n                        concat(\n                            throwError({ error: 'There was a server error (after ' + NB_RETRIES + ' retries)' })\n                        )\n                    );\n            })\n        );\n    }\n\n    private isServerError(error): boolean {\n        return HTTP_SERVER_ERROR.test((error.status.toString()));\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ErrorComponent } from './error.component';\n\nconst routes: Routes = [\n  { path: 'error', component: ErrorComponent },\n  { path: '**', component: ErrorComponent, data: { error: 404 } },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ErrorRoutingModule { }\n","module.exports = \"<div>\\n    <div *ngIf=\\\"routeParams?.message\\\">\\n        <div>Message : {{ routeParams?.message }}</div>\\n        <div>Stack : {{ routeParams?.stack }}</div>\\n        <div>Name : {{ routeParams?.name }}</div>\\n        <div>Url : {{ routeParams?.url }}</div>\\n        <div>User : {{ routeParams?.user }}</div>\\n        <div>Time : {{ routeParams?.time | date : 'yyyy-MM-dd HH:mm:ss'}}</div>\\n        <div>Application : {{ routeParams?.appId }}</div>\\n        <div>Id : {{ routeParams?.id }}</div>\\n    </div>\\n    <div *ngIf=\\\"data\\\">\\n        <div>{{ data }}</div>\\n    </div>\\n    <div>\\n        <a mat-raised-button [routerLink]=\\\"'/'\\\">Home</a>\\n    </div>\\n</div>\"","module.exports = \"h1, h3, h4, h5 {\\n  margin-bottom: 0;\\n  margin-top: 10px; }\\n\\n.error-container {\\n  width: 220px;\\n  margin: 0 auto;\\n  margin-top: 50%;\\n  -webkit-transform: translateY(-50%);\\n          transform: translateY(-50%);\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3N0ZXBoYW5lL2Rldi9qcy9wcm9qZWN0cy9hbmd1bGFyL25nLXplcm8vc3JjL2FwcC9jb3JlL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQWdCO0VBQ2hCLGlCQUFnQixFQUNqQjs7QUFFRDtFQUNFLGFBQVk7RUFDWixlQUFjO0VBQ2QsZ0JBQWU7RUFDZixvQ0FBMkI7VUFBM0IsNEJBQTJCO0VBQzNCLG1CQUFrQixFQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvZXJyb3IvZXJyb3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMSwgaDMsIGg0LCBoNSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICB9XG4gIFxuICAuZXJyb3ItY29udGFpbmVyIHtcbiAgICB3aWR0aDogMjIwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWFyZ2luLXRvcDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n    selector: 'app-error',\n    templateUrl: './error.component.html',\n    styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n    routeParams;\n    data;\n\n    constructor(private activatedRoute: ActivatedRoute) { }\n\n    ngOnInit() {\n        this.routeParams = this.activatedRoute.snapshot.queryParams;\n        this.data = this.activatedRoute.snapshot.data;\n    }\n}\n","import { NgModule, ErrorHandler, Optional, SkipSelf } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { ErrorCustomHandler } from './error-custom-handler';\nimport { ErrorService } from './error.service';\nimport { ErrorRoutingModule } from './error-routing.module';\nimport { ErrorComponent } from './error.component';\nimport { ErrorRequestInterceptor } from './error-request-interceptor';\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\n\n// See https://medium.com/@aleixsuau/error-handling-angular-859d529fa53a\n\n@NgModule({\n    declarations: [\n        ErrorComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        ErrorRoutingModule,\n    ],\n    providers: [\n        ErrorService,\n        {\n            provide: ErrorHandler,\n            useClass: ErrorCustomHandler\n        },\n        ErrorCustomHandler,\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ErrorRequestInterceptor,\n            multi: true,\n        }\n    ]\n})\nexport class ErrorModule { }\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { HttpErrorResponse, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router, Event, NavigationError } from '@angular/router';\n\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs';\n\nimport * as StackTraceParser from 'error-stack-parser';\n\n@Injectable()\nexport class ErrorService {\n\n    constructor(\n        private injector: Injector,\n        private router: Router,\n        private httpClient: HttpClient,\n    ) {\n        // Subscribe to the navigation errors\n        this.router\n            .events\n            .subscribe((event: Event) => {\n                if (event instanceof NavigationError) {\n                    this.log(event.error)\n                        .subscribe((errorWithContext) => {\n                            this.router.navigate(['error'], { queryParams: errorWithContext });\n                        });\n                }\n            });\n    }\n\n    public log(error) {\n        const errorWithContext = this.addContextInfo(error);\n        return MockHttpService.post(errorWithContext); // TODO Implement a server side error inbox\n    }\n\n    private addContextInfo(error) {\n        const appId = 'My API id'; // TODO get an env variable\n        const location = this.injector.get(LocationStrategy);\n        const url = location instanceof PathLocationStrategy ? location.path() : '';\n        const time = new Date().getTime();\n\n        const name = error.name || null;\n        const user = ''; // TODO get the logged in user\n        const id = `${appId}-${user}-${time}`;\n        const status = error.status || null;\n        const message = (error && error.body) ? error.body.error : error.toString();\n        const stack = error instanceof HttpErrorResponse ? null : error; // TODO StackTraceParser.parse(error);\n        const method = (stack && stack[0]) ? stack[0].functionName : null;\n\n        const errorWithContext = { message, method, name, appId, user, time, id, url, status, stack };\n        return errorWithContext;\n    }\n\n    fireFakeClientError() {\n        throw new Error('Another runtime error)');\n        // As the 'it' object is not defined, this should produce a runtime error\n        // return it.happens;\n    }\n\n    fireFakeServerError() {\n        this.httpClient\n            .get('https://jsonplaceholder.typicode.com/1')\n            .subscribe();\n    }\n}\n\nclass MockHttpService {\n    static post(error): Observable<any> {\n        return of(error);\n    }\n}\n","export { ErrorModule } from './error.module';\nexport { ErrorService } from './error.service';\nexport { ErrorCustomHandler } from './error-custom-handler';\nexport { ErrorComponent } from './/error.component';\n","module.exports = \"<h1 mat-dialog-title>Login</h1>\\n<form [formGroup]=\\\"myform\\\" (ngSubmit)=\\\"submit(myform)\\\">\\n\\t<h1 mat-dialog-title>Add file</h1>\\n\\t<mat-dialog-content>\\n\\t\\t<mat-form-field>\\n\\t\\t\\t<input matInput formControlName=\\\"username\\\" placeholder=\\\"Enter your login name\\\">\\n\\t\\t\\t<mat-hint align=\\\"start\\\"><strong>Some hint</strong></mat-hint>\\n\\t\\t\\t<mat-hint align=\\\"end\\\">Some other hint</mat-hint>\\n\\t\\t\\t<mat-error>This field is required</mat-error>\\n\\t\\t</mat-form-field>\\n\\t</mat-dialog-content>\\n\\t<mat-dialog-actions>\\n\\t\\t<button mat-button type=\\\"submit\\\">Add</button>\\n\\t\\t<button mat-button type=\\\"button\\\" mat-dialog-close>Cancel</button>\\n\\t</mat-dialog-actions>\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-login-dialog',\n  templateUrl: './login-dialog.component.html'\n})\nexport class LoginDialogComponent implements OnInit {\n\n  myform: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private loginDialog: MatDialogRef<LoginDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data\n  ) { }\n\n  ngOnInit() {\n    this.myform = this.formBuilder.group({\n      username: this.data ? this.data.name : ''\n    });\n  }\n\n  submit(form) {\n    this.loginDialog.close(`${this.myform.value.username}`);\n  }\n\n}\n","module.exports = \"mat-card {\\n    max-width: 400px;\\n    margin: 2em auto;\\n    text-align: center;\\n}\\n\\n.signin-content {\\n    padding: 60px 1rem;\\n}\\n\\n.full-width-input {\\n    width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixtQkFBbUI7Q0FDdEI7O0FBRUQ7SUFDSSxtQkFBbUI7Q0FDdEI7O0FBRUQ7SUFDSSxZQUFZO0NBQ2YiLCJmaWxlIjoic3JjL2FwcC9jb3JlL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICBtYXJnaW46IDJlbSBhdXRvO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnNpZ25pbi1jb250ZW50IHtcbiAgICBwYWRkaW5nOiA2MHB4IDFyZW07XG59XG5cbi5mdWxsLXdpZHRoLWlucHV0IHtcbiAgICB3aWR0aDogMTAwJTtcbn0iXX0= */\"","module.exports = \"  <div class=\\\"signin-content\\\">\\n\\t<mat-card>\\n\\t\\t<mat-card-header>\\n\\t\\t\\t<mat-card-title>Login</mat-card-title>\\n\\t\\t</mat-card-header>\\n\\t\\t\\t<mat-card-content>\\n\\t\\t\\t<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"login()\\\">\\n\\t\\t\\t\\t<p>Please login to continue</p>\\n\\t\\t\\t\\t<mat-form-field class=\\\"full-width-input\\\">\\n\\t\\t\\t\\t\\t<input matInput placeholder=\\\"User\\\" formControlName=\\\"username\\\" required>\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"isFieldInvalid('username')\\\">\\n\\t\\t\\t\\t\\t\\tPlease inform your user name\\n\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<mat-form-field class=\\\"full-width-input\\\">\\n\\t\\t\\t\\t\\t<input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required>\\n\\t\\t\\t\\t\\t<mat-error *ngIf=\\\"isFieldInvalid('password')\\\">\\n\\t\\t\\t\\t\\t\\tPlease inform your password\\n\\t\\t\\t\\t\\t</mat-error>\\n\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t<button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Login</button>\\n\\t\\t\\t</form>\\n\\t\\t</mat-card-content>\\n\\t</mat-card>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialogRef, MatDialog, MatDialogConfig } from '@angular/material';\nimport { filter } from 'rxjs/operators';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { TokenService } from '../auth/token.service';\nimport { LoginService } from '../service/login.service';\nimport { LoginDialogComponent } from './login-dialog.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username = 'mittiprovence@yahoo.se';\n  password = 'mignet';\n\n  form: FormGroup;\n  private formSubmitAttempt: boolean;\n\n  loginDialog: MatDialogRef<LoginDialogComponent>;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dialog: MatDialog,\n    private tokenService: TokenService,\n    private loginService: LoginService\n  ) { }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      username: [this.username, Validators.required],\n      password: [this.password, Validators.required]\n    });\n  }\n\n  isFieldInvalid(field: string): boolean {\n    return (\n      (!this.form.get(field).valid && this.form.get(field).touched) ||\n      (this.form.get(field).untouched && this.formSubmitAttempt)\n    );\n  }\n\n  login(): void {\n    if (this.form.valid) {\n      this.loginService.login(this.form.get('username').value, this.form.get('password').value);\n    }\n  }\n\n  openLoginDialog(username?): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.hasBackdrop = false;\n    dialogConfig.data = {\n      login: username ? username : ''\n    };\n    this.loginDialog = this.dialog.open(LoginDialogComponent, dialogConfig);\n\n    this.loginDialog.afterClosed().subscribe(name => {\n      console.log(name);\n      this.username = name;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MessageService {\n\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","module.exports = \"/* MessagesComponent's private CSS styles */\\nh2 {\\n  color: red;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-weight: lighter;\\n}\\nbody {\\n  margin: 2em;\\n}\\nbody, input[text], button {\\n  color: crimson;\\n  font-family: Cambria, Georgia;\\n}\\nbutton.clear {\\n  font-family: Arial;\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  cursor: hand;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #aaa;\\n  cursor: auto;\\n}\\nbutton.clear {\\n  color: #888;\\n  margin-bottom: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9tZXNzYWdlcy9tZXNzYWdlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDRDQUE0QztBQUM1QztFQUNFLFdBQVc7RUFDWCwwQ0FBMEM7RUFDMUMscUJBQXFCO0NBQ3RCO0FBQ0Q7RUFDRSxZQUFZO0NBQ2I7QUFDRDtFQUNFLGVBQWU7RUFDZiw4QkFBOEI7Q0FDL0I7QUFFRDtFQUNFLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCLGFBQWE7Q0FDZDtBQUNEO0VBQ0UsMEJBQTBCO0NBQzNCO0FBQ0Q7RUFDRSx1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLGFBQWE7Q0FDZDtBQUNEO0VBQ0UsWUFBWTtFQUNaLG9CQUFvQjtDQUNyQiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIE1lc3NhZ2VzQ29tcG9uZW50J3MgcHJpdmF0ZSBDU1Mgc3R5bGVzICovXG5oMiB7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogbGlnaHRlcjtcbn1cbmJvZHkge1xuICBtYXJnaW46IDJlbTtcbn1cbmJvZHksIGlucHV0W3RleHRdLCBidXR0b24ge1xuICBjb2xvcjogY3JpbXNvbjtcbiAgZm9udC1mYW1pbHk6IENhbWJyaWEsIEdlb3JnaWE7XG59XG5cbmJ1dHRvbi5jbGVhciB7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcbiAgYm9yZGVyOiBub25lO1xuICBwYWRkaW5nOiA1cHggMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGN1cnNvcjogaGFuZDtcbn1cbmJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjZmQ4ZGM7XG59XG5idXR0b246ZGlzYWJsZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlO1xuICBjb2xvcjogI2FhYTtcbiAgY3Vyc29yOiBhdXRvO1xufVxuYnV0dG9uLmNsZWFyIHtcbiAgY29sb3I6ICM4ODg7XG4gIG1hcmdpbi1ib3R0b206IDEycHg7XG59Il19 */\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\t<h2>Messages</h2>\\n\\t<button class=\\\"clear\\\" (click)=\\\"messageService.clear()\\\">clear</button>\\n\\t<div *ngFor='let message of messageService.messages'>{{message}}\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { MessageService } from './message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n  // TODO Use this component somewhere, in a page, to list of the messages\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient, HttpParams, HttpHeaders, HttpEvent } from '@angular/common/http';\n\n@Injectable()\nexport class HttpService {\n\n    constructor(private httpClient: HttpClient) { }\n\n    public get<T>(url: string, httpParams?: HttpParams | null, headers?: HttpHeaders | null): Observable<T> {\n        let options = this.buildOptions(headers);\n        options = this.addOptionParams(options, httpParams);\n        return this.httpClient.get<T>(url, options);\n    }\n\n    public post<T>(url: string, body: object, headers?: HttpHeaders | null): Observable<T> {\n        return this.httpClient.post<T>(url, body, this.buildOptions(headers));\n    }\n\n    public postWithHeadersInResponse<T>(url: string, body: object, headers?: HttpHeaders | null): Observable<T> {\n        let options = this.buildOptions(headers);\n        options = this.addOptionForCompleteResponse(options);\n        return this.httpClient.post<T>(url, body, options);\n    }\n\n    public put<T>(url: string, body: object, headers?: HttpHeaders | null): Observable<T> {\n        return this.httpClient.put<T>(url, body, this.buildOptions(headers));\n    }\n\n    public patch<T>(url: string, body: object, headers?: HttpHeaders | null): Observable<T> {\n        return this.httpClient.patch<T>(url, body, this.buildOptions(headers));\n    }\n\n    public delete<T>(url: string, headers?: HttpHeaders | null): Observable<T> {\n        return this.httpClient.delete<T>(url, this.buildOptions(headers));\n    }\n\n    private buildOptions(headers: HttpHeaders) {\n        const options = {\n            headers: this.buildHeader(headers),\n            responseType: 'json' as 'json'\n        };\n        return options;\n    }\n\n    private addOptionParams(options, httpParams) {\n        options['params'] = httpParams;\n        return options;\n    }\n\n    // Have the response headers included in the response object\n    private addOptionForCompleteResponse(options) {\n        options['observe'] = 'response' as 'body';\n        return options;\n    }\n\n    public buildHeader(headers: HttpHeaders | null): HttpHeaders {\n        headers = headers || new HttpHeaders();\n        headers = headers.set('Content-Type', 'application/json');\n        headers = headers.set('Accept', 'application/json');\n        return headers;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable()\nexport class LoginService {\n\n    constructor(\n        private router: Router,\n        private authService: AuthService\n    ) { }\n\n    login(username: string, password: string) {\n        this.authService.login(username, password).subscribe(\n            response => {\n                if (this.authService.getPostLoginRedirectUrl() != null) {\n                    this.router.navigateByUrl(this.authService.getPostLoginRedirectUrl());\n                } else {\n                    this.router.navigate(['users']);\n                }\n            },\n            error => {\n                console.log(error);\n            }\n        );\n    }\n\n    logout() {\n        this.authService.logout().subscribe(\n            response => {\n                this.router.navigate(['login']);\n            },\n            error => {\n                console.log(error);\n            }\n        );\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { publish, refCount } from 'rxjs/operators';\n\n@Injectable()\nexport class NotificationService {\n\n    private _notification: BehaviorSubject<string> = new BehaviorSubject(null);\n    readonly notification$: Observable<string> = this._notification.asObservable().pipe(publish(refCount()));\n\n    constructor() { }\n\n    notify(message) {\n        this._notification.next(message);\n        setTimeout(() => this._notification.next(null), 3000);\n    }\n\n}\n","export class PaginationApi {\n\n    constructor(currentPageNumber: number, elementsPerPage: number, totalElements: number, totalPages: number) {\n        this.currentPageNumber = currentPageNumber;\n        this.elementsPerPage = elementsPerPage;\n        this.totalElements = totalElements;\n        this.totalPages = totalPages;\n    }\n\n    currentPageNumber: number;\n    elementsPerPage: number;\n    totalElements: number;\n    totalPages: number;\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PaginationService {\n\n    // The current page number returned in the json response by Spring Data\n    // is still zero based even if the configuration asks for a one based indexed pagination\n    // See https://jira.spring.io/browse/DATACMNS-563\n    public correctPageNumberMispatch(pageNumber: number): number {\n        return pageNumber + 1;\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UtilsService {\n\n    public sortByAsc(collection: any, fieldName: string): any {\n        return collection.sort((param1, param2) => {\n            return param1[fieldName] < param2[fieldName] ? -1 :\n                (param1[fieldName] > param2[fieldName] ? 1 : 0);\n        });\n    }\n\n    public sortByDesc(collection: any, fieldName: string): any {\n        return collection.sort((param1, param2) => {\n            return param1[fieldName] > param2[fieldName] ? -1 :\n                (param1[fieldName] < param2[fieldName] ? 1 : 0);\n        });\n    }\n}\n","module.exports = \"<mat-sidenav-container fullscreen>\\n  <mat-sidenav #sidenav mode=\\\"push\\\" class=\\\"app-sidenav\\\">\\n    <mat-toolbar color=\\\"primary\\\">\\n      <!--future svg to go here-->\\n      <span class=\\\"toolbar-filler\\\"></span>\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" class=\\\"mat-icon-button sidenav-toggle-button\\\" [hidden]=\\\"!sidenav.opened\\\">\\n        <mat-icon aria-label=\\\"Menu\\\" class=\\\"material-icons\\\">close</mat-icon>\\n      </button>\\n    </mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item class=\\\"sidenav-link\\\" (click)=\\\"sidenav.toggle();logout(); \\\">\\n        <mat-icon mat-list-icon>account_balance</mat-icon>\\n        <span class=\\\"title\\\" mat-line>Log out</span>\\n        <span mat-line class=\\\"secondary\\\">Log me out</span>\\n      </a>\\n      <a mat-list-item class=\\\"sidenav-link\\\" [routerLink]=\\\"['/users']\\\" (click)=\\\"sidenav.toggle()\\\">\\n        <mat-icon mat-list-icon>android</mat-icon>\\n        <span class=\\\"title\\\" mat-line>Users</span>\\n        <span mat-line class=\\\"secondary\\\">The users</span>\\n      </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-toolbar color=\\\"primary\\\">\\n    <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" class=\\\"mat-icon-button sidenav-toggle-button\\\" [hidden]=\\\"sidenav.opened\\\">\\n      <mat-icon aria-label=\\\"Another menu\\\" class=\\\"material-icons\\\">menu</mat-icon>\\n    </button>\\n    <h1 class=\\\"component-title\\\">\\n      <a class=\\\"title-link\\\">{{title}}</a>\\n    </h1>\\n  </mat-toolbar>\\n  <app-header></app-header>\\n  <router-outlet></router-outlet>\\n</mat-sidenav-container>\"","import { Component } from '@angular/core';\n\nimport { LoginService } from '../core/service/login.service';\n\n@Component({\n  selector: 'app-home-layout',\n  templateUrl: './secured.layout.component.html'\n})\nexport class SecuredLayoutComponent {\n\n  title = 'Tour of Zeroes';\n\n  constructor(\n    private loginService: LoginService\n  ) { }\n\n  logout(): void {\n    this.loginService.logout();\n  }\n\n}\n","module.exports = \"<mat-sidenav-container fullscreen>\\n  <mat-sidenav #sidenav mode=\\\"push\\\" class=\\\"app-sidenav\\\">\\n    <mat-toolbar color=\\\"primary\\\">\\n      <!--future svg to go here-->\\n      <span class=\\\"toolbar-filler\\\"></span>\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" class=\\\"mat-icon-button sidenav-toggle-button\\\" [hidden]=\\\"!sidenav.opened\\\">\\n        <mat-icon aria-label=\\\"Menu\\\" class=\\\"material-icons\\\">close</mat-icon>\\n      </button>\\n    </mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item class=\\\"sidenav-link\\\" [routerLink]=\\\"['/login']\\\" (click)=\\\"sidenav.toggle()\\\">\\n        <mat-icon mat-list-icon>account_box</mat-icon>\\n        <span class=\\\"title\\\" mat-line>Log In</span>\\n        <span mat-line class=\\\"secondary\\\">Log in the application</span>\\n      </a>\\n      <a mat-list-item class=\\\"sidenav-link\\\" [routerLink]=\\\"['/users']\\\" (click)=\\\"sidenav.toggle()\\\">\\n        <mat-icon mat-list-icon>android</mat-icon>\\n        <span class=\\\"title\\\" mat-line>Users</span>\\n        <span mat-line class=\\\"secondary\\\">The users</span>\\n      </a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-toolbar color=\\\"primary\\\">\\n    <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" class=\\\"mat-icon-button sidenav-toggle-button\\\" [hidden]=\\\"sidenav.opened\\\">\\n      <mat-icon aria-label=\\\"Another menu\\\" class=\\\"material-icons\\\">menu</mat-icon>\\n    </button>\\n    <h1 class=\\\"component-title\\\">\\n      <a class=\\\"title-link\\\">{{title}}</a>\\n    </h1>\\n  </mat-toolbar>\\n  <router-outlet></router-outlet>\\n</mat-sidenav-container>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-unsecured-layout',\n  templateUrl: './unsecured.layout.component.html'\n})\nexport class UnsecuredLayoutComponent {\n\n  title = 'Tour of Zeroes';\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  MatProgressSpinnerModule,\n  MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule,\n  MatListModule, MatGridListModule, MatCardModule, MatMenuModule,\n  MatTableModule, MatPaginatorModule, MatSortModule,\n  MatCheckboxModule, MatDialogModule,\n  MatFormFieldModule, MatInputModule,\n  MatSlideToggleModule\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSlideToggleModule\n  ]\n})\nexport class MaterialModule { }\n","module.exports = \"/* DashboardComponent's private CSS styles */\\n[class*='col-'] {\\n  float: left;\\n  padding-right: 20px;\\n  padding-bottom: 20px;\\n}\\n[class*='col-']:last-of-type {\\n  padding-right: 0;\\n}\\na {\\n  text-decoration: none;\\n}\\n*, *:after, *:before {\\n  box-sizing: border-box;\\n}\\nh3 {\\n  text-align: center; margin-bottom: 0;\\n}\\nh4 {\\n  position: relative;\\n}\\n.grid {\\n  margin: 0;\\n}\\n.col-1-4 {\\n  width: 25%;\\n}\\n.module {\\n  padding: 20px;\\n  text-align: center;\\n  color: #eee;\\n  max-height: 120px;\\n  min-width: 120px;\\n  background-color: #607D8B;\\n  border-radius: 2px;\\n}\\n.module:hover {\\n  background-color: #EEE;\\n  cursor: pointer;\\n  color: #607d8b;\\n}\\n.grid-pad {\\n  padding: 10px 0;\\n}\\n.grid-pad > [class*='col-']:last-of-type {\\n  padding-right: 20px;\\n}\\n@media (max-width: 600px) {\\n  .module {\\n    font-size: 10px;\\n    max-height: 75px; }\\n}\\n@media (max-width: 1024px) {\\n  .grid {\\n    margin: 0;\\n  }\\n  .module {\\n    min-width: 60px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZDQUE2QztBQUM3QztFQUNFLFlBQVk7RUFDWixvQkFBb0I7RUFDcEIscUJBQXFCO0NBQ3RCO0FBQ0Q7RUFDRSxpQkFBaUI7Q0FDbEI7QUFDRDtFQUNFLHNCQUFzQjtDQUN2QjtBQUNEO0VBR0UsdUJBQXVCO0NBQ3hCO0FBQ0Q7RUFDRSxtQkFBbUIsQ0FBQyxpQkFBaUI7Q0FDdEM7QUFDRDtFQUNFLG1CQUFtQjtDQUNwQjtBQUNEO0VBQ0UsVUFBVTtDQUNYO0FBQ0Q7RUFDRSxXQUFXO0NBQ1o7QUFDRDtFQUNFLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsMEJBQTBCO0VBQzFCLG1CQUFtQjtDQUNwQjtBQUNEO0VBQ0UsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtFQUNoQixlQUFlO0NBQ2hCO0FBQ0Q7RUFDRSxnQkFBZ0I7Q0FDakI7QUFDRDtFQUNFLG9CQUFvQjtDQUNyQjtBQUNEO0VBQ0U7SUFDRSxnQkFBZ0I7SUFDaEIsaUJBQWlCLEVBQUU7Q0FDdEI7QUFDRDtFQUNFO0lBQ0UsVUFBVTtHQUNYO0VBQ0Q7SUFDRSxnQkFBZ0I7R0FDakI7Q0FDRiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIERhc2hib2FyZENvbXBvbmVudCdzIHByaXZhdGUgQ1NTIHN0eWxlcyAqL1xuW2NsYXNzKj0nY29sLSddIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xufVxuW2NsYXNzKj0nY29sLSddOmxhc3Qtb2YtdHlwZSB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG59XG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuKiwgKjphZnRlciwgKjpiZWZvcmUge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cbmgzIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tYm90dG9tOiAwO1xufVxuaDQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uZ3JpZCB7XG4gIG1hcmdpbjogMDtcbn1cbi5jb2wtMS00IHtcbiAgd2lkdGg6IDI1JTtcbn1cbi5tb2R1bGUge1xuICBwYWRkaW5nOiAyMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZWVlO1xuICBtYXgtaGVpZ2h0OiAxMjBweDtcbiAgbWluLXdpZHRoOiAxMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYwN0Q4QjtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xufVxuLm1vZHVsZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFRUU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6ICM2MDdkOGI7XG59XG4uZ3JpZC1wYWQge1xuICBwYWRkaW5nOiAxMHB4IDA7XG59XG4uZ3JpZC1wYWQgPiBbY2xhc3MqPSdjb2wtJ106bGFzdC1vZi10eXBlIHtcbiAgcGFkZGluZy1yaWdodDogMjBweDtcbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xuICAubW9kdWxlIHtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgbWF4LWhlaWdodDogNzVweDsgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuZ3JpZCB7XG4gICAgbWFyZ2luOiAwO1xuICB9XG4gIC5tb2R1bGUge1xuICAgIG1pbi13aWR0aDogNjBweDtcbiAgfVxufSJdfQ== */\"","module.exports = \"<h3>Top Users</h3>\\n<div class=\\\"grid grid-pad\\\">\\n  <a *ngFor=\\\"let user of users\\\" class=\\\"col-1-4\\\" routerLink=\\\"/user/{{user.id}}\\\">\\n    <div class=\\\"module user\\\">\\n      <h4>{{user.email}} {{user.id}}</h4>\\n    </div>\\n  </a>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user/user.service';\nimport { User } from '../user/user';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  users: User[] = [];\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.getAll();\n  }\n\n  getAll(): void {\n    this.userService.getAll()\n      .subscribe((users: User[]) => {\n        this.users = this.users = users;\n      });\n  }\n}\n","module.exports = \".angular-logo {\\n    margin: 0 4px 3px 0;\\n    height: 35px;\\n    vertical-align: middle;\\n}\\n.fill-remaining-space {\\n  flex: 1 1 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0JBQW9CO0lBQ3BCLGFBQWE7SUFDYix1QkFBdUI7Q0FDMUI7QUFDRDtFQUNFLGVBQWU7Q0FDaEIiLCJmaWxlIjoic3JjL2FwcC92aWV3cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYW5ndWxhci1sb2dvIHtcbiAgICBtYXJnaW46IDAgNHB4IDNweCAwO1xuICAgIGhlaWdodDogMzVweDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuLmZpbGwtcmVtYWluaW5nLXNwYWNlIHtcbiAgZmxleDogMSAxIGF1dG87XG59Il19 */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>\\n    My header\\n  </span>\\n  <span class=\\\"fill-remaining-space\\\"></span>\\n  <button mat-button routerLink=\\\"/home\\\">Home</button>\\n  <button mat-button routerLink=\\\"/users\\\">Users</button>\\n  <button mat-button routerLink=\\\"/dashboard\\\">Dashboard</button>\\n  <button mat-button (click)=\\\"logout()\\\">Logout</button>\\n</mat-toolbar>\"","import { Observable } from 'rxjs';\nimport { Component } from '@angular/core';\n\nimport { LoginService } from '../../core/service/login.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  constructor(\n    private loginService: LoginService\n  ) { }\n\n  logout(): void {\n    this.loginService.logout();\n  }\n\n}\n","module.exports = \"<mat-slide-toggle [(ngModel)]=\\\"confirmed\\\" (change)=\\\"toggleConfirmed(event)\\\" color=\\\"primary\\\"></mat-slide-toggle>\"","import { Component, Input, EventEmitter, Output, OnChanges } from '@angular/core';\n\nimport { User } from './user';\nimport { UserService } from '../user/user.service';\n\n@Component({\n  selector: 'app-user-confirmed',\n  templateUrl: './user-confirmed.component.html',\n})\nexport class UserConfirmedComponent implements OnChanges {\n\n  @Input() userId: number;\n  @Output() confirmedChange: EventEmitter<number> = new EventEmitter<number>();\n  confirmed: boolean;\n\n  constructor(\n    private userService: UserService\n  ) { }\n\n  toggleConfirmed() {\n    this.userService.get(this.userId)\n    .subscribe(user => {\n      user.confirmedEmail = !user.confirmedEmail;\n      this.userService.partialUpdate(user)\n      .subscribe(updatedUser => {\n        this.update(updatedUser.confirmedEmail);\n        this.confirmedChange.emit(updatedUser.id);\n      });\n    });\n  }\n\n  ngOnChanges() {\n    this.userService.get(this.userId)\n    .subscribe(user => {\n      this.update(user.confirmedEmail);\n    });\n  }\n\n  update(confirmedEmail: boolean) {\n    this.confirmed = confirmedEmail;\n  }\n\n}\n","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n    <h1 mat-dialog-title>Adding or modifying a user</h1>\\n    <mat-dialog-content>\\n        <mat-form-field>\\n            <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\n        </mat-form-field>\\n    </mat-dialog-content>\\n    <mat-dialog-content>\\n        <mat-form-field>\\n            <input matInput formControlName=\\\"firstname\\\" placeholder=\\\"Firstname\\\">\\n        </mat-form-field>\\n    </mat-dialog-content>\\n    <mat-dialog-content>\\n        <mat-form-field>\\n            <input matInput formControlName=\\\"lastname\\\" placeholder=\\\"Lastname\\\">\\n        </mat-form-field>\\n    </mat-dialog-content>\\n    <mat-dialog-actions>\\n        <button mat-button type=\\\"submit\\\">Add</button>\\n        <button mat-button type=\\\"button\\\" mat-dialog-close>Cancel</button>\\n    </mat-dialog-actions>\\n</form>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { User } from './user';\nimport { UserService } from './user.service';\n\n@Component({\n  templateUrl: './user-dialog.component.html',\n})\nexport class UserDialogComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userDialogRef: MatDialogRef<UserDialogComponent>,\n    private userService: UserService,\n    @Inject(MAT_DIALOG_DATA) private user\n  ) { }\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: this.user ? this.user.email : '',\n      firstname: this.user ? this.user.firstname : '',\n      lastname: this.user ? this.user.lastname : ''\n    });\n  }\n\n  submit(form) {\n    this.userDialogRef.close(form.value);\n  }\n\n}\n","module.exports = \"<button mat-button (click)=\\\"openUserDialog()\\\">Add a user</button>\"","import { Component, Input, EventEmitter, Output, OnChanges } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { filter } from 'rxjs/operators';\n\nimport { User } from './user';\nimport { UserService } from './user.service';\nimport { UserDialogComponent } from './user-dialog.component';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n})\nexport class UserEditComponent implements OnChanges {\n\n  @Output() userEditedEvent: EventEmitter<User> = new EventEmitter<User>();\n\n  userDialogRef: MatDialogRef<UserDialogComponent>;\n\n  constructor(\n    private matDialog: MatDialog,\n    private userService: UserService\n  ) { }\n\n  ngOnChanges() {\n  }\n\n  openUserDialog(existingUser: User) {\n    this.userDialogRef = this.matDialog.open(UserDialogComponent, {\n      hasBackdrop: false,\n      data: {\n        user: existingUser\n      }\n    });\n\n    this.userDialogRef\n      .afterClosed()\n      .subscribe(user => {\n        // TODO validate the edited user\n        if (user) {\n          if (user.id) {\n            this.userService.fullUpdate(existingUser)\n              .subscribe(updatedUser => {\n                this.userEditedEvent.emit(updatedUser);\n                // TODO Add a hint that the user has been added\n              });\n          } else {\n            this.userService.add(user)\n              .subscribe(addedUser => {\n                this.userEditedEvent.emit(addedUser);\n                // TODO Add a hint that the user has been updated\n              });\n          }\n        }\n      });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n\\n  <h2>{{ user.name | uppercase }}</h2>\\n  <div>\\n    <span>id: </span>{{user.id}}</div>\\n  <div>\\n    <label>Firstname:\\n      <input [(ngModel)]=\\\"user.firstname\\\" placeholder=\\\"firstname\\\" />\\n      <!-- TODO Replace the  [(ngModel)] for a reactive form syntax -->\\n    </label>\\n  </div>\\n  <div>\\n    <label>Lastname:\\n      <input [(ngModel)]=\\\"user.lastname\\\" placeholder=\\\"lastname\\\" />\\n      <!-- TODO Replace the  [(ngModel)] for a reactive form syntax -->\\n    </label>\\n  </div>\\n\\n</div>\\n\\n<button (click)=\\\"goBack()\\\">Cancel</button>\\n<button (click)=\\\"save()\\\">Save</button>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { UserService } from '../user/user.service';\nimport { User } from '../user/user';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  @Input() user: User;\n\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  getUser(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.userService.get(id)\n      .subscribe(user => {\n        this.user = user;\n      });\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    this.userService.partialUpdate(this.user)\n      .subscribe(() => {\n        this.goBack();\n      });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\n\nimport { environment } from '../../../environments/environment';\nimport { HttpService } from '../../core/service/http.service';\nimport { User } from './user';\n\nconst DOMAIN_URI = 'users';\n\n@Injectable()\nexport class UserService {\n\n  private usersUrl = environment.BASE_REST_URI + '/' + DOMAIN_URI;\n\n  constructor(\n    private httpService: HttpService\n  ) { }\n\n  public getAll(): Observable<User[]> {\n    return this.httpService.get(this.usersUrl)\n      .pipe(\n        map((data: any) => {\n          return data._embedded.userResourceList as User[];\n        })\n      );\n  }\n\n  public getSome(searchTerm: string, sortFieldName: string, sortDirection: string, currentPage: number, limit: number): Observable<any> {\n    let httpParams = new HttpParams()\n    .set('page', currentPage.toString())\n    .set('size', limit.toString());\n    if (searchTerm) {\n      httpParams = httpParams.append('searchTerm', searchTerm);\n    }\n    if (sortFieldName && sortDirection) {\n      httpParams = httpParams.append('sort', sortFieldName + ',' + sortDirection);\n    }\n    return this.httpService.get(this.usersUrl, httpParams);\n  }\n\n  public get(id: number): Observable<User> {\n    const url = this.usersUrl + '/' + id.toString();\n    return this.httpService.get<User>(url);\n  }\n\n  public add(user: User): Observable<User> {\n    return this.httpService.post<User>(this.usersUrl, user);\n  }\n\n  public fullUpdate(user: User): Observable<User> {\n    const url = this.usersUrl + '/' + user.id;\n    return this.httpService.put(url, user);\n  }\n\n  public partialUpdate(user: User): Observable<User> {\n    const url = this.usersUrl + '/' + user.id;\n    return this.httpService.patch(url, user);\n  }\n\n  public delete(user: User): Observable<User> {\n    const url = this.usersUrl + '/' + user.id;\n    return this.httpService.delete<User>(url);\n  }\n\n  public deleteById(userId: number): Observable<User> {\n    const url = this.usersUrl + '/' + userId;\n    return this.httpService.delete<User>(url);\n  }\n\n  public search(term: string): Observable<User[]> {\n    if (!term.trim()) {\n      // If there is no search term then return an empty user array\n      return of([]);\n    }\n    this.httpService.get<User[]>(this.usersUrl + '?name=' + term)\n      .pipe(\n        map((data: any) => {\n          return data._embedded.userResourceList as User[];\n        })\n      );\n  }\n\n}\n","export class User {\n\n  id: number;\n  email: string;\n  confirmedEmail: boolean;\n  password: string;\n  firstname: string;\n  lastname: string;\n\n}\n","import { User } from '../user/user';\nimport { PaginationApi } from '../../core/service/pagination.api';\n\nexport class UsersApi extends PaginationApi {\n\n    constructor(users: User[], currentPageNumber: number, elementsPerPage: number, totalElements: number, totalPages: number) {\n        super(currentPageNumber, elementsPerPage, totalElements, totalPages);\n        this.users = users;\n    }\n\n    users: User[];\n\n}\n","module.exports = \"table {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvdXNlci91c2Vycy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtDQUNiIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvdXNlci91c2Vycy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICB3aWR0aDogMTAwJTtcbn0iXX0= */\"","module.exports = \"<mat-form-field>\\n\\t<input matInput (keyup)=\\\"search($event.target.value)\\\" placeholder=\\\"Search...\\\" autocomplete=\\\"off\\\">\\n</mat-form-field>\\n\\n<app-user-edit (userEditedEvent)=\\\"refreshList($event)\\\"></app-user-edit>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n\\t<div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoadingResults || isRateLimitReached\\\">\\n\\t\\t<mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\n\\t\\t<div class=\\\"example-rate-limit-reached\\\" *ngIf=\\\"isRateLimitReached\\\">\\n\\t\\t\\tThe user api rate limit has been reached. It will be reset in one minute.\\n\\t\\t</div>\\n\\t</div>\\n\\n\\t<div>\\n\\t\\t<table class=\\\"\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"email\\\" matSortDisableClear matSortDirection=\\\"asc\\\">\\n\\t\\t\\t<ng-container matColumnDef=\\\"id\\\">\\n\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\\n\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let user\\\">{{user.id}}</td>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<ng-container matColumnDef=\\\"firstname\\\">\\n\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Firstname</th>\\n\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let user\\\">{{user.firstname}}</td>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<ng-container matColumnDef=\\\"lastname\\\">\\n\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Lastname</th>\\n\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let user\\\">{{user.lastname}}</td>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<ng-container matColumnDef=\\\"email\\\">\\n\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\\n\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let user\\\">\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/users/{{user.id}}\\\">{{user.email}}</a>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<ng-container matColumnDef=\\\"confirmed\\\">\\n\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Confirmed</th>\\n\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let user\\\">\\n\\t\\t\\t\\t\\t<app-user-confirmed [userId]=\\\"user.id\\\" (confirmedChange)=\\\"displayConfirmed($event)\\\"></app-user-confirmed>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</ng-container>\\n\\n\\n\\t\\t\\t<ng-container matColumnDef=\\\"actions\\\">\\n\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\\n\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let user\\\">\\n\\t\\t\\t\\t\\t<button (click)=\\\"openUserDialog(user.id)\\\">Edit the user</button>\\n\\t\\t\\t\\t</td>\\n\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n\\t\\t\\t<tr mat-row *matRowDef=\\\"let columnName; columns: displayedColumns;\\\"></tr>\\n\\t\\t</table>\\n\\t</div>\\n\\n\\t<mat-paginator [length]=\\\"totalElements\\\" [pageSize]=\\\"elementsPerPage\\\"></mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef, Input, EventEmitter, Output } from '@angular/core';\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { merge, Observable, of as observableOf } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { User } from './user';\nimport { UsersApi } from './users.api';\nimport { UserService } from '../user/user.service';\nimport { PaginationService } from '../../core/service/pagination.service';\nimport { MessageService } from '../../core/messages/message.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'email', 'confirmed', 'firstname', 'lastname'];\n\n  currentPageNumber: number;\n  elementsPerPage = 5;\n  totalElements: number;\n  totalPages: number;\n\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  dataSource: MatTableDataSource<User>;\n\n  searchTerm: string;\n  searchTermEvent = new EventEmitter<{ value: string }>();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private userService: UserService,\n    private paginationService: PaginationService,\n    private messageService: MessageService\n  ) {\n    this.dataSource = new MatTableDataSource();\n  }\n\n  ngOnInit() {\n    // Select the first page when the sort order changes\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n\n    merge(this.searchTermEvent, this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.getUsers(this.searchTerm, this.sort.active, this.sort.direction, this.paginator.pageIndex);\n        }),\n        map(userApi => {\n          this.isLoadingResults = false;\n          this.isRateLimitReached = false;\n          this.currentPageNumber = userApi.currentPageNumber;\n          this.elementsPerPage = userApi.elementsPerPage;\n          this.totalElements = userApi.totalElements;\n          this.totalPages = userApi.totalPages;\n          return userApi.users;\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          this.isRateLimitReached = true;\n          return observableOf([]);\n        })\n      ).subscribe(users => {\n        this.dataSource.data = users;\n      });\n  }\n\n  getUsers(searchTerm: string, sortFieldName: string, sortDirection: string, currentPageNumber: number): Observable<UsersApi> {\n    return this.userService.getSome(searchTerm, sortFieldName, sortDirection, currentPageNumber, this.elementsPerPage)\n      .pipe(\n        map(response => {\n          return new UsersApi(\n            response._embedded.userResourceList as User[],\n            this.paginationService.correctPageNumberMispatch(response.page.number),\n            response.page.size,\n            response.page.totalElements,\n            response.page.totalPages\n          );\n        })\n      );\n  }\n\n  search(searchTerm: string) {\n    this.searchTerm = searchTerm;\n    this.searchTermEvent.emit({\n      value: this.searchTerm\n    });\n\n    if (this.paginator) {\n      this.paginator.firstPage();\n    }\n  }\n\n  // TODO This is never called yet\n  onSelect(user: User): void {\n    this.messageService.add('Selected the user ' + user.email);\n  }\n\n  // TODO Add a delete button at the end of the row\n  delete(user: User): void {\n    this.userService.delete(user).subscribe();\n  }\n\n  displayConfirmed(userId: number) {\n    console.log('Toggled the mail confirmed status for the user with id: ' + userId);\n  }\n\n  refreshList(user: User) {\n    console.log('Edited the user: ' + user.id);\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  CLIENT_ID: 'ng-zero',\n  ROLE_PREFIX: 'role_',\n  BASE_REST_URI: 'http://localhost:8080/api',\n  KEYCLOAK_URI: 'http://localhost:8180/auth',\n  KEYCLOAK_REALM: 'learnintouch',\n  KEYCLOAK_CLIENTID: 'learnintouch-js'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n.then(\n  () => {\n  }\n)\n.catch(error => {\n  console.log(error);\n});\n"],"sourceRoot":""}