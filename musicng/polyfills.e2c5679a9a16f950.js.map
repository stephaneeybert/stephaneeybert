{"version":3,"file":"polyfills.e2c5679a9a16f950.js","mappings":"4IAAA,IAAAA,IAKA,SAAUC,GAAQC,GAAUC,GAAYC,IACtC,aAEF,IA+FIC,GA/FAC,GAAkB,CAAC,GAAI,SAAU,MAAO,KAAM,KAAM,KACpDC,GAAeL,GAASM,cAAc,OAEtCC,GAAgB,WAEhBC,GAAQC,KAAKD,MACbE,GAAMD,KAAKC,IACXC,GAAMC,KAAKD,IASf,SAASE,GAAkBC,EAAIC,EAASC,GACpC,OAAOC,WAAWC,GAAOJ,EAAIE,GAAUD,EAC3C,CAWA,SAASI,GAAeC,EAAKN,EAAIE,GAC7B,QAAIK,MAAMC,QAAQF,KACdG,GAAKH,EAAKJ,EAAQF,GAAKE,IAChB,EAGf,CAQA,SAASO,GAAKC,EAAKC,EAAUT,GACzB,IAAIU,EAEJ,GAAKF,EAIL,GAAIA,EAAIG,QACJH,EAAIG,QAAQF,EAAUT,QAAO,GACtBQ,EAAII,SAAW1B,GAEtB,IADAwB,EAAI,EACGA,EAAIF,EAAII,QACXH,EAASI,KAAKb,EAASQ,EAAIE,GAAIA,EAAGF,GAClCE,SAGJ,IAAKA,KAAKF,EACNA,EAAIM,eAAeJ,IAAMD,EAASI,KAAKb,EAASQ,EAAIE,GAAIA,EAAGF,EAGvE,CASA,SAASO,GAAUC,EAAQC,EAAMC,GAC7B,IAAIC,EAAqB,sBAAwBF,EAAO,KAAOC,EAAU,SACzE,OAAO,WACH,IAAIE,EAAI,IAAIC,MAAM,mBACdC,EAAQF,GAAKA,EAAEE,MAAQF,EAAEE,MAAMC,QAAQ,kBAAmB,IACzDA,QAAQ,cAAe,IACvBA,QAAQ,6BAA8B,kBAAoB,sBAE3DC,GAAMzC,GAAO0C,UAAY1C,GAAO0C,QAAQC,MAAQ3C,GAAO0C,QAAQD,KACnE,OAAIA,IACAA,GAAIX,KAAK9B,GAAO0C,QAASN,EAAoBG,GAE1CN,EAAOW,MAAMC,KAAMC,UAC9B,CACJ,CAWI1C,GADyB,mBAAlB2C,OAAO3C,OACL,SAAgB4C,GACrB,GAAIA,IAAW7C,IAAwB,OAAX6C,EACxB,MAAM,IAAIC,UAAU,8CAIxB,QADIC,EAASH,OAAOC,GACXG,EAAQ,EAAGA,EAAQL,UAAUjB,OAAQsB,IAAS,CACnD,IAAIC,EAASN,UAAUK,GACvB,GAAIC,IAAWjD,IAAwB,OAAXiD,EACxB,QAASC,KAAWD,EACZA,EAAOrB,eAAesB,KACtBH,EAAOG,GAAWD,EAAOC,GAIzC,CACA,OAAOH,CACX,EAESH,OAAO3C,OAWpB,IAAIkD,GAAStB,GAAU,SAAgBuB,EAAMC,EAAKC,GAG9C,QAFIC,EAAOX,OAAOW,KAAKF,GACnB7B,EAAI,EACDA,EAAI+B,EAAK7B,UACP4B,GAAUA,GAASF,EAAKG,EAAK/B,MAAQxB,MACtCoD,EAAKG,EAAK/B,IAAM6B,EAAIE,EAAK/B,KAE7BA,IAEJ,OAAO4B,CACX,EAAG,SAAU,iBASTE,GAAQzB,GAAU,SAAeuB,EAAMC,GACvC,OAAOF,GAAOC,EAAMC,GAAK,EAC7B,EAAG,QAAS,iBAQZ,SAASG,GAAQC,EAAOC,EAAMC,GAC1B,IACIC,EADAC,EAAQH,EAAKI,WAGjBF,EAASH,EAAMK,UAAYlB,OAAOmB,OAAOF,IAClCG,YAAcP,EACrBG,EAAOK,OAASJ,EAEZF,GACA1D,GAAO2D,EAAQD,EAEvB,CAQA,SAAS3C,GAAOJ,EAAIE,GAChB,OAAO,WACH,OAAOF,EAAG6B,MAAM3B,EAAS6B,UAC7B,CACJ,CASA,SAASuB,GAASC,EAAKC,GACnB,cAAWD,GAAO9D,GACP8D,EAAI1B,MAAM2B,GAAOA,EAAK,IAAMpE,GAAuBoE,GAEvDD,CACX,CAQA,SAASE,GAAYC,EAAMC,GACvB,OAAQD,IAAStE,GAAauE,EAAOD,CACzC,CAQA,SAASE,GAAkB3B,EAAQ4B,EAAOC,GACtCrD,GAAKsD,GAASF,GAAQ,SAASG,GAC3B/B,EAAOgC,iBAAiBD,EAAMF,GAAS,EAC3C,EACJ,CAQA,SAASI,GAAqBjC,EAAQ4B,EAAOC,GACzCrD,GAAKsD,GAASF,GAAQ,SAASG,GAC3B/B,EAAOkC,oBAAoBH,EAAMF,GAAS,EAC9C,EACJ,CASA,SAASM,GAAUC,EAAMC,GACrB,KAAOD,GAAM,CACT,GAAIA,GAAQC,EACR,OAAO,EAEXD,EAAOA,EAAKE,UAChB,CACA,OAAO,CACX,CAQA,SAASC,GAAMC,EAAKC,GAChB,OAAOD,EAAIE,QAAQD,IAAQ,CAC/B,CAOA,SAASX,GAASU,GACd,OAAOA,EAAIG,OAAOC,MAAM,OAC5B,CASA,SAASC,GAAQrC,EAAKiC,EAAMK,GACxB,GAAItC,EAAIkC,UAAYI,EAChB,OAAOtC,EAAIkC,QAAQD,GAGnB,QADI9D,EAAI,EACDA,EAAI6B,EAAI3B,QAAQ,CACnB,GAAKiE,GAAatC,EAAI7B,GAAGmE,IAAcL,IAAWK,GAAatC,EAAI7B,KAAO8D,EACtE,OAAO9D,EAEXA,GACJ,CACA,OAAO,CAEf,CAOA,SAASoE,EAAQtE,GACb,OAAOH,MAAM2C,UAAU+B,MAAMlE,KAAKL,EAAK,EAC3C,CASA,SAASwE,EAAYzC,EAAK0C,EAAKC,GAK3B,QAJIC,EAAU,GACVC,EAAS,GACT1E,EAAI,EAEDA,EAAI6B,EAAI3B,QAAQ,CACnB,IAAIyC,GAAM4B,EAAM1C,EAAI7B,GAAGuE,GAAO1C,EAAI7B,GAC9BkE,GAAQQ,EAAQ/B,IAAO,GACvB8B,EAAQE,KAAK9C,EAAI7B,IAErB0E,EAAO1E,GAAK2C,GACZ3C,GACJ,CAEA,OAAIwE,IAIIC,EAHCF,EAGSE,EAAQD,KAAK,SAAyBI,GAAGC,IAC/C,OAAOD,GAAEL,GAAOM,GAAEN,EACtB,GAJUE,EAAQD,QAQnBC,CACX,CAQA,SAASK,EAAShF,EAAKiF,GAKnB,QAJIC,EAAQC,EACRC,EAAYH,EAAS,GAAGI,cAAgBJ,EAASV,MAAM,GAEvDrE,EAAI,EACDA,EAAItB,GAAgBwB,QAAQ,CAI/B,IAFA+E,GADAD,EAAStG,GAAgBsB,IACPgF,EAASE,EAAYH,KAE3BjF,EACR,OAAOmF,EAEXjF,GACJ,CACA,OAAOxB,EACX,CAMA,IAAI4G,EAAY,EAUhB,SAASC,EAAoBC,GACzB,IAAIC,EAAMD,EAAQE,eAAiBF,EACnC,OAAQC,EAAIE,aAAeF,EAAIG,cAAgBrH,EACnD,CAEA,IAEIsH,EAAiB,iBAAkBtH,GACnCuH,EAAyBd,EAASzG,GAAQ,kBAAoBG,GAC9DqH,GAAqBF,GAJN,wCAIoCG,KAAKC,UAAUC,WAElEC,GAAmB,QAEnBC,GAAmB,QAGnBC,EAAmB,GAEnBC,EAAc,EAEdC,EAAY,EACZC,EAAe,EAEfC,EAAiB,EACjBC,EAAiB,EACjBC,EAAkB,EAClBC,EAAe,EACfC,EAAiB,GAEjBC,GAAuBJ,EAAiBC,EACxCI,GAAqBH,EAAeC,EACpCG,GAAgBF,GAAuBC,GAEvCE,GAAW,CAAC,IAAK,KACjBC,GAAkB,CAAC,UAAW,WASlC,SAASC,GAAMC,EAASC,GACpB,IAAIC,EAAOlG,KACXA,KAAKgG,QAAUA,EACfhG,KAAKiG,SAAWA,EAChBjG,KAAKoE,QAAU4B,EAAQ5B,QACvBpE,KAAKG,OAAS6F,EAAQG,QAAQC,YAI9BpG,KAAKqG,WAAa,SAASC,GACnB9E,GAASwE,EAAQG,QAAQI,OAAQ,CAACP,KAClCE,EAAKlE,QAAQsE,EAErB,EAEAtG,KAAKwG,MAET,CA0DA,SAASC,GAAaT,EAASU,EAAWC,GACtC,IAAIC,EAAcD,EAAME,SAAS7H,OAC7B8H,EAAqBH,EAAMI,gBAAgB/H,OAC3CgI,EAAWN,EAAYxB,GAAgB0B,EAAcE,GAAuB,EAC5EG,GAAWP,GAAavB,EAAYC,IAAkBwB,EAAcE,GAAuB,EAE/FH,EAAMK,UAAYA,EAClBL,EAAMM,UAAYA,GAEdD,IACAhB,EAAQkB,QAAU,CAAC,GAKvBP,EAAMD,UAAYA,EAiBtB,SAASS,GAAiBnB,EAASW,GAC/B,IAAIO,EAAUlB,EAAQkB,QAClBL,EAAWF,EAAME,SACjBO,EAAiBP,EAAS7H,OAGzBkI,EAAQG,aACTH,EAAQG,WAAaC,GAAqBX,IAI1CS,EAAiB,IAAMF,EAAQK,cAC/BL,EAAQK,cAAgBD,GAAqBX,GACnB,IAAnBS,IACPF,EAAQK,eAAgB,GAG5B,IAAIF,EAAaH,EAAQG,WACrBE,GAAgBL,EAAQK,cACxBC,GAAeD,GAAgBA,GAAcE,OAASJ,EAAWI,OAEjEA,GAASd,EAAMc,OAASC,GAAUb,GACtCF,EAAMgB,UAAY5J,KAClB4I,EAAMiB,UAAYjB,EAAMgB,UAAYN,EAAWM,UAE/ChB,EAAMkB,MAAQC,GAASN,GAAcC,IACrCd,EAAMoB,SAAWC,GAAYR,GAAcC,IA0B/C,SAASQ,GAAef,EAASP,GAC7B,IAAIc,EAASd,EAAMc,OACfS,EAAShB,EAAQiB,aAAe,CAAC,EACjCC,EAAYlB,EAAQkB,WAAa,CAAC,EAClCC,EAAYnB,EAAQmB,WAAa,CAAC,GAElC1B,EAAMD,YAAcxB,GAAemD,EAAU3B,YAAcvB,KAC3DiD,EAAYlB,EAAQkB,UAAY,CAC5BE,EAAGD,EAAUE,QAAU,EACvBC,EAAGH,EAAUI,QAAU,GAG3BP,EAAShB,EAAQiB,YAAc,CAC3BG,EAAGb,EAAOa,EACVE,EAAGf,EAAOe,IAIlB7B,EAAM4B,OAASH,EAAUE,GAAKb,EAAOa,EAAIJ,EAAOI,GAChD3B,EAAM8B,OAASL,EAAUI,GAAKf,EAAOe,EAAIN,EAAOM,EACpD,CA5CIP,CAAef,EAASP,GACxBA,EAAM+B,gBAAkBC,GAAahC,EAAM4B,OAAQ5B,EAAM8B,QAEzD,IAAIG,GAAkBC,GAAYlC,EAAMiB,UAAWjB,EAAM4B,OAAQ5B,EAAM8B,QACvE9B,EAAMmC,iBAAmBF,GAAgBN,EACzC3B,EAAMoC,iBAAmBH,GAAgBJ,EACzC7B,EAAMiC,gBAAmB9K,GAAI8K,GAAgBN,GAAKxK,GAAI8K,GAAgBJ,GAAMI,GAAgBN,EAAIM,GAAgBJ,EAEhH7B,EAAMqC,MAAQzB,GAkNlB,SAAS0B,EAASC,EAAOC,GACrB,OAAOnB,GAAYmB,EAAI,GAAIA,EAAI,GAAIrD,IAAmBkC,GAAYkB,EAAM,GAAIA,EAAM,GAAIpD,GAC1F,CApNkCmD,CAAS1B,GAAcV,SAAUA,GAAY,EAC3EF,EAAMyC,SAAW7B,GAsMrB,SAAS8B,GAAYH,EAAOC,GACxB,OAAOrB,GAASqB,EAAI,GAAIA,EAAI,GAAIrD,IAAmBgC,GAASoB,EAAM,GAAIA,EAAM,GAAIpD,GACpF,CAxMqCuD,CAAY9B,GAAcV,SAAUA,GAAY,EAEjFF,EAAM2C,YAAepC,EAAQmB,UAAsC1B,EAAME,SAAS7H,OAC9EkI,EAAQmB,UAAUiB,YAAe3C,EAAME,SAAS7H,OAASkI,EAAQmB,UAAUiB,YADtC3C,EAAME,SAAS7H,OAwC5D,SAASuK,GAAyBrC,EAASP,GACvC,IAEI6C,EAAUC,EAAWC,GAAWC,GAFhCC,EAAO1C,EAAQ2C,cAAgBlD,EAC/BiB,EAAYjB,EAAMgB,UAAYiC,EAAKjC,UAGvC,GAAIhB,EAAMD,WAAatB,IAAiBwC,EAAY3C,GAAoB2E,EAAKJ,WAAalM,IAAY,CAClG,IAAIiL,GAAS5B,EAAM4B,OAASqB,EAAKrB,OAC7BE,GAAS9B,EAAM8B,OAASmB,EAAKnB,OAE7BqB,GAAIjB,GAAYjB,EAAWW,GAAQE,IACvCgB,EAAYK,GAAExB,EACdoB,GAAYI,GAAEtB,EACdgB,EAAY1L,GAAIgM,GAAExB,GAAKxK,GAAIgM,GAAEtB,GAAMsB,GAAExB,EAAIwB,GAAEtB,EAC3CmB,GAAYhB,GAAaJ,GAAQE,IAEjCvB,EAAQ2C,aAAelD,CAC3B,MAEI6C,EAAWI,EAAKJ,SAChBC,EAAYG,EAAKH,UACjBC,GAAYE,EAAKF,UACjBC,GAAYC,EAAKD,UAGrBhD,EAAM6C,SAAWA,EACjB7C,EAAM8C,UAAYA,EAClB9C,EAAM+C,UAAYA,GAClB/C,EAAMgD,UAAYA,EACtB,CAjEIJ,CAAyBrC,EAASP,GAGlC,IAAIxG,GAAS6F,EAAQ5B,QACjB9B,GAAUqE,EAAMoD,SAAS5J,OAAQA,MACjCA,GAASwG,EAAMoD,SAAS5J,QAE5BwG,EAAMxG,OAASA,EACnB,CAhEIgH,CAAiBnB,EAASW,GAG1BX,EAAQgE,KAAK,eAAgBrD,GAE7BX,EAAQiE,UAAUtD,GAClBX,EAAQkB,QAAQmB,UAAY1B,CAChC,CAyHA,SAASW,GAAqBX,GAK1B,QAFIE,EAAW,GACX/H,EAAI,EACDA,EAAI6H,EAAME,SAAS7H,QACtB6H,EAAS/H,GAAK,CACVoL,QAAStM,GAAM+I,EAAME,SAAS/H,GAAGoL,SACjCC,QAASvM,GAAM+I,EAAME,SAAS/H,GAAGqL,UAErCrL,IAGJ,MAAO,CACH6I,UAAW5J,KACX8I,SAAUA,EACVY,OAAQC,GAAUb,GAClB0B,OAAQ5B,EAAM4B,OACdE,OAAQ9B,EAAM8B,OAEtB,CAOA,SAASf,GAAUb,GACf,IAAIO,EAAiBP,EAAS7H,OAG9B,GAAuB,IAAnBoI,EACA,MAAO,CACHkB,EAAG1K,GAAMiJ,EAAS,GAAGqD,SACrB1B,EAAG5K,GAAMiJ,EAAS,GAAGsD,UAK7B,QADI7B,EAAI,EAAGE,EAAI,EAAG1J,EAAI,EACfA,EAAIsI,GACPkB,GAAKzB,EAAS/H,GAAGoL,QACjB1B,GAAK3B,EAAS/H,GAAGqL,QACjBrL,IAGJ,MAAO,CACHwJ,EAAG1K,GAAM0K,EAAIlB,GACboB,EAAG5K,GAAM4K,EAAIpB,GAErB,CASA,SAASyB,GAAYjB,EAAWU,EAAGE,GAC/B,MAAO,CACHF,EAAGA,EAAIV,GAAa,EACpBY,EAAGA,EAAIZ,GAAa,EAE5B,CAQA,SAASe,GAAaL,EAAGE,GACrB,OAAIF,IAAME,EACCnD,EAGPvH,GAAIwK,IAAMxK,GAAI0K,GACPF,EAAI,EAAIhD,EAAiBC,EAE7BiD,EAAI,EAAIhD,EAAeC,CAClC,CASA,SAASuC,GAAYoC,EAAIC,EAAIC,GACpBA,IACDA,EAAQzE,IAEZ,IAAIyC,EAAI+B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAC5B9B,EAAI6B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAEhC,OAAOzM,KAAK0M,KAAMjC,EAAIA,EAAME,EAAIA,EACpC,CASA,SAASV,GAASsC,EAAIC,EAAIC,GACjBA,IACDA,EAAQzE,IAEZ,IAAIyC,EAAI+B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAC5B9B,EAAI6B,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAChC,OAA0B,IAAnBzM,KAAK2M,MAAMhC,EAAGF,GAAWzK,KAAK4M,EACzC,CA3TA1E,GAAM3E,UAAY,CAKdY,QAAS,WAAa,EAKtBwE,KAAM,WACFxG,KAAK0K,MAAQ5I,GAAkB9B,KAAKoE,QAASpE,KAAK0K,KAAM1K,KAAKqG,YAC7DrG,KAAK2K,UAAY7I,GAAkB9B,KAAKG,OAAQH,KAAK2K,SAAU3K,KAAKqG,YACpErG,KAAK4K,OAAS9I,GAAkBqC,EAAoBnE,KAAKoE,SAAUpE,KAAK4K,MAAO5K,KAAKqG,WACxF,EAKAwE,QAAS,WACL7K,KAAK0K,MAAQtI,GAAqBpC,KAAKoE,QAASpE,KAAK0K,KAAM1K,KAAKqG,YAChErG,KAAK2K,UAAYvI,GAAqBpC,KAAKG,OAAQH,KAAK2K,SAAU3K,KAAKqG,YACvErG,KAAK4K,OAASxI,GAAqB+B,EAAoBnE,KAAKoE,SAAUpE,KAAK4K,MAAO5K,KAAKqG,WAC3F,GA2TJ,IAAIyE,EAAkB,CAClBC,UAAW7F,EACX8F,UA/Xa,EAgYbC,QAAS9F,GAGT+F,EAAuB,YACvBC,EAAsB,oBAO1B,SAASC,IACLpL,KAAK0K,KAAOQ,EACZlL,KAAK4K,MAAQO,EAEbnL,KAAKqL,SAAU,EAEftF,GAAMhG,MAAMC,KAAMC,UACtB,CAEAa,GAAQsK,EAAYrF,GAAO,CAKvB/D,QAAS,SAAmBsE,GACxB,IAAII,EAAYoE,EAAgBxE,EAAGpE,MAG/BwE,EAAYxB,GAA6B,IAAdoB,EAAGgF,SAC9BtL,KAAKqL,SAAU,GA9ZV,EAiaL3E,GAAuC,IAAbJ,EAAGiF,QAC7B7E,EAAYvB,GAIXnF,KAAKqL,UAIN3E,EAAYvB,IACZnF,KAAKqL,SAAU,GAGnBrL,KAAKiG,SAASjG,KAAKgG,QAASU,EAAW,CACnCG,SAAU,CAACP,GACXS,gBAAiB,CAACT,GAClBkF,YAAaxG,GACb+E,SAAUzD,IAElB,IAGJ,IAAImF,EAAoB,CACpBC,YAAaxG,EACbyG,YAzba,EA0bbC,UAAWzG,EACX0G,cAAezG,EACf0G,WAAY1G,GAIZ2G,EAAyB,CACzB,EAAGhH,GACH,EAzciB,MA0cjB,EAAGC,GACH,EAzcoB,UA4cpBgH,EAAyB,cACzBC,EAAwB,sCAa5B,SAASC,IACLlM,KAAK0K,KAAOsB,EACZhM,KAAK4K,MAAQqB,EAEblG,GAAMhG,MAAMC,KAAMC,WAElBD,KAAKmM,MAASnM,KAAKgG,QAAQkB,QAAQkF,cAAgB,EACvD,CAjBIjP,GAAOkP,iBAAmBlP,GAAOmP,eACjCN,EAAyB,gBACzBC,EAAwB,6CAiB5BnL,GAAQoL,EAAmBnG,GAAO,CAK9B/D,QAAS,SAAmBsE,GACxB,IAAI6F,EAAQnM,KAAKmM,MACbI,GAAgB,EAEhBC,EAAsBlG,EAAGpE,KAAKuK,cAAc9M,QAAQ,KAAM,IAC1D+G,EAAY+E,EAAkBe,GAC9BhB,GAAcO,EAAuBzF,EAAGkF,cAAgBlF,EAAGkF,YAE3DkB,GAAWlB,IAAezG,GAG1B4H,GAAa3J,GAAQmJ,EAAO7F,EAAGsG,UAAW,aAG1ClG,EAAYxB,IAA8B,IAAdoB,EAAGgF,QAAgBoB,IAC3CC,GAAa,IACbR,EAAM1I,KAAK6C,GACXqG,GAAaR,EAAMnN,OAAS,GAEzB0H,GAAavB,EAAYC,KAChCmH,GAAgB,KAIhBI,GAAa,KAKjBR,EAAMQ,IAAcrG,EAEpBtG,KAAKiG,SAASjG,KAAKgG,QAASU,EAAW,CACnCG,SAAUsF,EACVpF,gBAAiB,CAACT,GAClBkF,YAAaA,GACbzB,SAAUzD,IAGViG,GAEAJ,EAAMU,OAAOF,GAAY,GAEjC,IAGJ,IAAIG,EAAyB,CACzBC,WAAY7H,EACZ8H,UAlhBa,EAmhBbC,SAAU9H,EACV+H,YAAa9H,GAWjB,SAAS+H,KACLnN,KAAK2K,SATwB,aAU7B3K,KAAK4K,MATwB,4CAU7B5K,KAAKoN,SAAU,EAEfrH,GAAMhG,MAAMC,KAAMC,UACtB,CAqCA,SAASoN,GAAuB/G,EAAIpE,GAChC,IAAIoL,EAAMpK,EAAQoD,EAAGiH,SACjBC,EAAUtK,EAAQoD,EAAGmH,gBAEzB,OAAIvL,GAAQiD,EAAYC,KACpBkI,EAAMlK,EAAYkK,EAAII,OAAOF,GAAU,cAAc,IAGlD,CAACF,EAAKE,EACjB,CA5CA1M,GAAQqM,GAAkBpH,GAAO,CAC7B/D,QAAS,SAAmBsE,GACxB,IAAIpE,EAAO4K,EAAuBxG,EAAGpE,MAOrC,GAJIA,IAASgD,IACTlF,KAAKoN,SAAU,GAGdpN,KAAKoN,QAIV,KAAIG,EAAUF,GAAuBpO,KAAKe,KAAMsG,EAAIpE,GAGhDA,GAAQiD,EAAYC,IAAiBmI,EAAQ,GAAGvO,OAASuO,EAAQ,GAAGvO,QAAW,IAC/EgB,KAAKoN,SAAU,GAGnBpN,KAAKiG,SAASjG,KAAKgG,QAAS9D,EAAM,CAC9B2E,SAAU0G,EAAQ,GAClBxG,gBAAiBwG,EAAQ,GACzB/B,YAAazG,GACbgF,SAAUzD,GACb,CACL,IAoBJ,IAAIqH,GAAkB,CAClBZ,WAAY7H,EACZ8H,UAvlBa,EAwlBbC,SAAU9H,EACV+H,YAAa9H,GAGbwI,GAAsB,4CAO1B,SAASC,KACL7N,KAAK2K,SAAWiD,GAChB5N,KAAK8N,UAAY,CAAC,EAElB/H,GAAMhG,MAAMC,KAAMC,UACtB,CAyBA,SAAS8N,EAAWzH,EAAIpE,GACpB,IAAI8L,EAAa9K,EAAQoD,EAAGiH,SACxBO,EAAY9N,KAAK8N,UAGrB,GAAI5L,GAtoBS,EAsoBDgD,IAAmD,IAAtB8I,EAAWhP,OAChD8O,SAAUE,EAAW,GAAGC,aAAc,EAC/B,CAACD,EAAYA,GAGxB,IAAIlP,EACAoP,EACAT,GAAiBvK,EAAQoD,EAAGmH,gBAC5BU,GAAuB,GACvBhO,GAASH,KAAKG,OAQlB,GALA+N,EAAgBF,EAAWI,OAAO,SAASC,IACvC,OAAO/L,GAAU+L,GAAMlO,OAAQA,GACnC,GAGI+B,IAASgD,EAET,IADApG,EAAI,EACGA,EAAIoP,EAAclP,QACrB8O,EAAUI,EAAcpP,GAAGmP,aAAc,EACzCnP,IAMR,IADAA,EAAI,EACGA,EAAI2O,GAAezO,QAClB8O,EAAUL,GAAe3O,GAAGmP,aAC5BE,GAAqB1K,KAAKgK,GAAe3O,IAIzCoD,GAAQiD,EAAYC,WACb0I,EAAUL,GAAe3O,GAAGmP,YAEvCnP,IAGJ,OAAKqP,GAAqBnP,OAInB,CAEHoE,EAAY8K,EAAcR,OAAOS,IAAuB,cAAc,GACtEA,SAPJ,CASJ,CA5EArN,GAAQ+M,GAAY9H,GAAO,CACvB/D,QAAS,SAAoBsE,GACzB,IAAIpE,EAAOyL,GAAgBrH,EAAGpE,MAC1BqL,EAAUQ,EAAW9O,KAAKe,KAAMsG,EAAIpE,GACnCqL,GAILvN,KAAKiG,SAASjG,KAAKgG,QAAS9D,EAAM,CAC9B2E,SAAU0G,EAAQ,GAClBxG,gBAAiBwG,EAAQ,GACzB/B,YAAazG,GACbgF,SAAUzD,GAElB,IA0EJ,IAAIgI,EAAgB,KAGpB,SAASC,KACLxI,GAAMhG,MAAMC,KAAMC,WAElB,IAAI+B,EAAU1D,GAAO0B,KAAKgC,QAAShC,MACnCA,KAAKqO,MAAQ,IAAIR,GAAW7N,KAAKgG,QAAShE,GAC1ChC,KAAKwO,MAAQ,IAAIpD,EAAWpL,KAAKgG,QAAShE,GAE1ChC,KAAKyO,aAAe,KACpBzO,KAAK0O,YAAc,EACvB,CAoCA,SAASC,GAAcjI,EAAWkI,GAC1BlI,EAAYxB,GACZlF,KAAKyO,aAAeG,EAAU7H,gBAAgB,GAAGkH,WACjDY,GAAa5P,KAAKe,KAAM4O,IACjBlI,GAAavB,EAAYC,IAChCyJ,GAAa5P,KAAKe,KAAM4O,EAEhC,CAEA,SAASC,GAAaD,GAClB,IAAIP,EAAQO,EAAU7H,gBAAgB,GAEtC,GAAIsH,EAAMJ,aAAejO,KAAKyO,aAAc,CACxC,IAAIK,EAAY,CAACxG,EAAG+F,EAAMnE,QAAS1B,EAAG6F,EAAMlE,SAC5CnK,KAAK0O,YAAYjL,KAAKqL,GACtB,IAAIC,EAAM/O,KAAK0O,YAOfrQ,WANsB,WAClB,IAAIS,EAAIiQ,EAAIlM,QAAQiM,GAChBhQ,GAAI,GACJiQ,EAAIlC,OAAO/N,EAAG,EAEtB,EAC4BwP,EAChC,CACJ,CAEA,SAASU,EAAiBJ,GAEtB,QADItG,EAAIsG,EAAU7E,SAASG,QAAS1B,EAAIoG,EAAU7E,SAASI,QAClDrL,EAAI,EAAGA,EAAIkB,KAAK0O,YAAY1P,OAAQF,IAAK,CAC9C,IAAImQ,EAAIjP,KAAK0O,YAAY5P,GACrBoQ,EAAKrR,KAAKC,IAAIwK,EAAI2G,EAAE3G,GAAI6G,GAAKtR,KAAKC,IAAI0K,EAAIyG,EAAEzG,GAChD,GAAI0G,GA9ES,IA8EeC,IA9Ef,GA+ET,OAAO,CAEf,CACA,OAAO,CACX,CAtEArO,GAAQyN,GAAiBxI,GAAO,CAO5B/D,QAAS,SAAoBgE,EAASoJ,EAAYC,GAC9C,IAAI3C,EAAW2C,EAAU7D,aAAezG,GACpCuK,EAAWD,EAAU7D,aAAexG,GAExC,KAAIsK,GAAWD,EAAUE,oBAAsBF,EAAUE,mBAAmBC,kBAK5E,IAAI9C,EACAiC,GAAc1P,KAAKe,KAAMoP,EAAYC,QAAS,GACvCC,GAAWN,EAAiB/P,KAAKe,KAAMqP,GAC9C,OAGJrP,KAAKiG,SAASD,EAASoJ,EAAYC,EAAS,CAChD,EAKAxE,QAAS,WACL7K,KAAKqO,MAAMxD,UACX7K,KAAKwO,MAAM3D,SACf,IAyCJ,IAAI4E,GAAwB7L,EAASnG,GAAaiS,MAAO,eACrDC,GAAsBF,KAA0BnS,GAGhDsS,EAAuB,UACvBC,EAAoB,OACpBC,EAA4B,eAC5BC,GAAoB,OACpBC,GAAqB,QACrBC,GAAqB,QACrBC,EA4IJ,SAASC,IACL,IAAKR,GACD,OAAO,EAEX,IAAIS,EAAW,CAAC,EACZC,EAAclT,GAAOmT,KAAOnT,GAAOmT,IAAIC,SAC3C,OAAC,OAAQ,eAAgB,QAAS,QAAS,cAAe,QAAQxR,QAAQ,SAAS0C,GAI/E2O,EAAS3O,IAAO4O,GAAclT,GAAOmT,IAAIC,SAAS,eAAgB9O,EACtE,GACO2O,CACX,CAzJuBD,GASvB,SAASK,EAAYxK,EAASyK,GAC1BzQ,KAAKgG,QAAUA,EACfhG,KAAK0Q,IAAID,EACb,CAEAD,EAAYpP,UAAY,CAKpBsP,IAAK,SAASD,GAENA,GAASb,IACTa,EAAQzQ,KAAK2Q,WAGbhB,IAAuB3P,KAAKgG,QAAQ5B,QAAQsL,OAASQ,EAAiBO,KACtEzQ,KAAKgG,QAAQ5B,QAAQsL,MAAMD,IAAyBgB,GAExDzQ,KAAK4Q,QAAUH,EAAMhE,cAAc3J,MACvC,EAKA+N,OAAQ,WACJ7Q,KAAK0Q,IAAI1Q,KAAKgG,QAAQG,QAAQ2K,YAClC,EAMAH,QAAS,WACL,IAAIC,EAAU,GACdjS,UAAKqB,KAAKgG,QAAQ+K,YAAa,SAASC,GAChCxP,GAASwP,EAAW7K,QAAQI,OAAQ,CAACyK,MACrCJ,EAAUA,EAAQlD,OAAOsD,EAAWC,kBAE5C,GA8DR,SAASC,EAAkBN,GAEvB,GAAIlO,GAAMkO,EAASb,IACf,OAAOA,GAGX,IAAIoB,EAAUzO,GAAMkO,EAASZ,IACzBoB,EAAU1O,GAAMkO,EAASX,IAM7B,OAAIkB,GAAWC,EACJrB,GAIPoB,GAAWC,EACJD,EAAUnB,GAAqBC,GAItCvN,GAAMkO,EAASd,GACRA,EAGJD,CACX,CAzFeqB,CAAkBN,EAAQS,KAAK,KAC1C,EAMAC,gBAAiB,SAAS3K,GACtB,IAAIoD,EAAWpD,EAAMoD,SACjBJ,EAAYhD,EAAM+B,gBAGtB,IAAI1I,KAAKgG,QAAQkB,QAAQqK,UAAzB,CAKA,IAAIX,EAAU5Q,KAAK4Q,QACfY,EAAU9O,GAAMkO,EAASb,MAAuBG,EAAiBH,IACjEqB,EAAU1O,GAAMkO,EAASX,MAAwBC,EAAiBD,IAClEkB,GAAUzO,GAAMkO,EAASZ,MAAwBE,EAAiBF,IAEtE,GAAIwB,EAAS,CAGT,IAAIC,GAAyC,IAA1B9K,EAAME,SAAS7H,OAC9B0S,GAAgB/K,EAAMoB,SAAW,EACjC4J,GAAiBhL,EAAMiB,UAAY,IAEvC,GAAI6J,IAAgBC,IAAiBC,GACjC,MAER,CAEA,OAAIR,IAAWC,KAKXI,GACCJ,GAAWzH,EAAYjE,IACvByL,IAAWxH,EAAYhE,SAP5B,EAQW3F,KAAK4R,WAAW7H,EA3B3B,CAFIA,EAAS8H,gBA+BjB,EAMAD,WAAY,SAAS7H,GACjB/J,KAAKgG,QAAQkB,QAAQqK,WAAY,EACjCxH,EAAS8H,gBACb,GAgFJ,IAAIC,GAAiB,EAcrB,SAASC,EAAW5L,GAChBnG,KAAKmG,QAAU5I,GAAO,CAAC,EAAGyC,KAAKgS,SAAU7L,GAAW,CAAC,GAErDnG,KAAKiS,GArgCT,SAASC,IACL,OAAOhO,GACX,CAmgCcgO,GAEVlS,KAAKgG,QAAU,KAGfhG,KAAKmG,QAAQI,OAAS5E,GAAY3B,KAAKmG,QAAQI,QAAQ,GAEvDvG,KAAKmS,MAAQL,GAEb9R,KAAKoS,aAAe,CAAC,EACrBpS,KAAKqS,YAAc,EACvB,CAoOA,SAASC,EAASH,GACd,OA5PkB,GA4PdA,EACO,SA/PG,EAgQHA,EACA,MAlQK,EAmQLA,EACA,OArQG,EAsQHA,EACA,QAEJ,EACX,CAOA,SAASI,EAAa5I,GAClB,OAAIA,GAAalE,EACN,OACAkE,GAAanE,EACb,KACAmE,GAAarE,EACb,OACAqE,GAAapE,EACb,QAEJ,EACX,CAQA,SAASiN,EAA6BC,EAAiBzB,GACnD,IAAIhL,EAAUgL,EAAWhL,QACzB,OAAIA,EACOA,EAAQ0M,IAAID,GAEhBA,CACX,CAOA,SAASE,IACLZ,EAAWhS,MAAMC,KAAMC,UAC3B,CA4DA,SAAS2S,IACLD,EAAe5S,MAAMC,KAAMC,WAE3BD,KAAK6S,GAAK,KACV7S,KAAK8S,GAAK,IACd,CA2EA,SAASC,IACLJ,EAAe5S,MAAMC,KAAMC,UAC/B,CAqCA,SAAS+S,KACLjB,EAAWhS,MAAMC,KAAMC,WAEvBD,KAAKiT,OAAS,KACdjT,KAAKkT,OAAS,IAClB,CAkEA,SAASC,KACLR,EAAe5S,MAAMC,KAAMC,UAC/B,CA6BA,SAASmT,KACLT,EAAe5S,MAAMC,KAAMC,UAC/B,CA0DA,SAASoT,KACLtB,EAAWhS,MAAMC,KAAMC,WAIvBD,KAAKsT,OAAQ,EACbtT,KAAKuT,SAAU,EAEfvT,KAAKiT,OAAS,KACdjT,KAAKkT,OAAS,KACdlT,KAAKwT,MAAQ,CACjB,CAoGA,SAASC,GAAOrP,EAAS+B,GACrBA,SAAUA,GAAW,CAAC,GACd4K,YAAcpP,GAAYwE,EAAQ4K,YAAa0C,GAAOzB,SAAS0B,QAChE,IAAIC,GAAQvP,EAAS+B,EAChC,CA9tBA4L,EAAW3Q,UAAY,CAKnB4Q,SAAU,CAAC,EAOXtB,IAAK,SAASvK,GACV5I,UAAOyC,KAAKmG,QAASA,GAGrBnG,KAAKgG,SAAWhG,KAAKgG,QAAQ8K,YAAYD,SAClC7Q,IACX,EAOA4T,cAAe,SAASnB,GACpB,GAAIlU,GAAekU,EAAiB,gBAAiBzS,MACjD,OAAOA,KAGX,IAAIoS,EAAepS,KAAKoS,aACxBK,OACKL,GADLK,EAAkBD,EAA6BC,EAAiBzS,OAC9BiS,MAC9BG,EAAaK,EAAgBR,IAAMQ,EACnCA,EAAgBmB,cAAc5T,OAE3BA,IACX,EAOA6T,kBAAmB,SAASpB,GACxB,OAAIlU,GAAekU,EAAiB,oBAAqBzS,QAIzDyS,EAAkBD,EAA6BC,EAAiBzS,aACzDA,KAAKoS,aAAaK,EAAgBR,KAJ9BjS,IAMf,EAOA8T,eAAgB,SAASrB,GACrB,GAAIlU,GAAekU,EAAiB,iBAAkBzS,MAClD,OAAOA,KAGX,IAAIqS,EAAcrS,KAAKqS,YACvBI,OAC8C,IAA1CzP,GAAQqP,EADZI,EAAkBD,EAA6BC,EAAiBzS,SAE5DqS,EAAY5O,KAAKgP,GACjBA,EAAgBqB,eAAe9T,OAE5BA,IACX,EAOA+T,mBAAoB,SAAStB,GACzB,GAAIlU,GAAekU,EAAiB,qBAAsBzS,MACtD,OAAOA,KAGXyS,EAAkBD,EAA6BC,EAAiBzS,MAChE,IAAIM,EAAQ0C,GAAQhD,KAAKqS,YAAaI,GACtC,OAAInS,GAAQ,GACRN,KAAKqS,YAAYxF,OAAOvM,EAAO,GAE5BN,IACX,EAMAgU,mBAAoB,WAChB,OAAOhU,KAAKqS,YAAYrT,OAAS,CACrC,EAOAiV,iBAAkB,SAASxB,GACvB,QAASzS,KAAKoS,aAAaK,EAAgBR,GAC/C,EAOAjI,KAAM,SAASrD,GACX,IAAIT,EAAOlG,KACPmS,EAAQnS,KAAKmS,MAEjB,SAASnI,EAAKkK,GACVhO,EAAKF,QAAQgE,KAAKkK,EAAOvN,EAC7B,CAGIwL,EArJM,GAsJNnI,EAAK9D,EAAKC,QAAQ+N,MAAQ5B,EAASH,IAGvCnI,EAAK9D,EAAKC,QAAQ+N,OAEdvN,EAAMwN,iBACNnK,EAAKrD,EAAMwN,iBAIXhC,GAhKM,GAiKNnI,EAAK9D,EAAKC,QAAQ+N,MAAQ5B,EAASH,GAE3C,EAQAiC,QAAS,SAASzN,GACd,GAAI3G,KAAKqU,UACL,OAAOrU,KAAKgK,KAAKrD,GAGrB3G,KAAKmS,MA7KM,EA8Kf,EAMAkC,QAAS,WAEL,QADIvV,EAAI,EACDA,EAAIkB,KAAKqS,YAAYrT,QAAQ,CAChC,KAAMgB,KAAKqS,YAAYvT,GAAGqT,OAvLnB,GAuL2CL,KAC9C,OAAO,EAEXhT,GACJ,CACA,OAAO,CACX,EAMAmL,UAAW,SAASoF,GAGhB,IAAIiF,EAAiB/W,GAAO,CAAC,EAAG8R,GAGhC,IAAK7N,GAASxB,KAAKmG,QAAQI,OAAQ,CAACvG,KAAMsU,IAGtC,OAFAtU,KAAKuU,aACLvU,KAAKmS,MA3ME,IAgNFA,GAALnS,KAAKmS,QACLnS,KAAKmS,MAAQL,IAGjB9R,KAAKmS,MAAQnS,KAAKwU,QAAQF,GAIjBnC,GAALnS,KAAKmS,OACLnS,KAAKoU,QAAQE,EAErB,EASAE,QAAS,SAASnF,GAAa,EAO/B4B,eAAgB,WAAa,EAO7BsD,MAAO,WAAa,GA8DxBzT,GAAQ6R,EAAgBZ,EAAY,CAKhCC,SAAU,CAKNnL,SAAU,GASd4N,SAAU,SAAS9N,GACf,IAAI+N,EAAiB1U,KAAKmG,QAAQU,SAClC,OAA0B,IAAnB6N,GAAwB/N,EAAME,SAAS7H,SAAW0V,CAC7D,EAQAF,QAAS,SAAS7N,GACd,IAAIwL,EAAQnS,KAAKmS,MACbzL,EAAYC,EAAMD,UAElBiO,EAAexC,IACfyC,EAAU5U,KAAKyU,SAAS9N,GAG5B,OAAIgO,IAAiBjO,EAAYtB,IAAiBwP,GAvVpC,GAwVHzC,EACAwC,GAAgBC,EACnBlO,EAAYvB,EA5VV,EA6VKgN,EA/VL,EAgWOA,EA/VL,EAkWDA,EAnWD,EAKC,EAiWf,IAgBJrR,GAAQ8R,EAAeD,EAAgB,CAKnCX,SAAU,CACNkC,MAAO,MACPW,UAAW,GACXhO,SAAU,EACV8C,UAAW/D,IAGfqL,eAAgB,WACZ,IAAItH,EAAY3J,KAAKmG,QAAQwD,UACzBiH,EAAU,GACd,OAAIjH,EAAYjE,IACZkL,EAAQnN,KAAKwM,IAEbtG,EAAYhE,IACZiL,EAAQnN,KAAKuM,IAEVY,CACX,EAEAkE,cAAe,SAASnO,GACpB,IAAIR,EAAUnG,KAAKmG,QACf4O,GAAW,EACXhN,EAAWpB,EAAMoB,SACjB4B,EAAYhD,EAAMgD,UAClBrB,EAAI3B,EAAM4B,OACVC,GAAI7B,EAAM8B,OAGd,OAAMkB,EAAYxD,EAAQwD,YAClBxD,EAAQwD,UAAYjE,IACpBiE,EAAmB,IAANrB,EAAWjD,EAAkBiD,EAAI,EAAKhD,EAAiBC,EACpEwP,EAAWzM,GAAKtI,KAAK6S,GACrB9K,EAAWlK,KAAKC,IAAI6I,EAAM4B,UAE1BoB,EAAmB,IAANnB,GAAWnD,EAAkBmD,GAAI,EAAKhD,EAAeC,EAClEsP,EAAWvM,IAAKxI,KAAK8S,GACrB/K,EAAWlK,KAAKC,IAAI6I,EAAM8B,UAGlC9B,EAAMgD,UAAYA,EACXoL,GAAYhN,EAAW5B,EAAQ0O,WAAalL,EAAYxD,EAAQwD,SAC3E,EAEA8K,SAAU,SAAS9N,GACf,OAAOgM,EAAevR,UAAUqT,SAASxV,KAAKe,KAAM2G,KAva1C,EAwaL3G,KAAKmS,SAxaA,EAwa0BnS,KAAKmS,QAAwBnS,KAAK8U,cAAcnO,GACxF,EAEAqD,KAAM,SAASrD,GAEX3G,KAAK6S,GAAKlM,EAAM4B,OAChBvI,KAAK8S,GAAKnM,EAAM8B,OAEhB,IAAIkB,EAAY4I,EAAa5L,EAAMgD,WAE/BA,IACAhD,EAAMwN,gBAAkBnU,KAAKmG,QAAQ+N,MAAQvK,GAEjD3J,KAAKuB,OAAOyI,KAAK/K,KAAKe,KAAM2G,EAChC,IAaJ7F,GAAQiS,EAAiBJ,EAAgB,CAKrCX,SAAU,CACNkC,MAAO,QACPW,UAAW,EACXhO,SAAU,GAGdoK,eAAgB,WACZ,MAAO,CAAClB,GACZ,EAEA0E,SAAU,SAAS9N,GACf,OAAO3G,KAAKuB,OAAOkT,SAASxV,KAAKe,KAAM2G,KAClC9I,KAAKC,IAAI6I,EAAMqC,MAAQ,GAAKhJ,KAAKmG,QAAQ0O,WApdpC,EAodiD7U,KAAKmS,MACpE,EAEAnI,KAAM,SAASrD,GACX,GAAoB,IAAhBA,EAAMqC,MAAa,CACnB,IAAIgM,EAAQrO,EAAMqC,MAAQ,EAAI,KAAO,MACrCrC,EAAMwN,gBAAkBnU,KAAKmG,QAAQ+N,MAAQc,CACjD,CACAhV,KAAKuB,OAAOyI,KAAK/K,KAAKe,KAAM2G,EAChC,IAgBJ7F,GAAQkS,GAAiBjB,EAAY,CAKjCC,SAAU,CACNkC,MAAO,QACPrN,SAAU,EACVoO,KAAM,IACNJ,UAAW,GAGf5D,eAAgB,WACZ,MAAO,CAACpB,EACZ,EAEA2E,QAAS,SAAS7N,GACd,IAAIR,EAAUnG,KAAKmG,QACf+O,EAAgBvO,EAAME,SAAS7H,SAAWmH,EAAQU,SAClDsO,EAAgBxO,EAAMoB,SAAW5B,EAAQ0O,UACzCO,EAAYzO,EAAMiB,UAAYzB,EAAQ8O,KAM1C,GAJAjV,KAAKkT,OAASvM,GAITwO,IAAkBD,GAAkBvO,EAAMD,WAAavB,EAAYC,KAAkBgQ,EACtFpV,KAAKuU,aAAM,GACJ5N,EAAMD,UAAYxB,EACzBlF,KAAKuU,QACLvU,KAAKiT,OAAShV,GAAkB,WAC5B+B,KAAKmS,MA1gBH,EA2gBFnS,KAAKoU,SACT,EAAGjO,EAAQ8O,KAAMjV,WAAI,GACd2G,EAAMD,UAAYvB,EACzB,OA9gBM,EAghBV,OA7gBW,EA8gBf,EAEAoP,MAAO,WACHc,aAAarV,KAAKiT,OACtB,EAEAjJ,KAAM,SAASrD,GAvhBD,IAwhBN3G,KAAKmS,QAILxL,GAAUA,EAAMD,UAAYvB,EAC5BnF,KAAKgG,QAAQgE,KAAKhK,KAAKmG,QAAQ+N,MAAQ,KAAMvN,IAE7C3G,KAAKkT,OAAOvL,UAAY5J,KACxBiC,KAAKgG,QAAQgE,KAAKhK,KAAKmG,QAAQ+N,MAAOlU,KAAKkT,SAEnD,IAaJpS,GAAQqS,GAAkBR,EAAgB,CAKtCX,SAAU,CACNkC,MAAO,SACPW,UAAW,EACXhO,SAAU,GAGdoK,eAAgB,WACZ,MAAO,CAAClB,GACZ,EAEA0E,SAAU,SAAS9N,GACf,OAAO3G,KAAKuB,OAAOkT,SAASxV,KAAKe,KAAM2G,KAClC9I,KAAKC,IAAI6I,EAAMyC,UAAYpJ,KAAKmG,QAAQ0O,WAlkBnC,EAkkBgD7U,KAAKmS,MACnE,IAaJrR,GAAQsS,GAAiBT,EAAgB,CAKrCX,SAAU,CACNkC,MAAO,QACPW,UAAW,GACXrL,SAAU,GACVG,UAAWjE,GAAuBC,GAClCkB,SAAU,GAGdoK,eAAgB,WACZ,OAAO2B,EAAcxR,UAAU6P,eAAehS,KAAKe,KACvD,EAEAyU,SAAU,SAAS9N,GACf,IACI6C,EADAG,EAAY3J,KAAKmG,QAAQwD,UAG7B,OAAIA,GAAajE,GAAuBC,IACpC6D,EAAW7C,EAAMiC,gBACVe,EAAYjE,GACnB8D,EAAW7C,EAAMmC,iBACVa,EAAYhE,KACnB6D,EAAW7C,EAAMoC,kBAGd/I,KAAKuB,OAAOkT,SAASxV,KAAKe,KAAM2G,IACnCgD,EAAYhD,EAAM+B,iBAClB/B,EAAMoB,SAAW/H,KAAKmG,QAAQ0O,WAC9BlO,EAAM2C,aAAetJ,KAAKmG,QAAQU,UAClC/I,GAAI0L,GAAYxJ,KAAKmG,QAAQqD,UAAY7C,EAAMD,UAAYvB,CACnE,EAEA6E,KAAM,SAASrD,GACX,IAAIgD,EAAY4I,EAAa5L,EAAM+B,iBAC/BiB,GACA3J,KAAKgG,QAAQgE,KAAKhK,KAAKmG,QAAQ+N,MAAQvK,EAAWhD,GAGtD3G,KAAKgG,QAAQgE,KAAKhK,KAAKmG,QAAQ+N,MAAOvN,EAC1C,IA0BJ7F,GAAQuS,GAAetB,EAAY,CAK/BC,SAAU,CACNkC,MAAO,MACPrN,SAAU,EACVyO,KAAM,EACNC,SAAU,IACVN,KAAM,IACNJ,UAAW,EACXW,aAAc,IAGlBvE,eAAgB,WACZ,MAAO,CAACnB,EACZ,EAEA0E,QAAS,SAAS7N,GACd,IAAIR,EAAUnG,KAAKmG,QAEf+O,EAAgBvO,EAAME,SAAS7H,SAAWmH,EAAQU,SAClDsO,EAAgBxO,EAAMoB,SAAW5B,EAAQ0O,UACzCY,EAAiB9O,EAAMiB,UAAYzB,EAAQ8O,KAI/C,GAFAjV,KAAKuU,QAEA5N,EAAMD,UAAYxB,GAAgC,IAAflF,KAAKwT,MACzC,OAAOxT,KAAK0V,cAKhB,GAAIP,GAAiBM,GAAkBP,EAAe,CAClD,GAAIvO,EAAMD,WAAavB,EACnB,OAAOnF,KAAK0V,cAGhB,IAAIC,GAAgB3V,KAAKsT,OAAS3M,EAAMgB,UAAY3H,KAAKsT,MAAQnN,EAAQoP,SACrEK,IAAiB5V,KAAKuT,SAAWvL,GAAYhI,KAAKuT,QAAS5M,EAAMc,QAAUtB,EAAQqP,aAgBvF,GAdAxV,KAAKsT,MAAQ3M,EAAMgB,UACnB3H,KAAKuT,QAAU5M,EAAMc,OAEhBmO,IAAkBD,EAGnB3V,KAAKwT,OAAS,EAFdxT,KAAKwT,MAAQ,EAKjBxT,KAAKkT,OAASvM,EAKG,IADF3G,KAAKwT,MAAQrN,EAAQmP,KAIhC,OAAKtV,KAAKgU,sBAGNhU,KAAKiT,OAAShV,GAAkB,WAC5B+B,KAAKmS,MAltBX,EAmtBMnS,KAAKoU,SACT,EAAGjO,EAAQoP,SAAUvV,MAttBvB,GAEA,CAwtBV,CACA,OAttBW,EAutBf,EAEA0V,YAAa,WACT,OAAA1V,KAAKiT,OAAShV,GAAkB,WAC5B+B,KAAKmS,MA3tBE,EA4tBX,EAAGnS,KAAKmG,QAAQoP,SAAUvV,MA5tBf,EA8tBf,EAEAuU,MAAO,WACHc,aAAarV,KAAKiT,OACtB,EAEAjJ,KAAM,WAvuBQ,GAwuBNhK,KAAKmS,QACLnS,KAAKkT,OAAO2C,SAAW7V,KAAKwT,MAC5BxT,KAAKgG,QAAQgE,KAAKhK,KAAKmG,QAAQ+N,MAAOlU,KAAKkT,QAEnD,IAkBJO,GAAOqC,QAAU,QAMjBrC,GAAOzB,SAAW,CAOd+D,WAAW,EAQXjF,YAAalB,EAMbrJ,QAAQ,EASRH,YAAa,KAOb4P,WAAY,KAOZtC,OAAQ,CAEJ,CAACP,GAAkB,CAAC5M,QAAQ,IAC5B,CAACwM,EAAiB,CAACxM,QAAQ,GAAQ,CAAC,WACpC,CAAC6M,GAAiB,CAACzJ,UAAWjE,KAC9B,CAACkN,EAAe,CAACjJ,UAAWjE,IAAuB,CAAC,UACpD,CAAC2N,IACD,CAACA,GAAe,CAACa,MAAO,YAAaoB,KAAM,GAAI,CAAC,QAChD,CAACtC,KAQLiD,SAAU,CAMNC,WAAY,OAOZC,YAAa,OASbC,aAAc,OAOdC,eAAgB,OAOhBC,SAAU,OAQVC,kBAAmB,kBAa3B,SAAS5C,GAAQvP,EAAS+B,GACtBnG,KAAKmG,QAAU5I,GAAO,CAAC,EAAGkW,GAAOzB,SAAU7L,GAAW,CAAC,GAEvDnG,KAAKmG,QAAQC,YAAcpG,KAAKmG,QAAQC,aAAehC,EAEvDpE,KAAKwW,SAAW,CAAC,EACjBxW,KAAKkH,QAAU,CAAC,EAChBlH,KAAK+Q,YAAc,GACnB/Q,KAAKyW,YAAc,CAAC,EAEpBzW,KAAKoE,QAAUA,EACfpE,KAAK2G,MApxDT,SAAS+P,GAAoB1Q,GACzB,IACIgQ,EAAahQ,EAAQG,QAAQ6P,WAEjC,OAWO,IAXHA,IAEOtR,EACAwH,EACAvH,GACAkJ,GACCpJ,EAGD8J,GAFAnD,IAIOpF,EAASS,GAC/B,CAowDiBiQ,CAAoB1W,MACjCA,KAAK8Q,YAAc,IAAIN,EAAYxQ,KAAMA,KAAKmG,QAAQ2K,aAEtD6F,GAAe3W,MAAM,GAErBrB,GAAKqB,KAAKmG,QAAQ4K,YAAa,SAAS6F,GACpC,IAAI5F,EAAahR,KAAK6W,IAAI,IAAKD,EAAK,GAAIA,EAAK,KAC7CA,EAAK,IAAM5F,EAAW4C,cAAcgD,EAAK,IACzCA,EAAK,IAAM5F,EAAW8C,eAAe8C,EAAK,GAC9C,EAAG5W,KACP,CA2PA,SAAS2W,GAAe3Q,EAAS6Q,GAC7B,IAII9S,EAJAK,EAAU4B,EAAQ5B,QACjBA,EAAQsL,QAIb/Q,GAAKqH,EAAQG,QAAQ8P,SAAU,SAASxF,EAAOpR,GAC3C0E,EAAOH,EAASQ,EAAQsL,MAAOrQ,GAC3BwX,GACA7Q,EAAQyQ,YAAY1S,GAAQK,EAAQsL,MAAM3L,GAC1CK,EAAQsL,MAAM3L,GAAQ0M,GAEtBrM,EAAQsL,MAAM3L,GAAQiC,EAAQyQ,YAAY1S,IAAS,EAE3D,GACK8S,IACD7Q,EAAQyQ,YAAc,CAAC,GAE/B,CA3QA9C,GAAQvS,UAAY,CAMhBsP,IAAK,SAASvK,GACV5I,UAAOyC,KAAKmG,QAASA,GAGjBA,EAAQ2K,aACR9Q,KAAK8Q,YAAYD,SAEjB1K,EAAQC,cAERpG,KAAK2G,MAAMkE,UACX7K,KAAK2G,MAAMxG,OAASgG,EAAQC,YAC5BpG,KAAK2G,MAAMH,QAERxG,IACX,EAQA8W,KAAM,SAASC,GACX/W,KAAKkH,QAAQ8P,QAAUD,EA5Db,EADP,CA8DP,EAQA9M,UAAW,SAASoF,GAChB,IAAInI,EAAUlH,KAAKkH,QACnB,IAAIA,EAAQ8P,QAKZ,CAAAhX,KAAK8Q,YAAYQ,gBAAgBjC,GAEjC,IAAI2B,EACAD,EAAc/Q,KAAK+Q,YAKnBkG,EAAgB/P,EAAQ+P,gBAIvBA,GAAkBA,GAz8Bb,EAy8B8BA,EAAc9E,SAClD8E,EAAgB/P,EAAQ+P,cAAgB,MAI5C,QADInY,EAAI,EACDA,EAAIiS,EAAY/R,QACnBgS,EAAaD,EAAYjS,GA9FnB,IAsGFoI,EAAQ8P,SACHC,GAAiBjG,GAAciG,IAChCjG,EAAWiD,iBAAiBgD,GAGhCjG,EAAWuD,QAFXvD,EAAW/G,UAAUoF,IAOpB4H,GAA4B9E,GAAXnB,EAAWmB,QAC7B8E,EAAgB/P,EAAQ+P,cAAgBjG,GAE5ClS,IAER,EAOA4T,IAAK,SAAS1B,GACV,GAAIA,aAAsBe,EACtB,OAAOf,EAIX,QADID,EAAc/Q,KAAK+Q,YACdjS,EAAI,EAAGA,EAAIiS,EAAY/R,OAAQF,IACpC,GAAIiS,EAAYjS,GAAGqH,QAAQ+N,OAASlD,EAChC,OAAOD,EAAYjS,GAG3B,OAAO,IACX,EAQA+X,IAAK,SAAS7F,GACV,GAAIzS,GAAeyS,EAAY,MAAOhR,MAClC,OAAOA,KAIX,IAAIkX,EAAWlX,KAAK0S,IAAI1B,EAAW7K,QAAQ+N,OAC3C,OAAIgD,GACAlX,KAAKmX,OAAOD,GAGhBlX,KAAK+Q,YAAYtN,KAAKuN,GACtBA,EAAWhL,QAAUhG,KAErBA,KAAK8Q,YAAYD,SACVG,CACX,EAOAmG,OAAQ,SAASnG,GACb,GAAIzS,GAAeyS,EAAY,SAAUhR,MACrC,OAAOA,KAMX,GAHAgR,EAAahR,KAAK0S,IAAI1B,GAGN,CACZ,IAAID,EAAc/Q,KAAK+Q,YACnBzQ,EAAQ0C,GAAQ+N,EAAaC,IAEnB,IAAV1Q,IACAyQ,EAAYlE,OAAOvM,EAAO,GAC1BN,KAAK8Q,YAAYD,SAEzB,CAEA,OAAO7Q,IACX,EAQAoX,GAAI,SAASC,EAAQrV,GACjB,GAAIqV,IAAW/Z,IAGX0E,IAAY1E,GAIhB,KAAIkZ,EAAWxW,KAAKwW,SACpB7X,UAAKsD,GAASoV,GAAS,SAASnD,GAC5BsC,EAAStC,GAASsC,EAAStC,IAAU,GACrCsC,EAAStC,GAAOzQ,KAAKzB,EACzB,GACOhC,IAAA,CACX,EAQAsX,IAAK,SAASD,EAAQrV,GAClB,GAAIqV,IAAW/Z,GAIf,KAAIkZ,EAAWxW,KAAKwW,SACpB7X,UAAKsD,GAASoV,GAAS,SAASnD,GACvBlS,EAGDwU,EAAStC,IAAUsC,EAAStC,GAAOrH,OAAO7J,GAAQwT,EAAStC,GAAQlS,GAAU,UAFtEwU,EAAStC,EAIxB,GACOlU,IAAA,CACX,EAOAgK,KAAM,SAASkK,EAAOqD,GAEdvX,KAAKmG,QAAQ4P,WAkEzB,SAASyB,GAAgBtD,EAAOqD,GAC5B,IAAIE,EAAera,GAASsa,YAAY,SACxCD,EAAaE,UAAUzD,GAAO,GAAM,GACpCuD,EAAaG,QAAUL,EACvBA,EAAKpX,OAAO0X,cAAcJ,EAC9B,CAtEYD,CAAgBtD,EAAOqD,GAI3B,IAAIf,EAAWxW,KAAKwW,SAAStC,IAAUlU,KAAKwW,SAAStC,GAAO/Q,QAC5D,GAAKqT,GAAaA,EAASxX,OAI3BuY,GAAKrV,KAAOgS,EACZqD,EAAK1F,eAAiB,WAClB0F,EAAKxN,SAAS8H,gBAClB,EAGA,QADI/S,EAAI,EACDA,EAAI0X,EAASxX,QAChBwX,EAAS1X,GAAGyY,GACZzY,IAER,EAMA+L,QAAS,WACL7K,KAAKoE,SAAWuS,GAAe3W,MAAM,GAErCA,KAAKwW,SAAW,CAAC,EACjBxW,KAAKkH,QAAU,CAAC,EAChBlH,KAAK2G,MAAMkE,UACX7K,KAAKoE,QAAU,IACnB,GAwCJ7G,GAAOkW,GAAQ,CACXvO,YAAaA,EACb4S,WAtoEa,EAuoEb3S,UAAWA,EACXC,aAAcA,EAEd0M,eAAgBA,GAChBiG,YAlrCc,EAmrCdC,cAlrCgB,EAmrChBC,YAlrCc,EAmrCdC,iBAnrCc,EAorCdC,gBAlrCkB,GAmrClBC,aAlrCe,GAorCf/S,eAAgBA,EAChBC,eAAgBA,EAChBC,gBAAiBA,EACjBC,aAAcA,EACdC,eAAgBA,EAChBC,qBAAsBA,GACtBC,mBAAoBA,GACpBC,cAAeA,GAEf+N,QAASA,GACT5N,MAAOA,GACPyK,YAAaA,EAEb3C,WAAYA,GACZzC,WAAYA,EACZc,kBAAmBA,EACnBqC,gBAAiBA,GACjBpB,iBAAkBA,GAElB4E,WAAYA,EACZY,eAAgBA,EAChB0F,IAAKhF,GACLiF,IAAK1F,EACL2F,MAAOnF,GACPoF,MAAOzF,EACP0F,OAAQtF,GACRuF,MAAO1F,GAEPoE,GAAItV,GACJwV,IAAKlV,GACLzD,KAAMA,GACNiC,MAAOA,GACPH,OAAQA,GACRlD,OAAQA,GACRuD,QAASA,GACTxC,OAAQA,GACRsF,SAAUA,YAKWzG,GAAW,IAAcA,UAAiB+I,KAAS,IAAcA,KAAO,CAAC,GACvFuN,OAASA,IAGhBkF,GAAO,WACH,OAAOlF,EACX,EAACxU,KAAA2Z,GAAAC,GAAAD,GAAAE,OAAAxb,KAAAwb,GAAAF,QAAA1b,GAOL,CA7kFA,CA6kFGC,OAAQC,iCC5kFX,SAAS2b,GAAaC,GAClBA,EAAKC,aAAa,UAAW,CAACC,EAAQF,EAAMG,KAaxC,IAAKH,EACD,MAAM,IAAIvZ,MAAM,oBAMpB,UALW2Z,KAAS,YAKTC,QAAW,KAAeA,QAAQC,eACzC,OAEJD,QAAQC,gBAAoB,EAC5B,MAAMC,EAAmBP,EAAKO,iBACxBC,EAAgBR,EAAKQ,cAC3B,IAAKD,EACD,MAAM,IAAI9Z,MAAM,6BACpB,IAAK+Z,EACD,MAAM,IAAI/Z,MAAM,0BACpB,MAAMga,EAAcT,EAAKU,QACnBC,EAASX,EAAKY,WAEdC,IAAkF,IAApDX,EAAOS,EAAO,kCAI5CG,IAAuCD,MACC,IAAzCX,EAAOS,EAAO,yBACkD,IAA7DT,EAAOS,EAAO,4CAEtB,IADgF,IAA/CT,EAAOS,EAAO,6BAChB,CAC3B,MAAMI,EAAeV,QAAQW,aACzBD,IAAiBV,QAAQM,EAAO,mBAChCN,QAAQM,EAAO,iBAAmBI,EAClCV,QAAQW,aAAe,WACnB,MAAMC,EAAW,IAAIF,EACfG,EAAkBD,EAASE,QACjC,OAAID,IAAoBD,EAASN,EAAO,cACpCM,EAASN,EAAO,YAAcO,EAC9BD,EAASE,QAAU,WACf,MAAMC,SAAgB5F,QAAY,OAAiBA,QAAQ4C,GAOrDiD,EAAmBD,EACnB5F,QAAQ8F,UAAU,sBAClBpB,EAAOqB,eAAe,sBACtBC,EAASN,EAAgBna,MAAMC,KAAMC,WAC3Cma,SACM5F,QAAQiG,mBAAmB,sBAC3BvB,EAAOuB,mBAAmB,sBAC5BJ,GACAA,EAAiBtb,QAASiD,IAClBoY,EACA5F,QAAQ4C,GAAG,qBAAsBpV,GAGjCkX,EAAO/W,iBAAiB,qBAAsBH,EAAO,GAI1DwY,CACX,GAEGP,CACX,EAER,CAEA,MAAMS,GAAarB,QAAQsB,SAuB3B,GAtBA,CAAC,WAAY,YAAa,aAAa5b,QAAS6b,IAC5C,IAAIC,EAAoBH,GAAWE,GACnCF,GAAWE,GAAc,SAAUE,EAAaC,GAC5C,OAAOF,EAAkB5b,KAAKe,KAAM8a,EAkG5C,SAASE,GAAmBF,EAAaG,GACrC,OAAO,WAIH,OADiBxB,EAAYyB,KAAK,IAAI3B,EAAiB,oBAAoBuB,MAC3DK,IAAIF,EAAcjb,KAAMC,UAC5C,CACJ,CAzGyD+a,CAAmBF,EAAaC,GACrF,IAEJ,CAAC,KAAM,MAAO,OAAOhc,QAAS6b,IAC1B,IAAIC,EAAoBH,GAAWE,GACnCF,GAAWf,EAAOiB,IAAeC,EACjCH,GAAWE,GAAc,SAAUE,EAAaC,EAAiB5c,GAC7D8B,iBAAU,GAAKmb,EAAeL,GACvBF,EAAkB9a,MAAMC,KAAMC,UACzC,IAEJ,CAAC,aAAc,YAAa,YAAa,YAAYlB,QAAS6b,IAC1D,IAAIC,EAAoBH,GAAWE,GACnCF,GAAWf,EAAOiB,IAAeC,EACjCH,GAAWE,GAAc,SAAUG,EAAiB5c,GAChD8B,iBAAU,GAAKmb,EAAeL,GACvBF,EAAkB9a,MAAMC,KAAMC,UACzC,KAEC4Z,GAA6B,CAG9B,MAAMwB,EAAmBhC,QAAQM,EAAO,UAAYN,QAAQiC,MAC5DjC,QAAQiC,MAAW,WACf,MAAMA,EAAQD,EAAgBtb,MAAMC,KAAMC,WAC1C,IAAKqb,EAAM3B,EAAO,YAAa,CAC3B2B,EAAM3B,EAAO,YAAcA,EAAO,WAClC,MAAM4B,EAAgBD,EAAM3B,EAAO,SAAW2B,EAAME,KACpDF,EAAME,KAAO,WACT,MAAMC,EAAoBzC,EAAKU,QAAQhH,IAAI,yBAC3C,OAAI+I,EACOA,EAAkBD,KAAKzb,MAAM0b,EAAmBxb,WAEpDsb,EAAaxb,MAAMC,KAAMC,UACpC,EACA,MAAMyb,EAAoBJ,EAAM3B,EAAO,aAAe2B,EAAMK,SAC5DL,EAAMK,SAAW,WACb,MAAMF,EAAoBzC,EAAKU,QAAQhH,IAAI,yBAC3C,GAAI+I,EAAmB,CACnB,MAAMG,EAAW3b,UAAUjB,OAAS,EAAIiB,UAAU,GAAK,IAAIjC,KAC3D,OAAOyd,EAAkBI,sBAAsB9b,MAAM0b,EAAmBG,GAAwC,mBAArBA,EAASE,QAC9F,CAACF,EAASE,WACV7b,UACV,CACA,OAAOyb,EAAiB3b,MAAMC,KAAMC,UACxC,EAEI6Z,IACA,CAAC,UAAW,aAAa/a,QAAS6b,IAC9B,MAAMS,EAAmBC,EAAM3B,EAAOiB,IAAeU,EAAMV,GAC3DU,EAAMV,GAAc,WAEhB,IAD8B5B,EAAK+C,sBAKnC,OAAOV,EAAgBtb,MAAMC,KAAMC,WAH/BoZ,QAAQM,EAAO,mBAAqB,YAAciB,CAI1D,GAGZ,CACA,OAAOU,CACX,CACJ,CAEA,IAAKjC,QAAQL,EAAKY,WAAW,iBAAkB,CAC3C,MAAMoC,EAAuB3C,QAAQ4C,aACrC5C,QAAQL,EAAKY,WAAW,iBAAmBoC,EAC3C3C,QAAQ4C,aAAe,WACnB,MAAMva,EAAOjD,MAAM2C,UAAU+B,MAAMlE,KAAKgB,WAExC,IAAIic,EACJ,GAFsBxa,EAAK1C,QAAU,EAAI0C,EAAK,GAAK,KAEhC,CACf,MAAMya,EAAiBjc,OAAOic,eAC9Bjc,OAAOic,eAAiB,SAAUvd,EAAKwd,EAAGC,IACtC,OAAOF,EAAeld,KAAKe,KAAMpB,EAAKwd,EAAG,IAClCC,GACHC,cAAc,EACdC,YAAY,GAEpB,EACA,IACIL,EAASF,EAAqBjc,MAAMC,KAAM0B,EAC9C,SAEIxB,OAAOic,eAAiBA,CAC5B,CACJ,MAEID,EAASF,EAAqBjc,MAAMC,KAAM0B,GAE9C,OAAOwa,CACX,CACJ,CAaA,SAASM,EAAcC,EAAUC,EAAWC,EAAaC,GACrD,MAAMC,IAAqBxD,QAAQM,EAAO,mBAC1CgD,EAAYG,kBACZ,MAAMC,EAAgBJ,EAAYI,cAClC,GAAIF,GAAoB/C,GAAqC,CAEzD,MAAMkD,EAAkBhE,EAAKA,EAAKY,WAAW,kBACzCoD,GAAwD,mBAA9BA,EAAgBC,YAC1CR,EAAWO,EAAgBC,UAAUR,GAE7C,CACA,OAAIG,EACOG,EAAc5B,IAAIsB,EAAUC,EAAW,CAACE,IAGxCG,EAAc5B,IAAIsB,EAAUC,EAE3C,CAMA,SAAStB,EAAeqB,GAIpB,OAAQA,IACHA,EAASzd,OACJ,SAAU4d,GACR,OAAOJ,EAAcC,EAAUzc,KAAMA,KAAK2c,YAAaC,EAC3D,EACE,WACE,OAAOJ,EAAcC,EAAUzc,KAAMA,KAAK2c,YAC9C,EACZ,CACA,MAAMO,EAAc7D,QAAQ6D,YAC5B7D,QAAQ6D,YAAe,SAAU3b,GAE7B,SAAS4b,EAAgBC,GACjBA,EAAMC,aACND,EAAMC,WAAenf,IAAO,KAExB8B,KAAK+c,cAAgB,KACrB/c,KAAK8c,kBAAoB,KACzBrD,EAAY6D,kBAAkB,qBAAsBpf,EAAE,EAJrCA,CAKlBkf,EAAMC,aAEb,MAAME,EAAmBrE,EAAOF,EAAKY,WAAW,eAC1C4D,EAAqBtE,EAAOF,EAAKY,WAAW,iBAC9C2D,IAEAH,EAAMjf,QAAU,CACZE,WAAYkf,GAAsCrE,EAAO7a,WACzDgX,aAAcmI,GAA0CtE,EAAO7D,eAKnEgE,QAAQoE,aACHL,EAAMM,cACPN,EAAMM,YAAc,IAAIrE,QAAQoE,aAEpCL,EAAMM,YAAYf,YAAc3c,OAG3Bod,EAAMM,cACPN,EAAMM,YAAc,CAAC,GAEzBN,EAAMM,YAAYf,YAAc3c,MAGpC,MAAM2d,EAAcP,EAAMO,YAC1BP,EAAMO,YAAc,SAAUC,GAC1B,GAAIA,GAEI,2GADJA,EAAMte,QACwG,CAG9G,MAAMue,GAAgB7d,MAAQA,KAAK8c,kBACnC,GAAIe,GAAe,CACf,MAAMC,GAAmBD,GAAcE,8BACvC,IAEIH,EAAMte,SAAWwe,EACrB,OACc,CAClB,CACJ,CACIH,GACAA,EAAY1e,KAAKe,KAAM4d,EAE/B,EACArc,EAAOtC,KAAKe,KAAMod,EACtB,CACAD,OA/Rc,SAAUa,EAAGra,GAC3B,UAAWyY,KAAKzY,EACRA,EAAEzE,eAAekd,KACjB4B,EAAE5B,GAAKzY,EAAEyY,IACjB,SAAS6B,IACLje,KAAKsB,YAAc0c,CACvB,CACAA,EAAE5c,UACQ,OAANuC,EAAazD,OAAOmB,OAAOsC,IAAOsa,EAAG7c,UAAYuC,EAAEvC,UAAY,IAAI6c,EAC3E,CA6NIC,CAAUf,EAAiB5b,GAyD3B4b,EAAgB/b,UAAU+c,QAAU,WAChC,IAAIC,EAAOpF,EAAKU,QACZ2E,GAAuB,EAC3B,KAAOD,GAAM,CACT,GAAIA,IAAS3E,EAAa,CACtB4E,GAAuB,EACvB,KACJ,CACAD,EAAOA,EAAK5b,MAChB,CACA,IAAK6b,EACD,MAAM,IAAI5e,MAAM,oBAAsBuZ,EAAKU,QAAQra,MAUvDW,KAAK8c,kBAAoB,IAAItD,EAC7BxZ,KAAK+c,cAAgBtD,EAAYyB,KAAKlb,KAAK8c,mBACtC9D,EAAKsF,YASN/c,EAAOH,UAAU+c,QAAQlf,KAAKe,MAH9BgZ,EAAKU,QAAQ4D,kBAAkB,8BAA+B,IAAMJ,EAAY9b,UAAU+c,QAAQlf,KAAKe,MAK/G,EACOmd,CACX,CA9FuB,CA8FpBD,EAAW,EAEtB,CAEA,SAASqB,GAAUvF,GACfA,EAAKC,aAAa,OAAQ,CAAC7a,EAAS4a,EAAMG,KACtC,UAAWC,KAAS,KAAeA,KAAKE,eACpC,OAUJN,EAAKG,EAAIQ,OAAO,qCAAsC,EACtDP,KAAKE,gBAAoB,EACzB,MAAME,EAAgBR,EAAKQ,cACrBD,EAAmBP,EAAKO,iBAC9B,IAAKC,EACD,MAAM,IAAI/Z,MAAM,yBAEpB,MAAM+e,EAAWxF,EAAKU,QAChB+E,EAAWD,EAAStD,KAAK,IAAI3B,EAAiB,kBAC9CsE,EAAgB,IAAIrE,EACpBkF,GAAYF,EAAStD,KAAK2C,GAsBhC,SAAS7C,GAAmBC,GACxB,OAAO,YAAavZ,GAChB,OAAO+c,EAAStD,IAAIF,EAAcjb,KAAM0B,EAC5C,CACJ,CAMA,SAAS0Z,GAAeqB,EAAUkC,GAAa,GAC3C,GAAwB,mBAAblC,EACP,OAAOA,EAEX,MAAMmC,EAAc,WAChB,IAAgD,IAA5C5F,EAAKG,EAAIQ,OAAO,yBAChB8C,IACCA,EAASoC,YAAa,CAEvB,MAAM7B,EAAkBhE,EAAKA,EAAKY,WAAW,kBACzCoD,GAAwD,mBAA9BA,EAAgBC,YAC1CR,EAAWO,EAAgBC,UAAUR,GAE7C,CACAoB,SAAcc,WAAaA,EACpBD,GAAUvD,IAAIsB,EAAU,KAAMxc,UACzC,EAGAC,cAAOic,eAAeyC,EAAa,SAAU,CACzCtC,cAAc,EACdwC,UAAU,EACVvC,YAAY,IAEhBqC,EAAY5f,OAASyd,EAASzd,OACvB4f,CACX,CACA,CAAC,WAAY,YAAa,aAAa7f,QAAS6b,IAC5C,IAAImE,EAAiB3gB,EAAQwc,GACzBxc,EAAQ4a,EAAKY,WAAWgB,MAG5Bxc,EAAQ4a,EAAKY,WAAWgB,IAAemE,EACvC3gB,EAAQwc,GAAc,YAAalZ,GAC/BA,SAAK,GAAKsZ,GAAmBtZ,EAAK,IAC3Bqd,EAAehf,MAAMC,KAAM0B,EACtC,EACAtD,EAAQwc,GAAYjc,KApExB,SAASqgB,GAA0BD,GAC/B,OAAO,YAAaE,GAChB,MAAMC,EAAqBH,EAAehf,MAAMC,KAAMif,GACtD,OAAO,YAAavd,GAChBA,SAAK,GAAKsZ,GAAmBtZ,EAAK,IAC3Bwd,EAAmBnf,MAAMC,KAAM0B,EAC1C,CACJ,CACJ,CA4D+Bsd,CAA0BD,EAAepgB,MAAI,GAE5EP,EAAQ+gB,SAASC,KAAOhhB,EAAQihB,UAChCjhB,EAAQ+gB,SAASG,KAAOlhB,EAAQmhB,UAChC,CAAC,KAAM,MAAO,MAAO,OAAQ,SAASxgB,QAAS6b,IAC3C,IAAImE,EAAiB3gB,EAAQwc,GACzBxc,EAAQ4a,EAAKY,WAAWgB,MAG5Bxc,EAAQ4a,EAAKY,WAAWgB,IAAemE,EACvC3gB,EAAQwc,GAAc,YAAalZ,GAC/BA,SAAK,GAAK0Z,GAAe1Z,EAAK,IAAI,GAC3Bqd,EAAehf,MAAMC,KAAM0B,EACtC,EACAtD,EAAQwc,GAAYjc,KAzExB,SAAS6gB,GAAsBT,GAC3B,OAAO,YAAaE,GAChB,OAAO,YAAavd,GAChBA,SAAK,GAAK0Z,GAAe1Z,EAAK,IACvBqd,EAAehf,MAAMC,KAAMif,GAAWlf,MAAMC,KAAM0B,EAC7D,CACJ,CACJ,CAkE+B8d,CAAsBT,EAAepgB,MAChEP,EAAQwc,GAAY6E,KAAOV,EAAeU,QAE9CrhB,EAAQshB,GAAGN,KAAOhhB,EAAQuhB,IAC1BvhB,EAAQshB,GAAGJ,KAAOlhB,EAAQwhB,IAC1BxhB,EAAQwG,KAAKwa,KAAOhhB,EAAQuhB,IAC5BvhB,EAAQwG,KAAK0a,KAAOlhB,EAAQwhB,IAC5B,CAAC,aAAc,YAAa,YAAa,YAAY7gB,QAAS6b,IAC1D,IAAImE,EAAiB3gB,EAAQwc,GACzBxc,EAAQ4a,EAAKY,WAAWgB,MAG5Bxc,EAAQ4a,EAAKY,WAAWgB,IAAemE,EACvC3gB,EAAQwc,GAAc,YAAalZ,GAC/BA,SAAK,GAAK0Z,GAAe1Z,EAAK,IACvBqd,EAAehf,MAAMC,KAAM0B,EACtC,KAEJsX,EAAK6G,gBAAkB,SAAyBC,EAAOC,GAAW,GAE9D,SAASC,IAEL,QAD0BhH,EAAKU,QAAQhH,IAAI,wBAE/C,CAGA,SAASuN,IACL,MAAMpC,EAAgB7E,EAAKU,QAAQhH,IAAI,iBACvC,OAAOmL,GAAiBA,EAAcc,UAC1C,CACImB,EAAM3G,EAAIQ,OAAO,iBAGrBmG,EAAM3G,EAAIQ,OAAO,gBAAiB,EAElCR,EAAI+G,YAAYJ,EAAO,mBAAqBK,GACjC,SAAUja,EAAMxE,GACnB,QAAIse,KAIOG,EAASpgB,MAAMmG,EAAMxE,EAEpC,GAGJyX,EAAI+G,YAAYJ,EAAO,gBAAkBK,GAC9B,SAAUja,EAAMxE,GAEnB,OADAsX,EAAKG,EAAIQ,OAAO,yBAA0B,EACtCoG,GAAYE,IACLE,EAASpgB,MAAMmG,EAAMxE,GAEzBwE,CACX,GAGJiT,EAAI+G,YAAYJ,EAAO,gBAAkBK,GAC9B,SAAUja,EAAMxE,GAEnB,OADAsX,EAAKG,EAAIQ,OAAO,yBAA0B,EACtCoG,GAAYE,IACLE,EAASpgB,MAAMmG,EAAMxE,GAEzBwE,CACX,GAGJiT,EAAI+G,YAAYJ,EAAO,gBAAkBK,GAC9B,SAAUja,EAAMxE,GACnB,MAAM+Z,EAAoBzC,EAAKU,QAAQhH,IAAI,yBAC3C,IAAI+I,IAAqBuE,IAIrB,OAAOG,EAASpgB,MAAMmG,EAAMxE,GAH5B+Z,EAAkBI,sBAAsBna,EAAK,GAKrD,GAGJyX,EAAI+G,YAAYJ,EAAO,oBAAsBK,GAClC,SAAUja,EAAMxE,GACnB,MAAM+Z,EAAoBzC,EAAKU,QAAQhH,IAAI,yBAC3C,OAAI+I,GAAqBuE,IACdvE,EAAkB2E,oBAGlBD,EAASpgB,MAAMmG,EAAMxE,EAEpC,GAGJyX,EAAI+G,YAAYJ,EAAO,cAAgBK,GAC5B,SAAUja,EAAMxE,GACnB,MAAM+Z,EAAoBzC,EAAKU,QAAQhH,IAAI,yBAC3C,IAAI+I,EAIA,OAAO0E,EAASpgB,MAAMmG,EAAMxE,GAH5B+Z,EAAkB4E,iBAK1B,GAGJlH,EAAI+G,YAAYJ,EAAO,eAAiBK,GAC7B,SAAUja,EAAMxE,GACnB,MAAM+Z,EAAoBzC,EAAKU,QAAQhH,IAAI,yBAC3C,IAAI+I,EAIA,OAAO0E,EAASpgB,MAAMmG,EAAMxE,GAH5B+Z,EAAkB6E,MAAM,KAAK,EAKrC,GAGJnH,EAAI+G,YAAYJ,EAAO,sBAAwBK,GACpC,SAAUja,EAAMxE,GACnB,MAAM+Z,EAAoBzC,EAAKU,QAAQhH,IAAI,yBAC3C,IAAI+I,EAIA,OAAO0E,EAASpgB,MAAMmG,EAAMxE,GAH5B+Z,EAAkBD,KAAK9Z,EAAK,GAKpC,GAGJyX,EAAI+G,YAAYJ,EAAO,uBAAyBK,GACrC,SAAUja,EAAMxE,GACnB,MAAM+Z,EAAoBzC,EAAKU,QAAQhH,IAAI,yBAC3C,IAAI+I,EAIA,OAAO0E,EAASpgB,MAAMmG,EAAMxE,GAH5B+Z,EAAkB8E,wBAK1B,GAGJpH,EAAI+G,YAAYJ,EAAO,2BAA6BK,GACzC,SAAUja,EAAMxE,GACnB,MAAM+Z,EAAoBzC,EAAKU,QAAQhH,IAAI,yBAC3C,IAAI+I,EAIA,OAAO0E,EAASpgB,MAAMmG,EAAMxE,GAH5B+Z,EAAkB+E,WAAW9e,EAAK,GAK1C,GAGJyX,EAAI+G,YAAYJ,EAAO,iBAAmBK,GAC/B,SAAUja,EAAMxE,GACnB,MAAM+Z,EAAoBzC,EAAKU,QAAQhH,IAAI,yBAC3C,IAAI+I,EAIA,OAAO0E,EAASpgB,MAAMmG,EAAMxE,GAH5B+Z,EAAkBgF,iBAK1B,GAGJtH,EAAI+G,YAAYJ,EAAO,gBAAkBK,GAC9B,SAAUja,EAAMxE,GACnB,MAAM+Z,EAAoBzC,EAAKU,QAAQhH,IAAI,yBAC3C,OAAI+I,EACOA,EAAkBiF,gBAGlBP,EAASpgB,MAAMmG,EAAMxE,EAEpC,GAER,GAER,CAwJA,MAAMif,GAAWC,WAGjB,SAAShH,GAAWva,GAEhB,OADqBshB,GAASE,sBAA2B,mBACnCxhB,CAC1B,CAEA,MAAMyhB,UAAmB3jB,OAAW,KAAeA,eAAmB+I,KAAS,KAAeA,MAASgT,OACvG,MAAM6H,GAIF,iCAAWC,GACP,OAAOpH,GAAW,mBACtB,CACAtY,YAAY2f,EAAgBC,EAAcC,GACtCnhB,KAAKihB,eAAiBA,EACtBjhB,KAAKkhB,aAAeA,EACpBlhB,KAAKohB,oBAAqB,EAC1BphB,KAAKqhB,oBAAqB,EAC1BrhB,KAAKshB,iBAAkB,EACvBthB,KAAKuhB,SAAU,EACfvhB,KAAKwhB,qBAAuB,KAC5BxhB,KAAKyhB,cAAgB,KACrBzhB,KAAK0hB,QAAU1I,KAAKU,QACpB1Z,KAAK2hB,8BAAgC,EACrC3hB,KAAK4hB,qCAAsC,EAC3C5hB,KAAKX,KAAO,qBAAuB8hB,EACnCnhB,KAAKiB,WAAa,CAAE8f,kBAAqB/gB,MACzCA,KAAK4hB,qCAC+D,IAAhEd,GAASlH,GAAW,uCAC5B,CACAiI,oCACI,OAAO7hB,KAAK2hB,8BAAgC,CAChD,CACAG,wBAcsC,OAA9B9hB,KAAKwhB,uBACLnM,aAAarV,KAAKwhB,sBAClBxhB,KAAKwhB,qBAAuB,MAE1BxhB,KAAKohB,oBACPphB,KAAKqhB,oBACJrhB,KAAK4hB,qCAAuC5hB,KAAK6hB,qCAGlD7hB,KAAK0hB,QAAQvG,IAAI,KACbnb,KAAKwhB,qBAAuBnjB,WAAW,MAC9B2B,KAAKshB,kBAAqBthB,KAAKohB,qBAAsBphB,KAAKqhB,oBAC3DrhB,KAAKihB,gBAAe,EAEzB,EAAC,EAGhB,CACAc,sBACI,IAAK/hB,KAAK4hB,oCACN,OAEJ,MAAMG,EAAsBC,QAAQhJ,KAAKY,WAAW,wBAChDmI,GACAA,GAER,CACAE,wBACI,IAAKjiB,KAAK4hB,oCACN,OAEJ,MAAMK,EAAwBD,QAAQhJ,KAAKY,WAAW,0BAClDqI,GACAA,GAER,CACAC,eAAe/B,EAAUzG,EAASvZ,EAAQgiB,GACtC,MAAkB,cAAdA,EAAKjgB,OACLlC,KAAKuhB,SAAU,GAED,cAAdY,EAAKjgB,MAAwBigB,EAAK5K,MAAQ4K,EAAK5K,gBAAgByK,UAEH,IAAxDG,EAAK5K,KAAKwJ,GAAkBC,yBAE5BhhB,KAAK2hB,gCAGNxB,EAASiC,aAAajiB,EAAQgiB,EACzC,CACAE,aAAalC,EAAUzG,EAASvZ,EAAQgiB,EAAMzF,EAAW4F,GACrD,MAAkB,cAAdH,EAAKjgB,OACLlC,KAAKuhB,SAAU,GAEZpB,EAASoC,WAAWpiB,EAAQgiB,EAAMzF,EAAW4F,EACxD,CACAE,aAAarC,EAAUzG,EAASvZ,EAAQgiB,GACpC,MAAkB,cAAdA,EAAKjgB,OACLlC,KAAKuhB,SAAU,GAEZpB,EAASsC,WAAWtiB,EAAQgiB,EACvC,CAMAO,SAASC,EAAoBC,EAAaC,EAAY1C,EAAUzD,EAAW4F,EAAW/hB,GAC7EP,KAAKyhB,gBACNzhB,KAAKyhB,cAAgBtB,GAEzB,IACI,OAAAngB,KAAKuhB,SAAU,EACRoB,EAAmBG,OAAOD,EAAY1C,EAAUzD,EAAW4F,EAAW/hB,EACjF,SAYQP,KAAKuhB,SAAWvhB,KAAKyhB,gBAAkBtB,GACvCngB,KAAK8hB,uBAEb,CACJ,CACAiB,cAAcJ,EAAoBC,EAAaC,EAAYjF,GAGvD,OADe+E,EAAmBK,YAAYH,EAAYjF,KAEtD5d,KAAKkhB,aAAatD,GAClB5d,KAAKshB,iBAAkB,IAEpB,CACX,CACA2B,UAAU9C,EAAUzG,EAASvZ,EAAQ+iB,GACjC/C,EAASgD,QAAQhjB,EAAQ+iB,GAarBxJ,IAAYvZ,IAGW,aAAvB+iB,EAAaE,QACbpjB,KAAKohB,mBAAqB8B,EAAaG,UACvCrjB,KAAK8hB,yBAEuB,aAAvBoB,EAAaE,SAClBpjB,KAAKqhB,mBAAqB6B,EAAaI,UACvCtjB,KAAK8hB,yBAEb,EA+FJ,MAAMyB,GAA8B,iBAAXpmB,QAAuBA,QAA4B,iBAAT+I,MAAqBA,MAAS0a,WAAW1H,OACtGsK,GAAeD,GAASvlB,KAK9B,SAASylB,KACL,GAAyB,IAArBxjB,UAAUjB,OAAc,CACxB,MAAMgf,EAAI,IAAIwF,GACdxF,SAAE0F,QAAQD,GAAS1lB,OACZigB,CACX,CACK,CACD,MAAMtc,EAAOjD,MAAM2C,UAAU+B,MAAMlE,KAAKgB,WACxC,OAAO,IAAIujB,MAAgB9hB,EAC/B,CACJ,CAWA,IAAIiiB,GAVJF,GAAS1lB,IAAM,WACX,MAAM6lB,EAAwB5K,KAAKU,QAAQhH,IAAI,yBAC/C,OAAIkR,EACOA,EAAsBC,oBAE1BL,GAAazlB,IAAIgC,MAAMC,KAAMC,UACxC,EACAwjB,GAASK,IAAMN,GAAaM,IAC5BL,GAASM,MAAQP,GAAaO,MAG9B,MAAMC,GAAkB,WAAc,EACtC,MAAMC,UAEOjkB,KAAKkkB,aAAe,CAAG,QACvBlkB,KAAKmkB,QAAS,CAAI,CAC3B7iB,cAEItB,KAAKokB,gBAAkB,GAEvBpkB,KAAKqkB,iBAAmB,EAExBrkB,KAAKskB,2BAA6Bd,GAAazlB,MAE/CiC,KAAKukB,mCAAqC,EAC9C,CACA,gBAAOC,GACH,MAAMvS,EAAK0R,GAAcpG,iBAAiBte,KAAKskB,GAAUS,GAAiB,GAE1E,OADAL,GAAcnG,mBAAmBve,KAAKskB,GAAUtR,GAC9B,iBAAPA,EACAA,EAIJgS,GAAUC,cACrB,CACAO,qBACI,OAAOzkB,KAAKqkB,gBAChB,CACAR,oBACI,OAAO7jB,KAAKskB,2BAA6BtkB,KAAKqkB,gBAClD,CACAxI,sBAAsB6I,GAClB1kB,KAAKskB,2BAA6BI,CACtC,CACAtE,oBACI,OAAOoD,GAAazlB,KACxB,CACA4mB,iBAAiBC,EAAIC,EAAO1e,GAWxB,IAAI2e,GAVJ3e,EAAU,CAEFzE,KAAM,GACNqjB,YAAY,EACZC,yBAAyB,EACzB/S,IAAI,EACJgT,mBAAmB,KAEpB9e,IAEiB8L,GAAK,EAAIgS,GAAUE,OAAShe,EAAQ8L,GAC5DgS,GAAUE,OAASF,GAAUO,YAG7B,IAAIU,EAAW,CACXC,QAHUnlB,KAAKqkB,iBAAmBQ,EAIlC5S,GAAI6S,EACJM,KAAMR,EACNljB,KAAMyE,EAAQzE,KACdmjB,MAAOA,EACPE,WAAY5e,EAAQ4e,WACpBC,wBAAyB7e,EAAQ6e,yBAEjC7e,EAAQ8e,mBACRjlB,KAAKukB,mCAAmC9gB,KAAKyhB,GAEjD,IAAIpmB,EAAI,EACR,KAAOA,EAAIkB,KAAKokB,gBAAgBplB,OAAQF,IAAK,CACzC,IAAIumB,EAAerlB,KAAKokB,gBAAgBtlB,GACxC,GAAIomB,EAASC,QAAUE,EAAaF,QAChC,KAER,CACA,OAAAnlB,KAAKokB,gBAAgBvX,OAAO/N,EAAG,EAAGomB,GAC3BJ,CACX,CACAQ,8BAA8BrT,GAC1B,QAASnT,EAAI,EAAGA,EAAIkB,KAAKokB,gBAAgBplB,OAAQF,IAC7C,GAAIkB,KAAKokB,gBAAgBtlB,GAAGmT,IAAMA,EAAI,CAClCjS,KAAKokB,gBAAgBvX,OAAO/N,EAAG,GAC/B,KACJ,CAER,CACAymB,YACIvlB,KAAKokB,gBAAkB,EAC3B,CACA1D,gBACI,OAAO1gB,KAAKokB,gBAAgBplB,MAChC,CACAwhB,WAAWgF,EAAO,EAAGC,EAAQC,GACzB,GAAI1lB,KAAKokB,gBAAgBplB,OAASwmB,EAC9B,OAIJ,MAAMG,EAAY3lB,KAAKqkB,iBACjBuB,EAAa5lB,KAAKokB,gBAAgBoB,EAAO,GAC/CxlB,KAAKwb,KAAKoK,EAAWT,QAAUQ,EAAWF,EAAQC,EACtD,CACAlK,KAAKqK,EAAS,EAAGJ,EAAQC,GACrB,IAAII,EAAY9lB,KAAKqkB,iBAAmBwB,EACpCE,EAAkB,EAKtB,MAAMC,GAJNN,EAAcxlB,OAAO3C,OAAO,CAAE0oB,mCAAmC,GAAQP,IAItCO,kCAC7BjmB,KAAKokB,gBACLpkB,KAAKokB,gBAAgBjhB,QAC3B,GAA8B,IAA1B6iB,EAAehnB,QAAgBymB,EAC/BA,EAAOI,OADX,CAIA,KAAOG,EAAehnB,OAAS,GAAG,CAI9B,GAFAgB,KAAKukB,mCAAqC,GAEtCuB,EADUE,EAAe,GACLb,QAEpB,MAEC,CAED,IAAIzL,EAAUsM,EAAeE,QAC7B,IAAKR,EAAYO,kCAAmC,CAChD,MAAME,GAAMnmB,KAAKokB,gBAAgBvhB,QAAQ6W,GACrCyM,IAAO,GACPnmB,KAAKokB,gBAAgBvX,OAAOsZ,GAAK,EAEzC,CAOA,GANAJ,EAAkB/lB,KAAKqkB,iBACvBrkB,KAAKqkB,iBAAmB3K,EAAQyL,QAC5BM,GACAA,EAAOzlB,KAAKqkB,iBAAmB0B,IAEtBrM,EAAQ0L,KAAKrlB,MAAMwjB,GAAU7J,EAAQsL,wBAA0B,CAAChlB,KAAKqkB,kBAAoB3K,EAAQhY,MAG1G,MAICgkB,EAAYO,mCACbjmB,KAAKukB,mCAAmCxlB,QAASmmB,KAC7C,IAAIpmB,GAAI,EACR,KAAOA,GAAIknB,EAAehnB,OAAQF,KAAK,CACnC,MAAMumB,GAAeW,EAAelnB,IACpC,GAAIomB,GAASC,QAAUE,GAAaF,QAChC,KAER,CACAa,EAAenZ,OAAO/N,GAAG,EAAGomB,GAAQ,EAGhD,CACJ,CACAa,EAAkB/lB,KAAKqkB,iBACvBrkB,KAAKqkB,iBAAmByB,EACpBL,GACAA,EAAOzlB,KAAKqkB,iBAAmB0B,EA/CnC,CAiDJ,CACAxF,uBAAuBkF,GACnB,GAAoC,IAAhCzlB,KAAKokB,gBAAgBplB,OACrB,OAAO,EAIX,MAAM2mB,EAAY3lB,KAAKqkB,iBACjB+B,EAAWpmB,KAAKokB,gBAAgBpkB,KAAKokB,gBAAgBplB,OAAS,GACpE,OAAAgB,KAAKwb,KAAK4K,EAASjB,QAAUQ,EAAWF,EAAQ,CAAEQ,mCAAmC,IAC9EjmB,KAAKqkB,iBAAmBsB,CACnC,CACArF,MAAM+F,EAAQ,GAAIC,GAAgB,EAAOb,GACrC,OAAIa,EACOtmB,KAAKsmB,cAAcb,GAGnBzlB,KAAKumB,iBAAiBF,EAAOZ,EAE5C,CACAa,cAAcb,GACV,GAAoC,IAAhCzlB,KAAKokB,gBAAgBplB,OACrB,OAAO,EAIX,MAAM2mB,EAAY3lB,KAAKqkB,iBACjB+B,EAAWpmB,KAAKokB,gBAAgBpkB,KAAKokB,gBAAgBplB,OAAS,GACpE,OAAAgB,KAAKwb,KAAK4K,EAASjB,QAAUQ,EAAWF,GACjCzlB,KAAKqkB,iBAAmBsB,CACnC,CACAY,iBAAiBF,EAAOZ,GACpB,MAAME,EAAY3lB,KAAKqkB,iBACvB,IAAI0B,EAAkB,EAClBvS,EAAQ,EACZ,KAAOxT,KAAKokB,gBAAgBplB,OAAS,GAAG,CAEpC,GADAwU,IACIA,EAAQ6S,EACR,MAAM,IAAI5mB,MAAM,4CACZ4mB,EACA,iDAIR,GACgB,IADZrmB,KAAKokB,gBAAgBhW,OAAQ+T,IAAUA,EAAK4C,aAAe5C,EAAK6C,yBAC/DhmB,OACD,MAEJ,MAAM0a,EAAU1Z,KAAKokB,gBAAgB8B,QAQrC,GAPAH,EAAkB/lB,KAAKqkB,iBACvBrkB,KAAKqkB,iBAAmB3K,EAAQyL,QAC5BM,GAEAA,EAAOzlB,KAAKqkB,iBAAmB0B,IAEpBrM,EAAQ0L,KAAKrlB,MAAMwjB,GAAU7J,EAAQhY,MAGhD,KAER,CACA,OAAO1B,KAAKqkB,iBAAmBsB,CACnC,EAEJ,MAAM5J,GACF,mBAAOyK,GACH,GAAiD,MAA7CxN,KAAKU,QAAQhH,IAAI,yBACjB,MAAM,IAAIjT,MAAM,yEAExB,CACA6B,YAAY6f,EAAYsF,GAAoC,EAAOC,GAC/D1mB,KAAKymB,kCAAoCA,EACzCzmB,KAAK0mB,iBAAmBA,EACxB1mB,KAAK2mB,WAAa,IAAI1C,GACtBjkB,KAAK4mB,YAAc,GACnB5mB,KAAK6mB,WAAa,KAClB7mB,KAAK8mB,uBAAyB9E,QAAQhJ,KAAKY,WAAW,0BACtD5Z,KAAK+mB,sBAAwB,GAC7B/mB,KAAKgnB,cAAgB,GACrBhnB,KAAKinB,iBAAkB,EACvBjnB,KAAKiB,WAAa,CAAE8a,sBAAyB/b,MAC7CA,KAAKX,KAAO,yBAA2B8hB,EAGlCnhB,KAAK0mB,mBACN1mB,KAAK0mB,iBAAmBnD,GAASvK,KAAKY,WAAW,2BAEzD,CACAsN,YAAYhpB,EAAIipB,GACZ,MAAO,IAAIzlB,KACPxD,EAAG6B,MAAMwjB,GAAU7hB,GACK,OAApB1B,KAAK6mB,YAEuB,MAAxBM,EAAWC,WACXD,EAAWC,UAAUrnB,MAAMwjB,IAG/BvjB,KAAKqgB,mBAIqB,MAAtB8G,EAAWE,SACXF,EAAWE,QAAQtnB,MAAMwjB,IAIN,OAApBvjB,KAAK6mB,WAEpB,CACA,mBAAOS,CAAaC,EAAQtV,GACxB,IAAI3R,EAAQinB,EAAO1kB,QAAQoP,GACvB3R,GAAQ,GACRinB,EAAO1a,OAAOvM,EAAO,EAE7B,CACAknB,cAAcvV,GACV,MAAO,KACH8J,GAAsBuL,aAAatnB,KAAKgnB,cAAe/U,EAAE,CAEjE,CACAwV,sBAAsBvpB,EAAIqX,EAAU7T,EAAMuQ,GACtC,MAAO,MAE4C,IAA3CjS,KAAK+mB,sBAAsBlkB,QAAQoP,IACnCjS,KAAK2mB,WAAWhC,iBAAiBzmB,EAAIqX,EAAU,CAC3C7T,OACAqjB,YAAY,EACZ9S,KACAgT,mBAAmB,GACtB,CAGb,CACAyC,sBAAsBzV,GAClB,MAAO,KACH8J,GAAsBuL,aAAatnB,KAAK+mB,sBAAuB9U,EAAE,CAEzE,CACA0V,YAAYzpB,EAAI2mB,EAAOnjB,EAAMkmB,GAAU,GACnC,IAAIC,EAAgB7nB,KAAKwnB,cAAcvD,GAAUE,QAE7CS,EAAK5kB,KAAKknB,YAAYhpB,EAAI,CAAEkpB,UAAWS,EAAeR,QAASQ,IAC/D5V,EAAKjS,KAAK2mB,WAAWhC,iBAAiBC,EAAIC,EAAO,CAAEnjB,OAAMsjB,yBAA0B4C,IACvF,OAAIA,GACA5nB,KAAKgnB,cAAcvjB,KAAKwO,GAErBA,CACX,CACA6V,cAAc7V,GACV8J,GAAsBuL,aAAatnB,KAAKgnB,cAAe/U,GACvDjS,KAAK2mB,WAAWrB,8BAA8BrT,EAClD,CACA8V,aAAa7pB,EAAIqX,EAAU7T,GACvB,IAAIuQ,EAAKgS,GAAUE,OACfgD,EAAa,CAAEC,UAAW,KAAMC,QAASrnB,KAAK0nB,sBAAsBzV,IACpE2S,EAAK5kB,KAAKknB,YAAYhpB,EAAIipB,GAE9BA,SAAWC,UAAYpnB,KAAKynB,sBAAsB7C,EAAIrP,EAAU7T,EAAMuQ,GAEtEjS,KAAK2mB,WAAWhC,iBAAiBC,EAAIrP,EAAU,CAAE7T,OAAMqjB,YAAY,IACnE/kB,KAAK+mB,sBAAsBtjB,KAAKwO,GACzBA,CACX,CACA+V,eAAe/V,GACX8J,GAAsBuL,aAAatnB,KAAK+mB,sBAAuB9U,GAC/DjS,KAAK2mB,WAAWrB,8BAA8BrT,EAClD,CACAgW,0BACI,IAAIrK,EAAQ5d,KAAK6mB,YAAc7mB,KAAK8mB,uBAAuB,GAC3D,MAAA9mB,KAAK8mB,uBAAuB9nB,OAAS,EACrCgB,KAAK6mB,WAAa,KACZjJ,CACV,CACA6G,qBACI,OAAOzkB,KAAK2mB,WAAWlC,oBAC3B,CACAZ,oBACI,OAAO7jB,KAAK2mB,WAAW9C,mBAC3B,CACAhI,sBAAsBqM,GAClBloB,KAAK2mB,WAAW9K,sBAAsBqM,EAC1C,CACA9H,oBACI,OAAOpgB,KAAK2mB,WAAWvG,mBAC3B,CACA,gBAAO+H,GACG5E,GAASvK,KAAKY,WAAW,yBAQ3B2J,GAASvlB,OAAYylB,KAIzBF,GAASvlB,KAAUylB,GACnBA,GAASriB,UAAYoiB,GAAapiB,UAIlC2a,GAAsBqM,kBAC1B,CACA,gBAAOC,GACC9E,GAASvlB,OAAYylB,KACrBF,GAASvlB,KAAUwlB,GAE3B,CACA,sBAAO4E,GACH,IAAKzE,GACD,MAAM,IAAIlkB,MAAM,yCAEhB8jB,GAASllB,aAAeslB,GAActlB,aACtCklB,GAASllB,WAAaslB,GAActlB,WACpCklB,GAASlO,aAAesO,GAActO,cAEtCkO,GAAS+E,cAAgB3E,GAAc2E,cACvC/E,GAAS+E,YAAc3E,GAAc2E,YACrC/E,GAASgF,cAAgB5E,GAAc4E,cAE/C,CACAC,gBACIxoB,KAAKinB,iBAAkB,EACvBlL,GAAsBoM,WAC1B,CACAM,kBACIzoB,KAAKinB,iBAAkB,EACvBlL,GAAsBsM,WAC1B,CACA7H,WAAWkI,EAAQ,EAAGjD,EAAQC,EAAc,CAAEO,mCAAmC,IACzEyC,GAAS,IAGb3M,GAAsByK,eACtBxmB,KAAKqgB,kBACLrgB,KAAK2mB,WAAWnG,WAAWkI,EAAOjD,EAAQC,GAClB,OAApB1lB,KAAK6mB,YACL7mB,KAAKioB,0BAEb,CACAzM,KAAKqK,EAAS,EAAGJ,EAAQC,EAAc,CAAEO,mCAAmC,IACxElK,GAAsByK,eACtBxmB,KAAKqgB,kBACLrgB,KAAK2mB,WAAWnL,KAAKqK,EAAQJ,EAAQC,GACb,OAApB1lB,KAAK6mB,YACL7mB,KAAKioB,yBAEb,CACA5H,kBACItE,GAAsByK,eAOtB,KAAOxmB,KAAK4mB,YAAY5nB,OAAS,GAAG,CAChC,IAAI2pB,EAAY3oB,KAAK4mB,YAAYV,QACjCyC,EAAUvD,KAAKrlB,MAAM4oB,EAAUxoB,OAAQwoB,EAAUjnB,KACrD,CAToBknB,OACQ,OAApB5oB,KAAK6mB,YAAuB7mB,KAAK8mB,uBAAuB9nB,SAExDgB,KAAKioB,yBAAwB,EAOrCW,EACJ,CACAtI,MAAM+F,EAAOC,EAAeb,GACxB1J,GAAsByK,eACtBxmB,KAAKqgB,kBACL,MAAMwI,EAAU7oB,KAAK2mB,WAAWrG,MAAM+F,EAAOC,EAAeb,GAC5D,OAAwB,OAApBzlB,KAAK6mB,YACL7mB,KAAKioB,0BAEFY,CACX,CACAtI,uBAAuBkF,GACnB1J,GAAsByK,eACtBxmB,KAAKqgB,kBACL,MAAMwI,EAAU7oB,KAAK2mB,WAAWpG,uBAAuBkF,GACvD,OAAwB,OAApBzlB,KAAK6mB,YACL7mB,KAAKioB,0BAEFY,CACX,CACApI,kBACI1E,GAAsByK,eACtBxmB,KAAK2mB,WAAWpB,YAChBvlB,KAAK+mB,sBAAwB,GAC7B/mB,KAAKgnB,cAAgB,EACzB,CACAtG,gBACI,OAAO1gB,KAAK2mB,WAAWjG,gBAAkB1gB,KAAK4mB,YAAY5nB,MAC9D,CACAkjB,eAAe/B,EAAUzG,EAASvZ,EAAQgiB,GACtC,OAAQA,EAAKjgB,MACT,IAAK,YACD,IAII4mB,EAJApnB,EAAOygB,EAAK5K,MAAQ4K,EAAK5K,KAAK7V,KAKlC,GAAIA,EAAM,CACN,IAAIqnB,EAAgB5G,EAAK5K,KAAKyR,MACH,iBAAhBtnB,EAAK1C,QAAuB0C,EAAK1C,OAAS+pB,EAAgB,IACjED,EAAiBrqB,MAAM2C,UAAU+B,MAAMlE,KAAKyC,EAAMqnB,EAAgB,GAE1E,CACA/oB,KAAK4mB,YAAYnjB,KAAK,CAClB2hB,KAAMjD,EAAKW,OACXphB,KAAMonB,EACN3oB,OAAQgiB,EAAK5K,MAAQ4K,EAAK5K,KAAKpX,SAEnC,MACJ,IAAK,YACD,OAAQgiB,EAAK5hB,QACT,IAAK,aACD4hB,EAAK5K,KAAK0R,SAAcjpB,KAAK2nB,YAAYxF,EAAKW,OAAQX,EAAK5K,KAAKsN,MAAUpmB,MAAM2C,UAAU+B,MAAMlE,KAAKkjB,EAAK5K,KAAK7V,KAAS,IACxH,MACJ,IAAK,eACDygB,EAAK5K,KAAK0R,SAAcjpB,KAAK2nB,YAAYxF,EAAKW,OAAQ,EAAGrkB,MAAM2C,UAAU+B,MAAMlE,KAAKkjB,EAAK5K,KAAK7V,KAAS,IACvG,MACJ,IAAK,cACDygB,EAAK5K,KAAK0R,SAAcjpB,KAAK+nB,aAAa5F,EAAKW,OAAQX,EAAK5K,KAAKsN,MAAUpmB,MAAM2C,UAAU+B,MAAMlE,KAAKkjB,EAAK5K,KAAK7V,KAAS,IACzH,MACJ,IAAK,sBACD,MAAM,IAAIjC,MAAM,gEACZ0iB,EAAK5K,KAAK2R,KAClB,IAAK,wBACL,IAAK,8BACL,IAAK,2BAGD/G,EAAK5K,KAAK0R,SAAcjpB,KAAK2nB,YAAYxF,EAAKW,OAAQ,GAAIX,EAAK5K,KAAK7V,KAAS1B,KAAKymB,mCAClF,MACJ,QAGI,MAAM0C,EAAkBnpB,KAAKopB,oBAAoBjH,GACjD,GAAIgH,EAAiB,CACjB,MAAMznB,EAAOygB,EAAK5K,MAAQ4K,EAAK5K,KAAK7V,KAC9BmjB,GAAQnjB,GAAQA,EAAK1C,OAAS,EAAI0C,EAAK,GAAK,EAClD,IAAI2nB,GAAeF,EAAgBE,aAAeF,EAAgBE,aAAe3nB,EAC3EynB,EAAgBpE,YAElB5C,EAAK5K,KAAK0R,SAAcjpB,KAAK+nB,aAAa5F,EAAKW,OAAQ+B,GAAOwE,IAC9DlH,EAAK5K,KAAKwN,YAAa,GAIvB5C,EAAK5K,KAAK0R,SAAcjpB,KAAK2nB,YAAYxF,EAAKW,OAAQ+B,GAAOwE,IAEjE,KACJ,CACA,MAAM,IAAI5pB,MAAM,mDAAqD0iB,EAAK5hB,QAElF,MACJ,IAAK,YACD4hB,EAAOhC,EAASiC,aAAajiB,EAAQgiB,GAG7C,OAAOA,CACX,CACAK,aAAarC,EAAUzG,EAASvZ,EAAQgiB,GACpC,OAAQA,EAAK5hB,QACT,IAAK,aACL,IAAK,wBACL,IAAK,8BACL,IAAK,2BACD,OAAOP,KAAK8nB,cAAc3F,EAAK5K,KAAK0R,UACxC,IAAK,cACD,OAAOjpB,KAAKgoB,eAAe7F,EAAK5K,KAAK0R,UACzC,QAGI,MAAME,EAAkBnpB,KAAKopB,oBAAoBjH,GACjD,GAAIgH,EAAiB,CACjB,MAAMF,EAAW9G,EAAK5K,KAAK0R,SAC3B,OAAOE,EAAgBpE,WACjB/kB,KAAKgoB,eAAeiB,GACpBjpB,KAAK8nB,cAAcmB,EAC7B,CACA,OAAO9I,EAASsC,WAAWtiB,EAAQgiB,GAE/C,CACAO,SAASvC,EAAUzG,EAASvZ,EAAQ8F,EAAUyW,EAAW4F,EAAW/hB,GAChE,IACIwb,UAAsBoM,YACfhI,EAAS2C,OAAO3iB,EAAQ8F,EAAUyW,EAAW4F,EAAW/hB,EACnE,SAESP,KAAKinB,iBACNlL,GAAsBsM,WAE9B,CACJ,CACAe,oBAAoBjH,GAChB,IAAKniB,KAAK0mB,iBACN,OAAO,KAEX,QAAS5nB,EAAI,EAAGA,EAAIkB,KAAK0mB,iBAAiB1nB,OAAQF,IAAK,CACnD,MAAMqqB,EAAkBnpB,KAAK0mB,iBAAiB5nB,GAC9C,GAAIqqB,EAAgB5oB,SAAW4hB,EAAK5hB,OAChC,OAAO4oB,CAEf,CACA,OAAO,IACX,CACApG,cAAcJ,EAAoBC,EAAaC,EAAYjF,GACvD,OAAA5d,KAAK6mB,WAAajJ,GACX,CACX,EAEJ,IAAI0L,GAAyB,KAC7B,SAASC,KACL,OAAOvQ,MAAQA,KAAKQ,aACxB,CAOA,SAASgQ,KACDF,IACAA,GAAuBb,kBAE3Ba,GAAyB,KAEzBC,MAAsBA,KAAmBE,gBAAgBC,eAC7D,CAsBA,SAASzM,GAAU/e,EAAIiI,EAAU,CAAC,GAC9B,MAAQma,SAAQ,GAAUna,EAEpBwjB,EAAc,YAAajoB,GAC7B,MAAM8X,EAAgB+P,KACtB,IAAK/P,EACD,MAAM,IAAI/Z,MAAM,qJAGpB,MAAMoe,EAAgBrE,EAAciQ,gBACpC,GAAIzQ,KAAKU,QAAQhH,IAAI,yBACjB,MAAM,IAAIjT,MAAM,uCAEpB,IAEI,IAAK6pB,GAAwB,CACzB,MAAMvN,GAAwB/C,MAAQA,KAAK+C,sBAC3C,GAAI8B,EAAc+L,wBAAyB7N,GACvC,MAAM,IAAItc,MAAM,uCAEpB6pB,GAAyB,IAAIvN,EACjC,CACA,IAAI8N,EACJ,MAAMC,EAAoBjM,EAAc+L,cACxC/L,EAAckM,YAAYT,IAC1BA,GAAuBd,gBACvB,IACIqB,EAAM3rB,EAAG6B,MAAMC,KAAM0B,GACjB4e,EACAgJ,GAAuBhJ,MAAM,IAAI,GAGjCD,IAER,SAEIxC,EAAckM,YAAYD,EAC9B,CACA,IAAKxJ,EAAO,CACR,GAAIgJ,GAAuBvC,sBAAsB/nB,OAAS,EACtD,MAAM,IAAIS,MAAM,GAAG6pB,GAAuBvC,sBAAsB/nB,gDAGpE,GAAIsqB,GAAuBtC,cAAchoB,OAAS,EAC9C,MAAM,IAAIS,MAAM,GAAG6pB,GAAuBtC,cAAchoB,sCAEhE,CACA,OAAO6qB,CACX,SAEIL,IACJ,CACJ,EACAG,SAAY9K,aAAc,EACnB8K,CACX,CACA,SAASK,KACL,GAA8B,MAA1BV,KACAA,GAAyBtQ,KAAKU,QAAQhH,IAAI,yBACZ,MAA1B4W,IACA,MAAM,IAAI7pB,MAAM,0EAGxB,OAAO6pB,EACX,CAaA,SAAS9N,GAAKqK,EAAS,EAAGoE,GAAsB,GAC5CD,KAAwBxO,KAAKqK,EAAQ,KAAMoE,EAC/C,CAWA,SAAS3J,GAAM4J,GACX,OAAOF,KAAwB1J,MAAM4J,EACzC,CAMA,SAASC,KACL,MAAMC,EAAWJ,KACjBI,EAASrD,sBACTqD,EAASrD,sBAAsB/nB,OAAS,CAC5C,CAMA,SAASqhB,KACL2J,KAAwB3J,iBAC5B,CA8BA,SAASgK,GAAoBrR,GACzB,MAAMsR,EAAU,KACVC,EAAgB,CAAC,EACjBC,EAAgB,oBAChBC,EAAY,sBACZC,EAAU,cAChB,IAAIC,EAAcD,EAAU,YAC5B,MAAME,EACFtpB,cACItB,KAAK4d,MAAQiN,KACb7qB,KAAK8qB,UAAY,IAAI9sB,IACzB,EAEJ,SAAS+sB,IACL,OAAO,IAAItrB,MAAMgrB,EACrB,CACA,SAASO,KACL,IACI,MAAMD,GACV,OACOE,GACH,OAAOA,CACX,CACJ,CAGA,MAAMrN,GAAQmN,IACRG,GAAcF,KACdH,GAAgBjN,GAAMle,MACtBqrB,EACAG,GAAYxrB,MACRsrB,GACAD,EACV,SAASI,GAAUvN,GACf,OAAOA,EAAMle,MAAQke,EAAMle,MAAMqD,MAAMunB,GAAW,EACtD,CACA,SAASc,EAAcC,EAAOzN,GAC1B,IAAI0N,EAAQH,GAAUvN,GACtB,QAAS9e,EAAI,EAAGA,EAAIwsB,EAAMtsB,OAAQF,IAAK,CACnC,MAAMysB,EAAQD,EAAMxsB,GAEfyrB,EAAcrrB,eAAeqsB,IAC9BF,EAAM5nB,KAAK6nB,EAAMxsB,GAEzB,CACJ,CACA,SAAS0sB,EAAqBC,EAAQ/rB,GAClC,MAAMgsB,EAAY,CAAChsB,EAAQA,EAAMoD,OAAS,IAC1C,GAAI2oB,EAAQ,CACR,IAAIX,OAAgB9sB,MAAO8d,UAC3B,QAAShd,EAAI,EAAGA,EAAI2sB,EAAOzsB,OAAQF,IAAK,CACpC,MAAM6sB,GAAcF,EAAO3sB,GACrB8sB,GAAWD,GAAYb,UAC7B,IAAIe,GAAY,+BAA+Bf,EAAYc,GAAS9P,qBAAqB8P,KACzFC,GAAYA,GAAUlsB,QAAQ,WAAY,KAC1C+rB,EAAUjoB,KAAKknB,EAAYhrB,QAAQ+qB,EAASmB,KAC5CT,EAAcM,EAAWC,GAAY/N,OACrCkN,EAAYc,GAAS9P,SACzB,CACJ,CACA,OAAO4P,EAAUra,KAAKiZ,EAC1B,CAKA,SAASwB,IAGL,OAAOrsB,MAAMssB,gBAAkB,CACnC,CAoDA,SAASC,EAAmBC,EAAazY,GACjCA,EAAQ,IACRyY,EAAYxoB,KAAK0nB,IAAU,IAAIP,GAAiBhN,QAChDoO,EAAmBC,EAAazY,EAAQ,GAEhD,CAxDAwF,EAAKkT,uBAA4B,CAC7B7sB,KAAM,mBACN8sB,oBAAqB,GAGrBC,kBAAmB,SAAUxO,GACzB,IAAKA,EACD,OAEJ,MAAM0N,EAAQ1N,EAAM5E,EAAKY,WAAW,qBACpC,OAAK0R,EAGEE,EAAqBF,EAAO1N,EAAMle,OAF9Bke,EAAMle,KAGrB,EACAwiB,eAAgB,SAAUS,EAAoBC,EAAaC,EAAYV,GACnE,GAAI2J,IAAsB,CACtB,MAAMxN,EAActF,EAAKsF,YACzB,IAAIgN,GAAShN,GAAeA,EAAY/G,MAAQ+G,EAAY/G,KAAKiT,IAAmB,GACpFc,GAAQ,CAAC,IAAIV,GAAkBld,OAAO4d,IAClCA,GAAMtsB,OAASgB,KAAKmsB,sBACpBb,GAAMtsB,OAASgB,KAAKmsB,qBAEnBhK,EAAK5K,OACN4K,EAAK5K,KAAO,CAAC,GACC,cAAd4K,EAAKjgB,OAMLigB,EAAK5K,KAAO,IAAK4K,EAAK5K,OAE1B4K,EAAK5K,KAAKiT,GAAiBc,EAC/B,CACA,OAAO3I,EAAmBP,aAAaS,EAAYV,EACvD,EACAY,cAAe,SAAUJ,EAAoBC,EAAaC,EAAYjF,GAClE,GAAIkO,IAAsB,CACtB,MAAMO,EAAarT,EAAKsF,aAAeV,EAAMuE,KAC7C,GAAIvE,aAAiBne,OAAS4sB,EAAY,CACtC,MAAMC,GAAYd,EAAqBa,EAAW9U,MAAQ8U,EAAW9U,KAAKiT,GAAgB5M,EAAMle,OAChG,IACIke,EAAMle,MAAQke,EAAM0O,UAAYA,EACpC,OACc,CAClB,CACJ,CACA,OAAO3J,EAAmBK,YAAYH,EAAYjF,EACtD,GAQJ,SAAS2O,IACL,IAAKT,IACD,OAEJ,MAAML,EAAS,GACfO,EAAmBP,EAAQ,GAC3B,MAAMe,EAAUf,EAAO,GACjBgB,EAAUhB,EAAO,GACvB,QAAS3sB,EAAI,EAAGA,EAAI0tB,EAAQxtB,OAAQF,IAAK,CACrC,MAAM4tB,EAASF,EAAQ1tB,GACvB,IAAiC,GAA7B4tB,EAAO7pB,QAAQ4nB,GAAkB,CACjC,IAAIkC,GAAQD,EAAOC,MAAM,aACzB,GAAIA,GAAO,CACPhC,EAAcgC,GAAM,GAAKjC,EAAU,sBACnC,KACJ,CACJ,CACJ,CACA,QAAS5rB,EAAI,EAAGA,EAAI0tB,EAAQxtB,OAAQF,IAAK,CACrC,MAAM4tB,EAASF,EAAQ1tB,GAEvB,GAAI4tB,IADWD,EAAQ3tB,GAKnB,MAHAyrB,EAAcmC,IAAU,CAKhC,CACJ,CACAH,EACJ,CAEA,MAAM/S,GACF,UAAO9G,GACH,OAAOsG,KAAKU,QAAQhH,IAAI,gBAC5B,CACA,eAAOka,GACH,OAAOpT,GAAc9G,gBAAiB8G,EAC1C,CACA,oBAAOiQ,GACH,IAAKjQ,GAAcoT,WACf,MAAM,IAAIntB,MAAM,gEAEpB,OAAO+Z,GAAc9G,KACzB,CACApR,YAAYurB,EAAsB,MAC9B7sB,KAAK6sB,oBAAsBA,EAC3B7sB,KAAKX,KAAO,YACZW,KAAK8sB,cAAgB,KACrB9sB,KAAKiB,WAAa,CAAEuY,cAAiBxZ,MACrCA,KAAK+sB,aAAe,KACpB/sB,KAAKgtB,cAAgB,KACrBhtB,KAAKitB,wBAAyB,EAC9BjtB,KAAKktB,MAAQ,GACbltB,KAAK+pB,YAAY8C,EACrB,CACA9C,YAAYoD,GACR,MAAMC,EAAgBptB,KAAK8sB,gBAAkBK,EAC7CntB,KAAK8sB,cAAgBK,EACrBntB,KAAK+sB,cAAgB/sB,KAAK+sB,aAAahuB,QAASsE,UAAerD,KAAKiB,WAAWoC,IAC/ErD,KAAK+sB,aAAe,KAChBI,GAAgBA,EAAalsB,aAC7BjB,KAAK+sB,aAAe7sB,OAAOW,KAAKssB,EAAalsB,YAC7CjB,KAAK+sB,aAAahuB,QAASsuB,GAAOrtB,KAAKiB,WAAWosB,GAAKF,EAAalsB,WAAWosB,KAG/ED,GACAptB,KAAKgtB,gBACJhtB,KAAKgtB,cAAc1J,WAAatjB,KAAKgtB,cAAc3J,aACpDrjB,KAAKitB,wBAAyB,EAEtC,CACArD,cACI,OAAO5pB,KAAK8sB,aAChB,CACApD,gBACI1pB,KAAK4pB,cACL5pB,KAAK+pB,YAAY/pB,KAAK6sB,oBAC1B,CACAS,kBAAkB3K,EAAoBC,EAAaC,GAC3C7iB,KAAKitB,wBAA0BjtB,KAAKgtB,gBAGpChtB,KAAKitB,wBAAyB,EAC9BjtB,KAAKijB,UAAUN,EAAoBC,EAAaC,EAAY7iB,KAAKgtB,eAEzE,CACAO,gBAAgBpL,GACZ,GAAKniB,KAAKktB,MAGV,QAASpuB,EAAI,EAAGA,EAAIkB,KAAKktB,MAAMluB,OAAQF,IACnC,GAAIkB,KAAKktB,MAAMpuB,KAAOqjB,EAElB,YADAniB,KAAKktB,MAAMrgB,OAAO/N,EAAG,EAIjC,CACAif,8BACI,GAA0B,IAAtB/d,KAAKktB,MAAMluB,OACX,MAAO,GAWX,MAAM8e,EAAmB,+BATR9d,KAAKktB,MAAMM,IAAKrL,IAC7B,MAAMsL,EAAWtL,EAAK5K,MAClBrX,OAAOW,KAAKshB,EAAK5K,MACZiW,IAAKnqB,GACCA,EAAM,IAAM8e,EAAK5K,KAAKlU,IAE5BgO,KAAK,KACd,MAAO,SAAS8Q,EAAKjgB,iBAAiBigB,EAAK5hB,kBAAkBktB,IAAQ,GAEJ,IAErE,OAAAztB,KAAKktB,MAAQ,GACNpP,CACX,CACA4P,OAAO/K,EAAoBC,EAAaC,EAAYuH,GAChD,OAAIpqB,KAAK8sB,eAAiB9sB,KAAK8sB,cAAcY,OAClC1tB,KAAK8sB,cAAcY,OAAO/K,EAAoBC,EAAaC,EAAYuH,GAGvEzH,EAAmBzH,KAAK2H,EAAYuH,EAEnD,CACAuD,YAAYhL,EAAoBC,EAAaC,EAAY1C,EAAU5f,GAC/D,OAAIP,KAAK8sB,eAAiB9sB,KAAK8sB,cAAca,YAClC3tB,KAAK8sB,cAAca,YAAYhL,EAAoBC,EAAaC,EAAY1C,EAAU5f,GAGtFoiB,EAAmBiL,UAAU/K,EAAY1C,EAAU5f,EAElE,CACAmiB,SAASC,EAAoBC,EAAaC,EAAY1C,EAAUzD,EAAW4F,EAAW/hB,GAElF,OADAP,KAAKstB,kBAAkB3K,EAAoBC,EAAaC,GACpD7iB,KAAK8sB,eAAiB9sB,KAAK8sB,cAAcpK,SAClC1iB,KAAK8sB,cAAcpK,SAASC,EAAoBC,EAAaC,EAAY1C,EAAUzD,EAAW4F,EAAW/hB,GAGzGoiB,EAAmBG,OAAOD,EAAY1C,EAAUzD,EAAW4F,EAAW/hB,EAErF,CACAwiB,cAAcJ,EAAoBC,EAAaC,EAAYjF,GACvD,OAAI5d,KAAK8sB,eAAiB9sB,KAAK8sB,cAAc/J,cAClC/iB,KAAK8sB,cAAc/J,cAAcJ,EAAoBC,EAAaC,EAAYjF,GAG9E+E,EAAmBK,YAAYH,EAAYjF,EAE1D,CACAsE,eAAeS,EAAoBC,EAAaC,EAAYV,GAIxD,MAHkB,cAAdA,EAAKjgB,MACLlC,KAAKktB,MAAMzpB,KAAK0e,GAEhBniB,KAAK8sB,eAAiB9sB,KAAK8sB,cAAc5K,eAClCliB,KAAK8sB,cAAc5K,eAAeS,EAAoBC,EAAaC,EAAYV,GAG/EQ,EAAmBP,aAAaS,EAAYV,EAE3D,CACAE,aAAaM,EAAoBC,EAAaC,EAAYV,EAAMzF,EAAW4F,GAKvE,MAJkB,cAAdH,EAAKjgB,MACLlC,KAAKutB,gBAAgBpL,GAEzBniB,KAAKstB,kBAAkB3K,EAAoBC,EAAaC,GACpD7iB,KAAK8sB,eAAiB9sB,KAAK8sB,cAAczK,aAClCriB,KAAK8sB,cAAczK,aAAaM,EAAoBC,EAAaC,EAAYV,EAAMzF,EAAW4F,GAG9FK,EAAmBJ,WAAWM,EAAYV,EAAMzF,EAAW4F,EAE1E,CACAE,aAAaG,EAAoBC,EAAaC,EAAYV,GAKtD,MAJkB,cAAdA,EAAKjgB,MACLlC,KAAKutB,gBAAgBpL,GAEzBniB,KAAKstB,kBAAkB3K,EAAoBC,EAAaC,GACpD7iB,KAAK8sB,eAAiB9sB,KAAK8sB,cAActK,aAClCxiB,KAAK8sB,cAActK,aAAaG,EAAoBC,EAAaC,EAAYV,GAG7EQ,EAAmBF,WAAWI,EAAYV,EAEzD,CACAc,UAAU9C,EAAUzG,EAASvZ,EAAQ+iB,GACjCljB,KAAKgtB,cAAgB9J,EACjBljB,KAAK8sB,eAAiB9sB,KAAK8sB,cAAc7J,UACzCjjB,KAAK8sB,cAAc7J,UAAU9C,EAAUzG,EAASvZ,EAAQ+iB,GAGxD/C,EAASgD,QAAQhjB,EAAQ+iB,EAEjC,GA4FJ,SAAS2K,GAAc7U,GACnBqR,GAAoBrR,GA3FxB,SAAS8U,GAAmB9U,GAGxBA,EAAKQ,cAAmBA,EAC5B,CAwFIsU,CAAmB9U,GAtFvB,SAAS+U,GAAc/U,GAoBnBA,EAAKO,iBAnBL,MAAMA,EACFjY,YAAY6f,GACRnhB,KAAK0hB,QAAU1I,EAAKU,QACpB1Z,KAAKX,KAAO,oBAAsB8hB,CACtC,CACAe,eAAe/B,EAAUzG,EAASvZ,EAAQgiB,GACtC,OAAQA,EAAKjgB,MACT,IAAK,YACL,IAAK,YACD,MAAM,IAAIzC,MAAM,eAAe0iB,EAAK5hB,mCAAmCP,KAAKX,UAChF,IAAK,YACD8iB,EAAOhC,EAASiC,aAAajiB,EAAQgiB,GAG7C,OAAOA,CACX,EAKR,CAkEI4L,CAAc/U,GACdD,GAAaC,GACbuF,GAAUvF,GA7kDd,SAASgV,GAAWhV,GAChBA,EAAKC,aAAa,QAAS,CAACC,EAAQF,KAChC,MAAMiV,EAAQ/U,EAAO+U,MACrB,UAAWA,EAAU,IAGjB,OAEJ,UAAWjV,EAAS,IAChB,MAAM,IAAIvZ,MAAM,mBAEpB,MAAM+Z,EAAgBR,EAAKQ,cACrBD,EAAmBP,EAAKO,iBAC9B,IAAKC,EACD,MAAM,IAAI/Z,MAAM,yBAEpB,GAAIwuB,EAAM3U,eACN,MAAM,IAAI7Z,MAAM,iDAEpBwuB,EAAM3U,gBAAoB,EAC1B,MAAMkF,EAAWxF,EAAKU,QAChB+E,EAAWD,EAAStD,KAAK,IAAI3B,EAAiB,mBACpD,IAAI2U,EAAW,KACf,MAAMC,GAAY3P,EAAStD,KAAK,IAAI1B,GAC9B4U,GAAgB,CAClBC,MAAOnV,EAAOmV,MACdC,UAAWpV,EAAOoV,UAClBC,OAAQrV,EAAOqV,OACfC,WAAYtV,EAAOsV,WACnBrP,SAAUjG,EAAOiG,SACjBO,GAAIxG,EAAOwG,IAEf,SAAS+O,GAAgB/sB,EAAMgtB,EAAUC,GACrC,QAAS7vB,EAAI,EAAGA,EAAI4C,EAAK1C,OAAQF,IAAK,CAClC,IAAIN,EAAMkD,EAAK5C,GACI,mBAARN,IAMPkD,EAAK5C,GAAoB,IAAfN,EAAIQ,OAAe0vB,EAASlwB,GAAOmwB,EAAUnwB,GAGvDkD,EAAK5C,GAAG8vB,SAAW,WACf,OAAOpwB,EAAIowB,UACf,EAER,CACA,OAAOltB,CACX,CACA,SAASsZ,GAAmBtZ,GAMxB,OAAO+sB,GAAgB/sB,EALN,SAAUxD,GACvB,OAAO,WACH,OAAOugB,EAAStD,IAAIjd,EAAI8B,KAAMC,UAClC,CACJ,EAEJ,CACA,SAASmb,GAAe1Z,GAWpB,OAAO+sB,GAAgB/sB,EALN,SAAUxD,GACvB,OAAO,WACH,OAAOgwB,EAAS/S,IAAIjd,EAAI8B,KAC5B,CACJ,EATkB,SAAU9B,GACxB,OAAO,SAAU0e,GACb,OAAOsR,EAAS/S,IAAIjd,EAAI8B,KAAM,CAAC4c,GACnC,CACJ,EAOJ,CACA,SAASiS,EAAgBntB,GAWrB,OAAO+sB,GAAgB/sB,EALN,SAAUxD,GACvB,OAAO,WACH,OAAOiwB,GAAUhT,IAAIjd,EAAI8B,KAC7B,CACJ,EATkB,SAAU9B,GACxB,OAAO,SAAU0e,GACb,OAAOuR,GAAUhT,IAAIjd,EAAI8B,KAAM,CAAC4c,GACpC,CACJ,EAOJ,CAuCA,IACEkS,EAAiBC,EAvCnB7V,EAAOiG,SAAWjG,EAAO8V,MAAQ,WAC7B,OAAOZ,GAAcjP,SAASpf,MAAMC,KAAMgb,GAAmB/a,WACjE,EACAiZ,EAAOqG,UACHrG,EAAO8V,MAAM1P,KACTpG,EAAOiG,SAASG,KACZ,WACI,OAAO8O,GAAcjP,SAASG,KAAKvf,MAAMC,KAAMgb,GAAmB/a,WACtE,EACZiZ,EAAOiG,SAASC,KAAOlG,EAAO8V,MAAM5P,KAAO,WACvC,OAAOgP,GAAcjP,SAASC,KAAKrf,MAAMC,KAAMgb,GAAmB/a,WACtE,EACAiZ,EAAOwG,GACHxG,EAAO+V,QACH/V,EAAOtU,KACH,WACI,OAAOwpB,GAAc1O,GAAG3f,MAAMC,KAAMob,GAAenb,WACvD,EACZiZ,EAAO0G,IACH1G,EAAOgW,SACHhW,EAAOwG,GAAGJ,KACN,WACI,OAAO8O,GAAc1O,GAAGJ,KAAKvf,MAAMC,KAAMob,GAAenb,WAC5D,EACZiZ,EAAOwG,GAAGN,KAAOlG,EAAOtU,KAAKwa,KAAO,WAChC,OAAOgP,GAAc1O,GAAGN,KAAKrf,MAAMC,KAAMob,GAAenb,WAC5D,EACAiZ,EAAOmV,MAAQnV,EAAOiW,cAAgB,WAClC,OAAOf,GAAcC,MAAMtuB,MAAMC,KAAM6uB,EAAgB5uB,WAC3D,EACAiZ,EAAOoV,UAAYpV,EAAOkW,SAAW,WACjC,OAAOhB,GAAcE,UAAUvuB,MAAMC,KAAMob,GAAenb,WAC9D,EACAiZ,EAAOqV,OAASrV,EAAOmW,WAAa,WAChC,OAAOjB,GAAcG,OAAOxuB,MAAMC,KAAM6uB,EAAgB5uB,WAC5D,EACAiZ,EAAOsV,WAAatV,EAAOoW,MAAQ,WAC/B,OAAOlB,GAAcI,WAAWzuB,MAAMC,KAAMob,GAAenb,WAC/D,EACE6uB,EAsBCb,EAAMsB,OAAOnuB,UAAUouB,QAtBPT,EAsBgBd,EAAMsB,OAAOnuB,UAAU+Z,IArBtD8S,EAAMsB,OAAOnuB,UAAUouB,QAAU,SAAUtxB,GACvC8a,EAAKU,QAAQ4D,kBAAkB,kBAAmB,KAC9CwR,EAAgB7vB,KAAKe,KAAM9B,EAAE,EAErC,EACA+vB,EAAMsB,OAAOnuB,UAAU+Z,IAAM,SAAUjd,GACnC,OAAA8B,KAAKoX,GAAG,OAAS5X,IACb0uB,EAAW1P,EAAStD,KAAK,IAAI1B,EAAe,GAEhDxZ,KAAKoX,GAAG,OAAQ,CAACxS,EAAMqmB,KACnB,MAAMpN,EAAgBqQ,GAAYA,EAASxb,IAAI,iBAC/C,GAAImL,GAAiBoN,EACjB,IAEIA,EAAI3rB,SAAWue,EAAcE,6BACjC,OACgB,IAGjBgR,EAAY9vB,KAAKe,KAAM9B,EAClC,CACyD,EAErE,CA07CI8vB,CAAWhV,GAxwCf,SAASyW,GAAezW,GAGpBA,EAAK+H,kBAAuBA,GAC5B/H,EAAKC,aAAa,YAAa,CAACC,EAAQF,EAAMG,KAuC1C,SAASqD,EAActe,EAAIE,EAAS6iB,EAAgBC,GAChD,MAAM0B,GAAc5J,EAAKU,QACnBqH,GAAoB/H,EAAK+H,kBAC/B,QAA0BzjB,IAAtByjB,GACA,MAAM,IAAIthB,MAAM,8JAGpB,MAAM+Z,GAAgBR,EAAKQ,cAC3B,IAAKA,GACD,MAAM,IAAI/Z,MAAM,qJAGpB,MAAMoe,GAAgBrE,GAAc9G,MACpC8G,GAAciQ,gBAGd,MAAM/K,GAAY1F,EAAKU,QAAQgW,YAAY,iBACrCC,EAAmB9R,GAAc+L,cACvClL,UAAUlc,OAAO2Y,IAAI,KACjB,MAAMyU,EAAe,IAAI7O,GAAkB,KAEnClD,GAAc+L,eAAiBgG,GAI/B/R,GAAckM,YAAY4F,GAE9BC,EAAa3N,wBACbW,GAAYzH,IAAI,KACZ8F,GAAe,EAClB,EACDrD,IAEIC,GAAc+L,eAAiBgG,GAE/B/R,GAAckM,YAAY4F,GAE9BC,EAAa3N,wBACbW,GAAYzH,IAAI,KACZ+F,EAAatD,EAAK,EACrB,EACF,QACHC,GAAckM,YAAY6F,GAC1BA,EAAa7N,qBAAoB,GAE9B/I,EAAKU,QAAQmW,WAAW3xB,EAAIE,EACvC,CAhFA4a,EAAKG,EAAIQ,OAAO,cAAgB,SAAmBzb,GAG/C,OAAIgb,EAAOG,QAEA,SAAUuD,GACRA,KAGDA,EAAO,WAAc,GAChBkT,KAAO,SAAUtwB,GAClB,MAAMA,CACV,GAEJgd,EAActe,EAAI8B,KAAM4c,EAAOqO,IAC3B,GAAmB,iBAARA,EACP,OAAOrO,EAAKkT,KAAK,IAAIrwB,MAAMwrB,IAG3BrO,EAAKkT,KAAK7E,EAAG,EAGzB,EAMG,WACH,OAAO,IAAIjJ,QAAQ,CAACf,EAAgBC,KAChC1E,EAActe,EAAI8B,KAAMihB,EAAgBC,EAAY,EAE5D,CACJ,CA+CA,EAER,CA8qCIuO,CAAezW,GAhcnB,SAAS+W,GAAmB/W,GAGxBA,EAAK+C,sBAA2BA,GAChC/C,EAAKC,aAAa,YAAa,CAACC,EAAQF,EAAMG,KAC1CH,EAAKG,EAAIQ,OAAO,kBAAoB,CAChC6P,sBACAnJ,mBACA8J,wBACA3O,QACA8E,SACArD,aACJ,GACD,GACH0G,GAAgB,CACZtlB,WAAYklB,GAASllB,WACrBiqB,YAAa/E,GAAS+E,YACtBjT,aAAckO,GAASlO,aACvBkT,cAAehF,GAASgF,cACxBhL,iBAAkBgG,GAASvK,EAAKY,WAAW,eAC3C4D,mBAAoB+F,GAASvK,EAAKY,WAAW,kBAEjDqK,GAAUE,OAASF,GAAUO,WACjC,CA0aIuL,CAAmB/W,GArEvB,SAASgX,GAAoBhX,GAoBzBA,EAAKC,aAAa,iBAAkB,CAACC,EAAQF,EAAMG,KAC/C,MAAM8W,EAAc9W,EAAIQ,OAAO,SAEzBqH,EAAyB7H,EAAIQ,OAAO,oBAQ1CqI,QAAQ7I,EAAIQ,OAAO,wBAA0B,WACzC,IAAIuW,EAAUlO,QAAQhJ,EAAKY,WAAW,oBAClCsW,IAGJA,EAAUlO,QAAQhJ,EAAKY,WAAW,oBAAsBoI,QAAQ5gB,UAAU+uB,KAC1EnO,QAAQ5gB,UAAU+uB,KAAO,WACrB,MAAMC,GAAUF,EAAQnwB,MAAMC,KAAMC,WACpC,GAjBW,OAiBPD,KAAKiwB,GAA6B,CAElC,MAAMI,GAAoBrX,EAAKU,QAAQhH,IAAI,qBACvC2d,KACAA,GAAkB1O,gCAClByO,GAAQpP,IAA0B,EAE1C,CACA,OAAOoP,EACX,EACJ,EACApO,QAAQ7I,EAAIQ,OAAO,0BAA4B,WAE3C,MAAMuW,EAAUlO,QAAQhJ,EAAKY,WAAW,oBACpCsW,IACAlO,QAAQ5gB,UAAU+uB,KAAOD,EACzBlO,QAAQhJ,EAAKY,WAAW,yBAAsBtc,EAEtD,GAER,CAWI0yB,CAAoBhX,EACxB,CAEA6U,CAAc7U,6BCxrEd,MAAME,GAAS0H,WAGf,SAAShH,GAAWva,GAEhB,OADqB6Z,GAAO2H,sBAA2B,mBACjCxhB,CAC1B,CA2oBA,MAAMixB,GAAiCpwB,OAAOqwB,yBAExCC,GAAuBtwB,OAAOic,eAE9BsU,GAAuBvwB,OAAOwwB,eAE9BC,GAAezwB,OAAOmB,OAEtBuvB,GAAanyB,MAAM2C,UAAU+B,MAE7B0tB,GAAyB,mBAEzBC,GAA4B,sBAE5BC,GAAiCnX,GAAWiX,IAE5CG,GAAoCpX,GAAWkX,IAE/CG,GAAW,OAEXC,GAAY,QAEZC,GAAqBvX,GAAW,IACtC,SAASwX,GAAoBnrB,EAAU1F,GACnC,OAAOyY,KAAKU,QAAQ2X,KAAKprB,EAAU1F,EACvC,CACA,SAAS+wB,GAAiC/wB,EAAQ0F,EAAUsR,EAAMga,EAAgBC,GAC9E,OAAOxY,KAAKU,QAAQ+X,kBAAkBlxB,EAAQ0F,EAAUsR,EAAMga,EAAgBC,EAClF,CACA,MAAME,GAAa9X,GACb+X,UAAwBx0B,OAAW,IACnCy0B,GAAiBD,GAAiBx0B,YAASG,EAC3Cu0B,GAAWF,IAAkBC,IAAmBhR,WAChDkR,GAAmB,kBACzB,SAASC,GAAcrwB,EAAMnB,GACzB,QAASzB,EAAI4C,EAAK1C,OAAS,EAAGF,GAAK,EAAGA,IACX,mBAAZ4C,EAAK5C,KACZ4C,EAAK5C,GAAKsyB,GAAoB1vB,EAAK5C,GAAIyB,EAAS,IAAMzB,IAG9D,OAAO4C,CACX,CAqBA,SAASswB,GAAmBC,GACxB,OAAKA,IAGyB,IAA1BA,EAAanT,YAGoB,mBAArBmT,EAAavf,YAA6Buf,EAAavhB,IAAQ,IACnF,CACA,MAAMwhB,UAAqBC,kBAAsB,KAAejsB,gBAAgBisB,kBAG1E/X,KAAW,OAAQyX,YACdA,GAAQrd,QAAY,KACI,qBAA/Bqd,GAAQrd,QAAQoa,WACdwD,IAAahY,KAAW8X,OAAkBP,KAAkBC,GAAeS,aAI3EC,UAAeT,GAAQrd,QAAY,KACN,qBAA/Bqd,GAAQrd,QAAQoa,aACfsD,OACEP,KAAkBC,GAAeS,aAClCE,GAAyB,CAAC,EAC1BC,EAA2Bd,GAAW,uBACtCe,EAAS,SAAUve,GAIrB,KADAA,EAAQA,GAAS2d,GAAQ3d,OAErB,OAEJ,IAAIwe,EAAkBH,GAAuBre,EAAMhS,MAC9CwwB,IACDA,EAAkBH,GAAuBre,EAAMhS,MAAQwvB,GAAW,cAAgBxd,EAAMhS,OAE5F,MAAM/B,EAASH,MAAQkU,EAAM/T,QAAU0xB,GACjCc,EAAWxyB,EAAOuyB,GACxB,IAAIlY,EACJ,GAAI4X,IAAajyB,IAAWyxB,IAAiC,UAAf1d,EAAMhS,KAAkB,CAIlE,MAAM0wB,EAAa1e,EACnBsG,EACImY,GACIA,EAAS1zB,KAAKe,KAAM4yB,EAAWtzB,QAASszB,EAAWC,SAAUD,EAAWE,OAAQF,EAAWG,MAAOH,EAAWhV,QACtG,IAAXpD,GACAtG,EAAMrC,gBAEd,MAEI2I,EAASmY,GAAYA,EAAS5yB,MAAMC,KAAMC,WAO3B,iBAAfiU,EAAMhS,MAMF2vB,GAAQW,IAGU,iBAAXhY,EACPtG,EAAM8e,YAAcxY,EAELld,MAAVkd,IAAwBA,GAC7BtG,EAAMrC,iBAGd,OAAO2I,CACX,EACA,SAASyY,EAAcr0B,EAAKmF,EAAM3C,GAC9B,IAAI8xB,EAAO5C,GAA+B1xB,EAAKmF,GAU/C,IATKmvB,GAAQ9xB,GAEakvB,GAA+BlvB,EAAW2C,KAE5DmvB,EAAO,CAAE3W,YAAY,EAAMD,cAAc,KAK5C4W,IAASA,EAAK5W,aACf,OAEJ,MAAM6W,EAAsBzB,GAAW,KAAO3tB,EAAO,WACrD,GAAInF,EAAIM,eAAei0B,IAAwBv0B,EAAIu0B,GAC/C,cAOGD,EAAKpU,gBACLoU,EAAKziB,MACZ,MAAM2iB,EAAkBF,EAAKxgB,IACvB2gB,EAAkBH,EAAKxiB,IAEvB4iB,EAAYvvB,EAAKZ,MAAM,GAC7B,IAAIuvB,EAAkBH,GAAuBe,GACxCZ,IACDA,EAAkBH,GAAuBe,GAAa5B,GAAW,cAAgB4B,IAErFJ,EAAKxiB,IAAM,SAAU6iB,GAGjB,IAAIpzB,EAASH,MACRG,GAAUvB,IAAQizB,KACnB1xB,EAAS0xB,IAER1xB,IAIwB,mBADPA,EAAOuyB,IAEzBvyB,EAAOkC,oBAAoBixB,EAAWb,GAI1CY,GAAmBA,EAAgBp0B,KAAKkB,EAAQ,MAChDA,EAAOuyB,GAAmBa,EACF,mBAAbA,GACPpzB,EAAOgC,iBAAiBmxB,EAAWb,GAAQ,GAEnD,EAGAS,EAAKxgB,IAAM,WAGP,IAAIvS,EAASH,KAIb,IAHKG,GAAUvB,IAAQizB,KACnB1xB,EAAS0xB,KAER1xB,EACD,OAAO,KAEX,MAAMwyB,EAAWxyB,EAAOuyB,GACxB,GAAIC,EACA,OAAOA,EAEN,GAAIS,EAAiB,CAOtB,IAAI3iB,EAAQ2iB,EAAgBn0B,KAAKe,MACjC,GAAIyQ,EACAyiB,SAAKxiB,IAAIzR,KAAKe,KAAMyQ,GACoB,mBAA7BtQ,EAAO2xB,KACd3xB,EAAOqzB,gBAAgBzvB,GAEpB0M,CAEf,CACA,OAAO,IACX,EACA+f,GAAqB5xB,EAAKmF,EAAMmvB,GAChCt0B,EAAIu0B,IAAuB,CAC/B,CACA,SAASM,EAAkB70B,EAAKqC,EAAYG,GACxC,GAAIH,EACA,QAASnC,EAAI,EAAGA,EAAImC,EAAWjC,OAAQF,IACnCm0B,EAAcr0B,EAAK,KAAOqC,EAAWnC,GAAIsC,OAG5C,CACD,MAAMsyB,EAAe,GACrB,UAAW3vB,KAAQnF,EACS,MAApBmF,EAAKZ,MAAM,EAAG,IACduwB,EAAajwB,KAAKM,GAG1B,QAAS4vB,EAAI,EAAGA,EAAID,EAAa10B,OAAQ20B,IACrCV,EAAcr0B,EAAK80B,EAAaC,GAAIvyB,EAE5C,CACJ,CACA,MAAMwyB,EAAsBlC,GAAW,oBAEvC,SAASmC,EAAWC,GAChB,MAAMC,EAAgBlC,GAAQiC,GAC9B,IAAKC,EACD,OAEJlC,GAAQH,GAAWoC,IAAcC,EACjClC,GAAQiC,GAAa,WACjB,MAAMpwB,EAAIquB,GAAc9xB,UAAW6zB,GACnC,OAAQpwB,EAAE1E,QACN,KAAK,EACDgB,KAAK4zB,GAAuB,IAAIG,EAChC,MACJ,KAAK,EACD/zB,KAAK4zB,GAAuB,IAAIG,EAAcrwB,EAAE,IAChD,MACJ,KAAK,EACD1D,KAAK4zB,GAAuB,IAAIG,EAAcrwB,EAAE,GAAIA,EAAE,IACtD,MACJ,KAAK,EACD1D,KAAK4zB,GAAuB,IAAIG,EAAcrwB,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAC5D,MACJ,KAAK,EACD1D,KAAK4zB,GAAuB,IAAIG,EAAcrwB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAClE,MACJ,QACI,MAAM,IAAIjE,MAAM,sBAE5B,EAEAu0B,EAAsBnC,GAAQiC,GAAYC,GAC1C,MAAM9Z,EAAW,IAAI8Z,EAAc,WAAc,GACjD,IAAIhwB,EACJ,IAAKA,KAAQkW,EAES,mBAAd6Z,GAA2C,iBAAT/vB,GAErC,SAAUA,GACuB,mBAAnBkW,EAASlW,GAChB8tB,GAAQiC,GAAW1yB,UAAU2C,GAAQ,WACjC,OAAO/D,KAAK4zB,GAAqB7vB,GAAMhE,MAAMC,KAAK4zB,GAAsB3zB,UAC5E,EAGAuwB,GAAqBqB,GAAQiC,GAAW1yB,UAAW2C,EAAM,CACrD2M,IAAK,SAAUxS,GACO,mBAAPA,GACP8B,KAAK4zB,GAAqB7vB,GAAQqtB,GAAoBlzB,EAAI41B,EAAY,IAAM/vB,GAI5EiwB,EAAsBh0B,KAAK4zB,GAAqB7vB,GAAO7F,IAGvD8B,KAAK4zB,GAAqB7vB,GAAQ7F,CAE1C,EACAwU,IAAK,WACD,OAAO1S,KAAK4zB,GAAqB7vB,EACrC,GAGZ,CAzBC,CAyBEA,GAEP,IAAKA,KAAQgwB,EACI,cAAThwB,GAAwBgwB,EAAc70B,eAAe6E,KACrD8tB,GAAQiC,GAAW/vB,GAAQgwB,EAAchwB,GAGrD,CACA,SAASmc,EAAY/f,EAAQd,EAAM40B,GAC/B,IAAIC,EAAQ/zB,EACZ,KAAO+zB,IAAUA,EAAMh1B,eAAeG,IAClC60B,EAAQzD,GAAqByD,IAE5BA,GAAS/zB,EAAOd,KAEjB60B,EAAQ/zB,GAEZ,MAAMg0B,EAAezC,GAAWryB,GAChC,IAAI8gB,EAAW,KACf,GAAI+T,MAAY/T,EAAW+T,EAAMC,MAAmBD,EAAMh1B,eAAei1B,IAAgB,CACrFhU,EAAW+T,EAAMC,GAAgBD,EAAM70B,GAIvC,GAAI2yB,GADSkC,GAAS5D,GAA+B4D,EAAO70B,IAC9B,CAC1B,MAAM+0B,EAAgBH,EAAQ9T,EAAUgU,EAAc90B,GACtD60B,EAAM70B,GAAQ,WACV,OAAO+0B,EAAcp0B,KAAMC,UAC/B,EACA+zB,EAAsBE,EAAM70B,GAAO8gB,EACvC,CACJ,CACA,OAAOA,CACX,CAEA,SAASkU,EAAez1B,EAAK01B,EAAUC,GACnC,IAAIC,EAAY,KAChB,SAASpS,EAAaD,GAClB,MAAM5K,EAAO4K,EAAK5K,KAClBA,SAAK7V,KAAK6V,EAAKyR,OAAS,WACpB7G,EAAKW,OAAO/iB,MAAMC,KAAMC,UAC5B,EACAu0B,EAAUz0B,MAAMwX,EAAKpX,OAAQoX,EAAK7V,MAC3BygB,CACX,CACAqS,EAAYtU,EAAYthB,EAAK01B,EAAWnU,GAAa,SAAUja,EAAMxE,GACjE,MAAM+yB,EAAOF,EAAYruB,EAAMxE,GAC/B,OAAI+yB,EAAKzL,OAAS,GAAiC,mBAArBtnB,EAAK+yB,EAAKzL,OAC7BsI,GAAiCmD,EAAKp1B,KAAMqC,EAAK+yB,EAAKzL,OAAQyL,EAAMrS,GAIpEjC,EAASpgB,MAAMmG,EAAMxE,EAEpC,EACJ,CACA,SAASsyB,EAAsBU,EAASC,GACpCD,EAAQhD,GAAW,qBAAuBiD,CAC9C,CACA,IAAIC,IAAqB,EACrBC,IAAW,EAWf,SAASC,KACL,GAAIF,GACA,OAAOC,GAEXD,IAAqB,EACrB,IACI,MAAMG,EAAKnD,GAAe/sB,UAAUC,YACR,IAAxBiwB,EAAGlyB,QAAQ,WAA8C,IAA3BkyB,EAAGlyB,QAAQ,cAA8C,IAAxBkyB,EAAGlyB,QAAQ,YAC1EgyB,IAAW,EAEnB,OACgB,CAChB,OAAOA,EACX,CACA,SAASG,GAAWvkB,GAChB,MAAwB,mBAAVA,CAClB,CACA,SAASwkB,EAASxkB,GACd,MAAwB,iBAAVA,CAClB,CAUA,IAAIykB,GAAmB,EACvB,UAAW/3B,OAAW,IAClB,IACI,MAAMgJ,EAAUjG,OAAOic,eAAe,CAAC,EAAG,UAAW,CACjDzJ,IAAK,WACDwiB,GAAmB,CACvB,IAKJ/3B,OAAOgF,iBAAiB,OAAQgE,EAASA,GACzChJ,OAAOkF,oBAAoB,OAAQ8D,EAASA,EAChD,OAEI+uB,GAAmB,CACvB,CAGJ,MAAMC,EAAiC,CACnCC,MAAM,GAEJC,EAAuB,CAAC,EACxBC,EAAgB,CAAC,EACjBC,EAAyB,IAAIC,OAAO,IAAMrE,GAAqB,uBAC/DsE,EAA+B/D,GAAW,sBAChD,SAASgE,EAAkBpC,EAAWqC,GAClC,MAAMC,GAAkBD,EAAoBA,EAAkBrC,GAAaA,GAAapC,GAClF2E,GAAiBF,EAAoBA,EAAkBrC,GAAaA,GAAarC,GACjFtX,EAASwX,GAAqByE,EAC9BE,EAAgB3E,GAAqB0E,EAC3CR,EAAqB/B,GAAa,CAAC,EACnC+B,EAAqB/B,GAAWpC,IAAavX,EAC7C0b,EAAqB/B,GAAWrC,IAAY6E,CAChD,CACA,SAASC,EAAiBlE,EAAS1Y,EAAK6c,EAAMC,GAC1C,MAAMC,EAAsBD,GAAgBA,EAAapf,KAAQga,GAC3DsF,EAAyBF,GAAgBA,EAAaG,IAAOtF,GAC7DuF,EAA4BJ,GAAgBA,EAAa3b,WAAc,iBACvEgc,EAAuCL,GAAgBA,EAAaM,OAAU,qBAC9EC,EAA6B9E,GAAWwE,GACxCO,EAA4B,IAAMP,EAAqB,IACvDQ,EAAyB,kBACzBC,EAAgC,IAAMD,EAAyB,IAC/DnU,GAAa,SAAUJ,EAAMhiB,EAAQ+T,IAGvC,GAAIiO,EAAKyU,UACL,OAEJ,MAAMzW,GAAWgC,EAAKlc,SAUtB,IAAI2X,GAToB,iBAAbuC,IAAyBA,GAAS0W,cAEzC1U,EAAKlc,SAAYiO,GAAUiM,GAAS0W,YAAY3iB,GAChDiO,EAAK2U,iBAAmB3W,IAO5B,IACIgC,EAAKW,OAAOX,EAAMhiB,EAAQ,CAAC+T,IAC/B,OACO+W,GACHrN,GAAQqN,CACZ,CACA,MAAM9kB,GAAUgc,EAAKhc,QACrB,GAAIA,IAA8B,iBAAZA,IAAwBA,GAAQ4wB,KAAM,CAIxD,MAAM5W,EAAWgC,EAAK2U,iBAAmB3U,EAAK2U,iBAAmB3U,EAAKlc,SACtE9F,EAAOg2B,GAAuBl3B,KAAKkB,EAAQ+T,GAAMhS,KAAMie,EAAUha,GACrE,CACA,OAAOyX,EACX,EACA,SAASoZ,GAAe54B,EAAS8V,EAAO+iB,IAIpC,KADA/iB,EAAQA,GAAS2d,EAAQ3d,OAErB,OAIJ,MAAM/T,GAAS/B,GAAW8V,EAAM/T,QAAU0xB,EACpC3E,GAAQ/sB,GAAOk1B,EAAqBnhB,EAAMhS,MAAM+0B,GAAYhG,GAAWC,KAC7E,GAAIhE,GAAO,CACP,MAAMgK,GAAS,GAGf,GAAqB,IAAjBhK,GAAMluB,OAAc,CACpB,MAAMisB,EAAM1I,GAAW2K,GAAM,GAAI/sB,GAAQ+T,GACzC+W,GAAOiM,GAAOzzB,KAAKwnB,EACvB,KACK,CAID,MAAMkM,EAAYjK,GAAM/pB,QACxB,QAASrE,GAAI,EAAGA,GAAIq4B,EAAUn4B,UACtBkV,IAAiD,IAAxCA,EAAMuhB,IADe32B,KAAK,CAIvC,MAAMmsB,GAAM1I,GAAW4U,EAAUr4B,IAAIqB,GAAQ+T,GAC7C+W,IAAOiM,GAAOzzB,KAAKwnB,GACvB,CACJ,CAGA,GAAsB,IAAlBiM,GAAOl4B,OACP,MAAMk4B,GAAO,GAGb,QAASp4B,EAAI,EAAGA,EAAIo4B,GAAOl4B,OAAQF,IAAK,CACpC,MAAMmsB,GAAMiM,GAAOp4B,GACnBqa,EAAIie,wBAAwB,KACxB,MAAMnM,IAEd,CAER,CACJ,CAEA,MAAMoM,GAA0B,SAAUnjB,GACtC,OAAO8iB,GAAeh3B,KAAMkU,GAAO,EACvC,EAEMojB,GAAiC,SAAUpjB,GAC7C,OAAO8iB,GAAeh3B,KAAMkU,GAAO,EACvC,EACA,SAASqjB,GAAwB34B,EAAKq3B,GAClC,IAAKr3B,EACD,OAAO,EAEX,IAAI44B,IAAoB,EACpBvB,QAAsC34B,IAAtB24B,EAAab,OAC7BoC,GAAoBvB,EAAab,MAErC,MAAMqC,GAAkBxB,GAAgBA,EAAayB,GACrD,IAAIC,IAAiB,EACjB1B,QAAwC34B,IAAxB24B,EAAa2B,SAC7BD,GAAiB1B,EAAa2B,QAElC,IAAIC,IAAe,EACf5B,QAAoC34B,IAApB24B,EAAa6B,KAC7BD,GAAe5B,EAAa6B,IAEhC,IAAI5D,EAAQt1B,EACZ,KAAOs1B,IAAUA,EAAMh1B,eAAeg3B,IAClChC,EAAQzD,GAAqByD,GASjC,IAPKA,GAASt1B,EAAIs3B,KAEdhC,EAAQt1B,IAEPs1B,GAGDA,EAAMsC,GACN,OAAO,EAEX,MAAMb,GAAoBM,GAAgBA,EAAaN,kBASjDoC,GAAW,CAAC,EACZC,EAA0B9D,EAAMsC,GAA8BtC,EAAMgC,GACpE+B,EAA6B/D,EAAMxC,GAAWyE,IAChDjC,EAAMiC,GACJ+B,EAAmBhE,EAAMxC,GAAW2E,IACtCnC,EAAMmC,GACJ8B,GAA4BjE,EAAMxC,GAAW4E,IAC/CpC,EAAMoC,GACV,IAAI8B,GACAnC,GAAgBA,EAAaoC,UAC7BD,GAA6BlE,EAAMxC,GAAWuE,EAAaoC,UACvDnE,EAAM+B,EAAaoC,UA2B3B,MAgEM9G,GAAiBiG,GAhEM,SAAUrV,GAGnC,IAAI4V,GAASO,WAGb,OAAON,EAAuB/4B,KAAK84B,GAAS53B,OAAQ43B,GAASzE,UAAWyE,GAASQ,QAAUjB,GAAiCD,GAAyBU,GAAS5xB,QAClK,EAgDgC,SAAUgc,GACtC,OAAO6V,EAAuB/4B,KAAK84B,GAAS53B,OAAQ43B,GAASzE,UAAWnR,EAAKW,OAAQiV,GAAS5xB,QAClG,EAQMqrB,GAAegG,GAnDM,SAAUrV,GAIjC,IAAKA,EAAKyU,UAAW,CACjB,MAAM4B,EAAmBnD,EAAqBlT,EAAKmR,WACnD,IAAImF,EACAD,IACAC,EAAkBD,EAAiBrW,EAAKoW,QAAUtH,GAAWC,KAEjE,MAAMwH,EAAgBD,GAAmBtW,EAAKhiB,OAAOs4B,GACrD,GAAIC,EACA,QAAS55B,EAAI,EAAGA,EAAI45B,EAAc15B,OAAQF,IAEtC,GADqB45B,EAAc55B,KACdqjB,EAAM,CACvBuW,EAAc7rB,OAAO/N,EAAG,GAExBqjB,EAAKyU,WAAY,EACbzU,EAAKwW,sBACLxW,EAAKwW,sBACLxW,EAAKwW,oBAAsB,MAEF,IAAzBD,EAAc15B,SAGdmjB,EAAKyW,YAAa,EAClBzW,EAAKhiB,OAAOs4B,GAAmB,MAEnC,KACJ,CAGZ,CAIA,GAAKtW,EAAKyW,WAGV,OAAOX,EAA0Bh5B,KAAKkjB,EAAKhiB,OAAQgiB,EAAKmR,UAAWnR,EAAKoW,QAAUjB,GAAiCD,GAAyBlV,EAAKhc,QACrJ,EAO8B,SAAUgc,GACpC,OAAO8V,EAA0Bh5B,KAAKkjB,EAAKhiB,OAAQgiB,EAAKmR,UAAWnR,EAAKW,OAAQX,EAAKhc,QACzF,EAQM0yB,GAAU5C,GAAgBA,EAAa6C,KAAO7C,EAAa6C,KAL3B,SAAU3W,EAAMhC,GAClD,MAAM4Y,SAAwB5Y,EAC9B,MAA4B,aAAnB4Y,GAAiC5W,EAAKlc,WAAaka,GACpC,WAAnB4Y,GAA+B5W,EAAK2U,mBAAqB3W,CAClE,EAEM6Y,GAAkBhgB,KAAK0Y,GAAW,qBAClCuH,GAAgBpH,EAAQH,GAAW,mBAuBzC,MAAMwH,EAAkB,SAAUC,EAAgBC,EAAWC,EAAkBC,EAAgBzB,GAAe,EAAOQ,IAAU,GAC3H,OAAO,WACH,MAAMl4B,GAASH,MAAQ6xB,EACvB,IAAIyB,GAAYrzB,UAAU,GACtBg2B,GAAgBA,EAAasD,oBAC7BjG,GAAY2C,EAAasD,kBAAkBjG,KAE/C,IAAInT,GAAWlgB,UAAU,GACzB,IAAKkgB,GACD,OAAOgZ,EAAep5B,MAAMC,KAAMC,WAEtC,GAAIma,IAAwB,sBAAdkZ,GAEV,OAAO6F,EAAep5B,MAAMC,KAAMC,WAKtC,IAAIu5B,IAAgB,EACpB,GAAwB,mBAAbrZ,GAAyB,CAChC,IAAKA,GAAS0W,YACV,OAAOsC,EAAep5B,MAAMC,KAAMC,WAEtCu5B,IAAgB,CACpB,CACA,GAAI/B,KAAoBA,GAAgB0B,EAAgBhZ,GAAUhgB,GAAQF,WACtE,OAEJ,MAAMw5B,GAAUvE,KAAsB+D,KAAsD,IAArCA,GAAcp2B,QAAQywB,IACvEntB,GAnDd,SAASuzB,EAAyBvzB,GAC9B,GAAuB,iBAAZA,GAAoC,OAAZA,EAAkB,CAIjD,MAAMwzB,EAAa,IAAKxzB,GAUxB,OAAIA,EAAQyzB,SACRD,EAAWC,OAASzzB,EAAQyzB,QAEzBD,CACX,CACA,OAAOxzB,CACX,CA8BwBuzB,CAlJxB,SAASG,GAA0B1zB,EAASszB,GACxC,OAAKvE,GAAuC,iBAAZ/uB,GAAwBA,IAI3CA,EAAQoyB,QAEhBrD,GAAqBuE,EAGH,kBAAZtzB,EACA,CAAEoyB,QAASpyB,EAASszB,SAAS,GAEnCtzB,EAGkB,iBAAZA,IAA4C,IAApBA,EAAQszB,QAChC,IAAKtzB,EAASszB,SAAS,GAE3BtzB,EALI,CAAEszB,SAAS,GANXtzB,CAYf,CA8HiD0zB,CAA0B55B,UAAU,GAAIw5B,KAC3EG,GAASzzB,IAASyzB,OACxB,GAAIA,IAAQE,QAER,OAEJ,GAAId,GAEA,QAASl6B,GAAI,EAAGA,GAAIk6B,GAAgBh6B,OAAQF,KACxC,GAAIw0B,KAAc0F,GAAgBl6B,IAC9B,OAAI26B,GACON,EAAel6B,KAAKkB,GAAQmzB,GAAWnT,GAAUha,IAGjDgzB,EAAep5B,MAAMC,KAAMC,WAKlD,MAAMs4B,KAAWpyB,KAAqC,kBAAZA,IAA+BA,GAAQoyB,SAC3ExB,MAAO5wB,IAA8B,iBAAZA,KAAuBA,GAAQ4wB,KACxD3Y,GAAOpF,KAAKU,QAClB,IAAI8e,EAAmBnD,EAAqB/B,IACvCkF,IACD9C,EAAkBpC,GAAWqC,IAC7B6C,EAAmBnD,EAAqB/B,KAE5C,MAAMmF,EAAkBD,EAAiBD,GAAUtH,GAAWC,IAC9D,IAiBI3wB,EAjBAm4B,EAAgBv4B,GAAOs4B,GACvBH,GAAa,EACjB,GAAII,GAGA,GADAJ,GAAa,EACTX,GACA,QAAS74B,GAAI,EAAGA,GAAI45B,EAAc15B,OAAQF,KACtC,GAAI+5B,GAAQH,EAAc55B,IAAIqhB,IAE1B,YAMZuY,EAAgBv4B,GAAOs4B,GAAmB,GAG9C,MAAMsB,EAAkB55B,GAAOmB,YAAYjC,KACrC26B,GAAe1E,EAAcyE,GAC/BC,KACAz5B,EAASy5B,GAAa1G,KAErB/yB,IACDA,EACIw5B,EACIX,GACCzD,GAAoBA,GAAkBrC,IAAaA,KAOhEyE,GAAS5xB,QAAUA,GACf4wB,KAIAgB,GAAS5xB,QAAQ4wB,MAAO,GAE5BgB,GAAS53B,OAASA,GAClB43B,GAASQ,QAAUA,GACnBR,GAASzE,UAAYA,GACrByE,GAASO,WAAaA,EACtB,MAAM/gB,GAAOigB,GAAoBrC,OAAiC73B,EAE9Dia,KACAA,GAAKwgB,SAAWA,IAEhB6B,KAIA7B,GAAS5xB,QAAQyzB,YAASt8B,GAM9B,MAAM6kB,GAAO/D,GAAK6b,kBAAkB15B,EAAQ4f,GAAU5I,GAAM8hB,EAAkBC,GAC9E,GAAIM,GAAQ,CAER7B,GAAS5xB,QAAQyzB,OAASA,GAI1B,MAAMM,GAAUA,IAAM/X,GAAK/D,KAAKqE,WAAWN,IAC3CgX,EAAel6B,KAAK26B,GAAQ,QAASM,GAAS,CAAEnD,MAAM,IAKtD5U,GAAKwW,oBAAsB,IAAMiB,GAAOv3B,oBAAoB,QAAS63B,GACzE,CA+BA,OA5BAnC,GAAS53B,OAAS,KAEdoX,KACAA,GAAKwgB,SAAW,MAIhBhB,KACAgB,GAAS5xB,QAAQ4wB,MAAO,IAErB7B,GAA4C,kBAAjB/S,GAAKhc,UAGnCgc,GAAKhc,QAAUA,IAEnBgc,GAAKhiB,OAASA,GACdgiB,GAAKoW,QAAUA,GACfpW,GAAKmR,UAAYA,GACbkG,KAEArX,GAAK2U,iBAAmB3W,IAEvBkY,GAIDK,EAAcyB,QAAQhY,IAHtBuW,EAAcj1B,KAAK0e,IAKnB0V,EACO13B,QADX,CAGJ,CACJ,EACA+zB,SAAMgC,GAAsBgD,EAAgBlB,EAAwBvB,EAA2BlF,GAAgBC,GAAcqG,IACzHO,KACAlE,EAAMwC,GAA0BwC,EAAgBd,GAA4BzB,EA/MlD,SAAUxU,GACpC,OAAOiW,GAA2Bn5B,KAAK84B,GAAS53B,OAAQ43B,GAASzE,UAAWnR,EAAKW,OAAQiV,GAAS5xB,QACtG,EA6MsIqrB,GAAcqG,IAAc,IAElK3D,EAAMiC,GAAyB,WAC3B,MAAMh2B,EAASH,MAAQ6xB,EACvB,IAAIyB,EAAYrzB,UAAU,GACtBg2B,GAAgBA,EAAasD,oBAC7BjG,EAAY2C,EAAasD,kBAAkBjG,IAE/C,MAAMntB,EAAUlG,UAAU,GACpBs4B,IAAWpyB,IAAqC,kBAAZA,GAA+BA,EAAQoyB,SAC3EpY,EAAWlgB,UAAU,GAC3B,IAAKkgB,EACD,OAAO8X,EAA0Bl4B,MAAMC,KAAMC,WAEjD,GAAIw3B,KACCA,GAAgBQ,EAA2B9X,EAAUhgB,EAAQF,WAC9D,OAEJ,MAAMu4B,GAAmBnD,EAAqB/B,GAC9C,IAAImF,GACAD,KACAC,GAAkBD,GAAiBD,EAAUtH,GAAWC,KAE5D,MAAMwH,GAAgBD,IAAmBt4B,EAAOs4B,IAKhD,GAAIC,GACA,QAAS55B,GAAI,EAAGA,GAAI45B,GAAc15B,OAAQF,KAAK,CAC3C,MAAMs7B,GAAe1B,GAAc55B,IACnC,GAAI+5B,GAAQuB,GAAcja,GAAW,CAIjC,GAHAuY,GAAc7rB,OAAO/N,GAAG,GAExBs7B,GAAaxD,WAAY,EACI,IAAzB8B,GAAc15B,SAGdo7B,GAAaxB,YAAa,EAC1Bz4B,EAAOs4B,IAAmB,MAMrBF,GAAgC,iBAAdjF,GAAwB,CAE3CnzB,EADyBgxB,GAAqB,cAAgBmC,GACnC,IAC/B,CAQJ,OADA8G,GAAahc,KAAKqE,WAAW2X,IACzBvC,GACO13B,OAEX,CACJ,CACJ,CAQJ,OAAO83B,EAA0Bl4B,MAAMC,KAAMC,UACjD,EACAi0B,EAAMmC,GAA4B,WAC9B,MAAMl2B,EAASH,MAAQ6xB,EACvB,IAAIyB,EAAYrzB,UAAU,GACtBg2B,GAAgBA,EAAasD,oBAC7BjG,EAAY2C,EAAasD,kBAAkBjG,IAE/C,MAAMhZ,EAAY,GACZ4S,EAAQmN,EAAel6B,EAAQw1B,GAAoBA,GAAkBrC,GAAaA,GACxF,QAASx0B,EAAI,EAAGA,EAAIouB,EAAMluB,OAAQF,IAAK,CACnC,MAAMqjB,GAAO+K,EAAMpuB,GACnB,IAAIqhB,GAAWgC,GAAK2U,iBAAmB3U,GAAK2U,iBAAmB3U,GAAKlc,SACpEqU,EAAU7W,KAAK0c,GACnB,CACA,OAAO7F,CACX,EACA4Z,EAAMoC,GAAuC,WACzC,MAAMn2B,EAASH,MAAQ6xB,EACvB,IAAIyB,EAAYrzB,UAAU,GAC1B,GAAKqzB,EAiBA,CACG2C,GAAgBA,EAAasD,oBAC7BjG,EAAY2C,EAAasD,kBAAkBjG,IAE/C,MAAMkF,EAAmBnD,EAAqB/B,GAC9C,GAAIkF,EAAkB,CAClB,MAAMC,EAAkBD,EAAiBtH,IACnCoJ,EAAyB9B,EAAiBvH,IAC1C/D,GAAQ/sB,EAAOs4B,GACf8B,GAAep6B,EAAOm6B,GAC5B,GAAIpN,GAAO,CACP,MAAMsN,GAActN,GAAM/pB,QAC1B,QAASrE,GAAI,EAAGA,GAAI07B,GAAYx7B,OAAQF,KAAK,CACzC,MAAMqjB,GAAOqY,GAAY17B,IACzB,IAAIqhB,GAAWgC,GAAK2U,iBAAmB3U,GAAK2U,iBAAmB3U,GAAKlc,SACpEjG,KAAKm2B,GAAuBl3B,KAAKe,KAAMszB,EAAWnT,GAAUgC,GAAKhc,QACrE,CACJ,CACA,GAAIo0B,GAAc,CACd,MAAMC,GAAcD,GAAap3B,QACjC,QAASrE,GAAI,EAAGA,GAAI07B,GAAYx7B,OAAQF,KAAK,CACzC,MAAMqjB,GAAOqY,GAAY17B,IACzB,IAAIqhB,GAAWgC,GAAK2U,iBAAmB3U,GAAK2U,iBAAmB3U,GAAKlc,SACpEjG,KAAKm2B,GAAuBl3B,KAAKe,KAAMszB,EAAWnT,GAAUgC,GAAKhc,QACrE,CACJ,CACJ,CACJ,KA5CgB,CACZ,MAAMtF,EAAOX,OAAOW,KAAKV,GACzB,QAASrB,EAAI,EAAGA,EAAI+B,EAAK7B,OAAQF,IAAK,CAClC,MAAMiF,EAAOlD,EAAK/B,GACZ6tB,GAAQ4I,EAAuBkF,KAAK12B,GAC1C,IAAI22B,GAAU/N,IAASA,GAAM,GAKzB+N,IAAuB,mBAAZA,IACX16B,KAAKs2B,GAAqCr3B,KAAKe,KAAM06B,GAE7D,CAEA16B,KAAKs2B,GAAqCr3B,KAAKe,KAAM,iBACzD,CA6BA,GAAI63B,GACA,OAAO73B,IAEf,EAEAg0B,EAAsBE,EAAMgC,GAAqB8B,GACjDhE,EAAsBE,EAAMiC,GAAwB8B,GAChDE,IACAnE,EAAsBE,EAAMoC,GAAsC6B,IAElED,GACAlE,EAAsBE,EAAMmC,GAA2B6B,IAEpD,CACX,CACA,IAAI30B,GAAU,GACd,QAASzE,EAAI,EAAGA,EAAIk3B,EAAKh3B,OAAQF,IAC7ByE,GAAQzE,GAAKy4B,GAAwBvB,EAAKl3B,GAAIm3B,GAElD,OAAO1yB,EACX,CACA,SAAS82B,EAAel6B,EAAQmzB,GAC5B,IAAKA,EAAW,CACZ,MAAMqH,EAAa,GACnB,QAAS52B,KAAQ5D,EAAQ,CACrB,MAAMwsB,EAAQ4I,EAAuBkF,KAAK12B,GAC1C,IAAI22B,EAAU/N,GAASA,EAAM,GAC7B,GAAI+N,KAAapH,GAAaoH,IAAYpH,GAAY,CAClD,MAAMpG,EAAQ/sB,EAAO4D,GACrB,GAAImpB,EACA,QAASpuB,EAAI,EAAGA,EAAIouB,EAAMluB,OAAQF,IAC9B67B,EAAWl3B,KAAKypB,EAAMpuB,GAGlC,CACJ,CACA,OAAO67B,CACX,CACA,IAAIlC,EAAkBpD,EAAqB/B,GACtCmF,IACD/C,EAAkBpC,GAClBmF,EAAkBpD,EAAqB/B,IAE3C,MAAMsH,EAAoBz6B,EAAOs4B,EAAgBvH,KAC3C2J,EAAmB16B,EAAOs4B,EAAgBxH,KAChD,OAAK2J,EAIMC,EACDD,EAAkBltB,OAAOmtB,GACzBD,EAAkBz3B,QALjB03B,EAAmBA,EAAiB13B,QAAU,EAO7D,CACA,SAAS23B,GAAoB5hB,EAAQC,GACjC,MAAM4hB,EAAQ7hB,EAAO6hB,MACjBA,GAASA,EAAM35B,WACf+X,EAAI+G,YAAY6a,EAAM35B,UAAW,2BAA6B+e,GAAa,SAAUja,EAAMxE,GACvFwE,EAAKuvB,IAAgC,EAIrCtV,GAAYA,EAASpgB,MAAMmG,EAAMxE,EACrC,EAER,CAkBA,MAAMs5B,GAAatJ,GAAW,YAC9B,SAASuJ,GAAW99B,EAAQ+9B,EAASC,EAAYC,GAC7C,IAAI5G,EAAY,KACZ6G,EAAc,KAElBF,GAAcC,EACd,MAAME,EAAkB,CAAC,EACzB,SAASlZ,EAAaD,GAClB,MAAM5K,EAAO4K,EAAK5K,KAClBA,EAAK7V,KAAK,GAAK,WACX,OAAOygB,EAAKW,OAAO/iB,MAAMC,KAAMC,UACnC,EACA,MAAMs7B,EAAa/G,EAAUz0B,MAAM5C,EAAQoa,EAAK7V,MAIhD,OAAIuzB,EAASsG,GACThkB,EAAK0R,SAAWsS,GAGhBhkB,EAAKikB,OAASD,EAEdhkB,EAAKkkB,cAAgBzG,GAAWuG,EAAWG,UAExCvZ,CACX,CACA,SAASwZ,EAAUxZ,GACf,MAAQqZ,SAAQvS,YAAa9G,EAAK5K,KAClC,OAAO8jB,EAAYp8B,KAAK9B,EAAQq+B,GAAUvS,EAC9C,CACAuL,EAAYtU,EAAY/iB,EA1BxB+9B,GAAWE,EA0B+Bjb,GAAa,SAAUja,EAAMxE,GACnE,GAAIszB,GAAWtzB,EAAK,IAAK,CACrB,MAAMyE,GAAU,CACZs1B,eAAe,EACf1W,WAA2B,aAAfqW,EACZvW,MAAsB,YAAfuW,GAA2C,aAAfA,EAA4B15B,EAAK,IAAM,OAAIpE,EAC9EoE,KAAMA,GAEJuE,GAAWvE,EAAK,GACtBA,EAAK,GAAK,WACN,IACI,OAAOuE,GAASlG,MAAMC,KAAMC,UAChC,SASI,MAAQu7B,UAAQvS,YAAUlE,cAAY0W,kBAAkBt1B,IACnD4e,KAAe0W,KACZxS,UAGOqS,EAAgBrS,IAElBuS,KAGLA,GAAOR,IAAc,MAGjC,CACJ,EACA,MAAM7Y,GAAOmP,GAAiC4J,EAASx5B,EAAK,GAAIyE,GAASic,EAAcuZ,GACvF,IAAKxZ,GACD,OAAOA,GAGX,MAAQ8G,YAAUuS,UAAQC,iBAAe1W,cAAe5C,GAAK5K,KAC7D,GAAI0R,GAGAqS,EAAgBrS,IAAY9G,WAEvBqZ,KAGLA,GAAOR,IAAc7Y,GACjBsZ,KAAkB1W,GAAY,CAC9B,MAAM6W,EAAkBJ,GAAOE,QAC/BF,GAAOE,QAAU,WACb,MAAQtd,QAAMjM,UAAUgQ,GACxB,MAAc,iBAAVhQ,IACAgQ,GAAK0Z,OAAS,YACdzd,GAAK0d,iBAAiB3Z,GAAM,IAEb,YAAVhQ,KACLgQ,GAAK0Z,OAAS,cAEXD,EAAgB38B,KAAKe,KAChC,CACJ,CAEJ,OAAOw7B,IAAUvS,IAAY9G,EACjC,CAGI,OAAOhC,EAASpgB,MAAM5C,EAAQuE,EAEtC,GACA25B,EAAcnb,EAAY/iB,EAAQg+B,EAAahb,GAAa,SAAUja,EAAMxE,GACxE,MAAMuQ,GAAKvQ,EAAK,GAChB,IAAIygB,GACA8S,EAAShjB,KAETkQ,GAAOmZ,EAAgBrpB,WAChBqpB,EAAgBrpB,MAIvBkQ,GAAOlQ,KAAK+oB,IACR7Y,GACAlQ,GAAG+oB,IAAc,KAGjB7Y,GAAOlQ,IAGXkQ,IAAMjgB,KACFigB,GAAK4Z,UAEL5Z,GAAK/D,KAAKqE,WAAWN,IAKzBhC,EAASpgB,MAAM5C,EAAQuE,EAE/B,EACJ,CAqDA,SAASs6B,GAAiB77B,EAAQuzB,EAAcuI,GAC5C,IAAKA,GAAgD,IAA5BA,EAAiBj9B,OACtC,OAAO00B,EAEX,MAAMwI,EAAMD,EAAiB7tB,OAAQ+tB,GAAOA,EAAGh8B,SAAWA,GAC1D,IAAK+7B,GAAsB,IAAfA,EAAIl9B,OACZ,OAAO00B,EAEX,MAAM0I,EAAyBF,EAAI,GAAGD,iBACtC,OAAOvI,EAAatlB,OAAQiuB,IAA8C,IAAvCD,EAAuBv5B,QAAQw5B,GACtE,CACA,SAASC,GAAwBn8B,EAAQuzB,EAAcuI,EAAkB76B,GAGrE,IAAKjB,EACD,OAGJszB,EAAkBtzB,EADS67B,GAAiB77B,EAAQuzB,EAAcuI,GACpB76B,EAClD,CAKA,SAASm7B,GAAgBp8B,GACrB,OAAOD,OAAOs8B,oBAAoBr8B,GAC7BiO,OAAQ/O,GAASA,EAAKo9B,WAAW,OAASp9B,EAAKL,OAAS,GACxDwuB,IAAKnuB,GAASA,EAAKq9B,UAAU,GACtC,CACA,SAASC,GAAwBxjB,EAAK0Y,GAIlC,GAHIzX,KAAWkY,IAGXtZ,KAAKG,EAAIQ,OAAO,gBAEhB,OAEJ,MAAMsiB,EAAmBpK,EAAQ+K,4BAEjC,IAAIC,EAAe,GACnB,GAAIzK,GAAW,CACX,MAAMR,EAAiBz0B,OACvB0/B,EAAeA,EAAanvB,OAAO,CAC/B,WACA,aACA,UACA,cACA,kBACA,mBACA,sBACA,mBACA,oBACA,qBACA,WAEJ,MAAMovB,EA38Bd,SAASC,KACL,IACI,MAAMhI,EAAKnD,GAAe/sB,UAAUC,UACpC,IAA4B,IAAxBiwB,EAAGlyB,QAAQ,WAA8C,IAA3BkyB,EAAGlyB,QAAQ,YACzC,OAAO,CAEf,OACgB,CAChB,OAAO,CACX,CAk8BsCk6B,GACxB,CAAC,CAAE58B,OAAQyxB,EAAgBqK,iBAAkB,CAAC,WAC9C,GAGNK,GAAwB1K,EAAgB2K,GAAgB3K,GAAiBqK,GAAmBA,EAAiBvuB,OAAOovB,GAA2CrM,GAAqBmB,GACxL,CACAiL,EAAeA,EAAanvB,OAAO,CAC/B,iBACA,4BACA,WACA,aACA,mBACA,cACA,iBACA,YACA,cAEJ,QAAS5O,EAAI,EAAGA,EAAI+9B,EAAa79B,OAAQF,IAAK,CAC1C,MAAMqB,EAAS0xB,EAAQgL,EAAa/9B,IACpCqB,GACIA,EAAOiB,WACPk7B,GAAwBn8B,EAAOiB,UAAWm7B,GAAgBp8B,EAAOiB,WAAY66B,EACrF,CACJ,CAqQA,SAASe,GAAahkB,GAClBA,EAAKC,aAAa,mBAAoB,CAACC,EAAQF,EAAMG,KACjD,MAAMmX,EAAiCpwB,OAAOqwB,yBACxCC,EAAuBtwB,OAAOic,eAQpC,MAAMvC,EAAaT,EAAIQ,OACjBmN,EAAyB,GACzBmW,GAAkH,IAAtE/jB,EAAOU,EAAW,gDAC9DsjB,EAAgBtjB,EAAW,WAC3BujB,EAAavjB,EAAW,QACxB4Q,GAAgB,oBACtBrR,EAAIikB,iBAAoB59B,IACpB,GAAI2Z,EAAIkkB,oBAAqB,CACzB,MAAMC,EAAY99B,GAAKA,EAAE89B,UACrBA,EACAz9B,QAAQ+d,MAAM,+BAAgC0f,aAAqB79B,MAAQ69B,EAAUh+B,QAAUg+B,EAAW,UAAW99B,EAAE4e,KAAK/e,KAAM,UAAWG,EAAE2iB,MAAQ3iB,EAAE2iB,KAAK5hB,OAAQ,WAAY+8B,EAAWA,aAAqB79B,MAAQ69B,EAAU59B,WAAQpC,GAG5OuC,QAAQ+d,MAAMpe,EAEtB,GAEJ2Z,EAAIokB,mBAAqB,KACrB,KAAOzW,EAAuB9nB,QAAQ,CAClC,MAAMw+B,EAAuB1W,EAAuBZ,QACpD,IACIsX,EAAqBpf,KAAKyR,WAAW,KACjC,MAAI2N,EAAqBC,cACfD,EAAqBF,UAEzBE,GAEd,OACO5f,GACH8f,GAAyB9f,EAC7B,CACJ,GAEJ,MAAM+f,GAA6C/jB,EAAW,oCAC9D,SAAS8jB,GAAyBl+B,GAC9B2Z,EAAIikB,iBAAiB59B,GACrB,IACI,MAAMwC,EAAUgX,EAAK2kB,IACE,mBAAZ37B,GACPA,EAAQ/C,KAAKe,KAAMR,EAE3B,OACc,CAClB,CACA,SAASo+B,GAAWntB,GAChB,OAAOA,GAASA,EAAM0f,IAC1B,CACA,SAAS0N,GAAkBptB,GACvB,OAAOA,CACX,CACA,SAASqtB,GAAiBR,GACtB,OAAOS,GAAiBC,OAAOV,EACnC,CACA,MAAMrN,EAAcrW,EAAW,SACzBqkB,EAAcrkB,EAAW,SACzBskB,GAAgBtkB,EAAW,WAC3BukB,GAA2BvkB,EAAW,sBACtCwkB,GAA2BxkB,EAAW,sBACtCrZ,GAAS,eACT89B,EAAa,KACbC,IAAW,EACXC,IAAW,EACXC,EAAoB,EAC1B,SAASC,EAAaC,EAASvsB,GAC3B,OAAQrI,IACJ,IACI60B,GAAeD,EAASvsB,EAAOrI,EACnC,OACOmhB,GACH0T,GAAeD,GAAS,EAAOzT,EACnC,EAGR,CACA,MAAM8L,EAAO,WACT,IAAI6H,GAAY,EAChB,OAAO,SAAiBC,GACpB,OAAO,WACCD,IAGJA,GAAY,EACZC,EAAgB9+B,MAAM,KAAME,WAChC,CACJ,CACJ,EACM6+B,GAAa,+BACbC,GAA4BnlB,EAAW,oBAE7C,SAAS+kB,GAAeD,EAASvsB,EAAO1B,GACpC,MAAMuuB,EAAcjI,IACpB,GAAI2H,IAAYjuB,EACZ,MAAM,IAAIrQ,UAAU0+B,IAExB,GAAIJ,EAAQzO,KAAiBoO,EAAY,CAErC,IAAIlO,EAAO,KACX,KACyB,iBAAV1f,GAAuC,mBAAVA,KACpC0f,EAAO1f,GAASA,EAAM0f,KAE9B,OACOlF,GACH+T,SAAY,KACRL,GAAeD,GAAS,EAAOzT,EAAG,EADtC+T,GAGON,CACX,CAEA,GAAIvsB,IAAUosB,IACV9tB,aAAiBstB,IACjBttB,EAAMvR,eAAe+wB,IACrBxf,EAAMvR,eAAe++B,IACrBxtB,EAAMwf,KAAiBoO,EACvBY,EAAqBxuB,GACrBkuB,GAAeD,EAASjuB,EAAMwf,GAAcxf,EAAMwtB,SAAY,GAEzD9rB,IAAUosB,IAA4B,mBAATpO,EAClC,IACIA,EAAKlxB,KAAKwR,EAAOuuB,EAAYP,EAAaC,EAASvsB,IAAS6sB,EAAYP,EAAaC,GAAS,IAClG,OACOzT,GACH+T,EAAY,KACRL,GAAeD,GAAS,EAAOzT,EAAG,EADtC+T,EAGJ,KAEC,CACDN,EAAQzO,GAAe9d,EACvB,MAAM+sB,EAAQR,EAAQT,GAatB,GAZAS,EAAQT,GAAextB,EACnBiuB,EAAQR,MAAmBA,IAEvB/rB,IAAUmsB,KAGVI,EAAQzO,GAAeyO,EAAQN,IAC/BM,EAAQT,GAAeS,EAAQP,KAKnChsB,IAAUosB,IAAY9tB,aAAiBhR,MAAO,CAE9C,MAAM6rB,EAAQtS,EAAKsF,aACftF,EAAKsF,YAAY/G,MACjByB,EAAKsF,YAAY/G,KAAKiT,IACtBc,GAEAkF,EAAqB/f,EAAOsuB,GAA2B,CACnDziB,cAAc,EACdC,YAAY,EACZuC,UAAU,EACVrO,MAAO6a,GAGnB,CACA,QAASxsB,EAAI,EAAGA,EAAIogC,EAAMlgC,QACtBmgC,EAAwBT,EAASQ,EAAMpgC,KAAMogC,EAAMpgC,KAAMogC,EAAMpgC,KAAMogC,EAAMpgC,MAE/E,GAAoB,GAAhBogC,EAAMlgC,QAAemT,GAASosB,GAAU,CACxCG,EAAQzO,GAAeuO,EACvB,IAAIhB,EAAuB/sB,EAC3B,IAII,MAAM,IAAIhR,MAAM,0BA9KpC,SAAS2/B,EAAuBxgC,GAC5B,GAAIA,GAAOA,EAAIgwB,WAAa1uB,OAAOkB,UAAUwtB,SAEzC,OADkBhwB,EAAI0C,aAAe1C,EAAI0C,YAAYjC,MACrB,IAAM,KAAOggC,KAAKC,UAAU1gC,GAEhE,OAAOA,EAAMA,EAAIgwB,WAAa1uB,OAAOkB,UAAUwtB,SAAS3vB,KAAKL,EACjE,CAyKwBwgC,CAAuB3uB,IACtBA,GAASA,EAAM/Q,MAAQ,KAAO+Q,EAAM/Q,MAAQ,IACrD,OACOurB,IACHuS,EAAuBvS,EAC3B,CACIgS,IAGAO,EAAqBC,eAAgB,GAEzCD,EAAqBF,UAAY7sB,EACjC+sB,EAAqBkB,QAAUA,EAC/BlB,EAAqBpf,KAAOpF,EAAKU,QACjC8jB,EAAqBrb,KAAOnJ,EAAKsF,YACjCwI,EAAuBrjB,KAAK+5B,GAC5BrkB,EAAImE,mBACR,CACJ,CACJ,CAEA,OAAOohB,CACX,CACA,MAAMa,EAA4B3lB,EAAW,2BAC7C,SAASqlB,EAAqBP,GAC1B,GAAIA,EAAQzO,KAAiBuO,EAAmB,CAM5C,IACI,MAAMx8B,EAAUgX,EAAKumB,GACjBv9B,GAA8B,mBAAZA,GAClBA,EAAQ/C,KAAKe,KAAM,CAAEs9B,UAAWoB,EAAQT,GAAcS,QAASA,GAEvE,OACc,CACdA,EAAQzO,GAAesO,GACvB,QAASz/B,EAAI,EAAGA,EAAIgoB,EAAuB9nB,OAAQF,IAC3C4/B,IAAY5X,EAAuBhoB,GAAG4/B,SACtC5X,EAAuBja,OAAO/N,EAAG,EAG7C,CACJ,CACA,SAASqgC,EAAwBT,EAAStgB,EAAMohB,EAAcC,EAAaC,GACvET,EAAqBP,GACrB,MAAMiB,EAAejB,EAAQzO,GACvB9P,EAAWwf,EACY,mBAAhBF,EACHA,EACA5B,GACkB,mBAAf6B,EACHA,EACA5B,GACV1f,EAAKd,kBAAkB/c,GAAQ,KAC3B,IACI,MAAMq/B,GAAqBlB,EAAQT,GAC7B4B,KAAqBL,GAAgBtB,KAAkBsB,EAAatB,IACtE2B,KAEAL,EAAarB,IAA4ByB,GACzCJ,EAAapB,IAA4BuB,GAG7C,MAAMlvB,GAAQ2N,EAAKjD,IAAIgF,OAAU7iB,EAAWuiC,IAAoB1f,IAAa2d,IAAoB3d,IAAa0d,GACxG,GACA,CAAC+B,KACPjB,GAAea,GAAc,EAAM/uB,GACvC,OACOmN,IAEH+gB,GAAea,GAAc,EAAO5hB,GACxC,GACD4hB,EACP,CACA,MACMM,GAAO,WAAc,EACrBC,GAAiB7mB,EAAO6mB,eAC9B,MAAMhC,GACF,eAAOnP,GACH,MAL6B,+CAMjC,CACA,cAAOoR,CAAQvvB,GACX,OAAIA,aAAiBstB,GACVttB,EAEJkuB,GAAe,IAAI3+B,KAAK,MAAOs+B,GAAU7tB,EACpD,CACA,aAAOutB,CAAOpgB,GACV,OAAO+gB,GAAe,IAAI3+B,KAAK,MAAOu+B,GAAU3gB,EACpD,CACA,oBAAOqiB,GACH,MAAMzlB,EAAS,CAAC,EAChBA,SAAOkkB,QAAU,IAAIX,GAAiB,CAAClU,EAAKqW,KACxC1lB,EAAOwlB,QAAUnW,EACjBrP,EAAOwjB,OAASkC,IAEb1lB,CACX,CACA,UAAO2lB,CAAI38B,GACP,IAAKA,GAA6C,mBAA5BA,EAAO48B,OAAOvhC,UAChC,OAAOmjB,QAAQgc,OAAO,IAAI+B,GAAe,GAAI,+BAEjD,MAAMM,EAAW,GACjB,IAAI7sB,EAAQ,EACZ,IACI,QAAS1J,KAAKtG,EACVgQ,IACA6sB,EAAS58B,KAAKs6B,GAAiBiC,QAAQl2B,GAE/C,OAEI,OAAOkY,QAAQgc,OAAO,IAAI+B,GAAe,GAAI,8BACjD,CACA,GAAc,IAAVvsB,EACA,OAAOwO,QAAQgc,OAAO,IAAI+B,GAAe,GAAI,+BAEjD,IAAIO,GAAW,EACf,MAAMpJ,EAAS,GACf,OAAO,IAAI6G,GAAiB,CAACiC,EAAShC,MAClC,QAASl/B,GAAI,EAAGA,GAAIuhC,EAASrhC,OAAQF,KACjCuhC,EAASvhC,IAAGqxB,KAAMrmB,KACVw2B,IAGJA,GAAW,EACXN,EAAQl2B,IAAC,EACTmhB,KACAiM,EAAOzzB,KAAKwnB,IACZzX,IACc,IAAVA,IACA8sB,GAAW,EACXtC,GAAO,IAAI+B,GAAe7I,EAAQ,+BAA6B,EAEtE,EAGb,CACA,WAAOqJ,CAAK/8B,GACR,IAAIw8B,EACAhC,EACAU,EAAU,IAAI1+B,KAAK,CAAC6pB,GAAKqW,MACzBF,EAAUnW,GACVmU,EAASkC,KAEb,SAASM,EAAU/vB,IACfuvB,EAAQvvB,GACZ,CACA,SAASgwB,EAAS7iB,IACdogB,EAAOpgB,GACX,CACA,QAASnN,MAASjN,EACTo6B,GAAWntB,MACZA,GAAQzQ,KAAKggC,QAAQvvB,KAEzBA,GAAM0f,KAAKqQ,EAAWC,GAE1B,OAAO/B,CACX,CACA,UAAOpxB,CAAI9J,GACP,OAAOu6B,GAAiB2C,gBAAgBl9B,EAC5C,CACA,iBAAOm9B,CAAWn9B,GAEd,OADUxD,MAAQA,KAAKoB,qBAAqB28B,GAAmB/9B,KAAO+9B,IAC7D2C,gBAAgBl9B,EAAQ,CAC7Bo9B,aAAenwB,KAAaowB,OAAQ,YAAapwB,UACjDqwB,cAAgB7V,KAAW4V,OAAQ,WAAYE,OAAQ9V,KAE/D,CACA,sBAAOyV,CAAgBl9B,EAAQyC,GAC3B,IAAI+5B,EACAhC,EACAU,EAAU,IAAI1+B,KAAK,CAAC6pB,GAAKqW,MACzBF,EAAUnW,GACVmU,EAASkC,KAGTc,EAAkB,EAClBC,GAAa,EACjB,MAAMC,GAAiB,GACvB,QAASzwB,MAASjN,EAAQ,CACjBo6B,GAAWntB,MACZA,GAAQzQ,KAAKggC,QAAQvvB,KAEzB,MAAM0wB,GAAgBF,GACtB,IACIxwB,GAAM0f,KAAM1f,KACRywB,GAAeC,IAAiBl7B,EAAWA,EAAS26B,aAAanwB,IAASA,GAC1EuwB,IACwB,IAApBA,GACAhB,EAAQkB,GAAc,EAE1BjW,KACKhlB,GAIDi7B,GAAeC,IAAiBl7B,EAAS66B,cAAc7V,IACvD+V,IACwB,IAApBA,GACAhB,EAAQkB,KANZlD,EAAO/S,GAAG,EAUtB,OACOmW,IACHpD,EAAOoD,GACX,CACAJ,IACAC,IACJ,CAEAD,UAAmB,EACK,IAApBA,GACAhB,EAAQkB,IAELxC,CACX,CACAp9B,YAAY+/B,GACR,MAAM3C,EAAU1+B,KAChB,KAAM0+B,aAAmBX,IACrB,MAAM,IAAIt+B,MAAM,kCAEpBi/B,EAAQzO,GAAeoO,EACvBK,EAAQT,GAAe,GACvB,IACI,MAAMe,EAAcjI,IACpBsK,GACIA,EAASrC,EAAYP,EAAaC,EAASJ,KAAYU,EAAYP,EAAaC,EAASH,KACjG,OACO3gB,GACH+gB,GAAeD,GAAS,EAAO9gB,EACnC,CACJ,CACA,IAAKwiB,OAAOkB,eACR,MAAO,SACX,CACA,IAAKlB,OAAOmB,WACR,OAAOxD,EACX,CACA5N,KAAKsP,EAAaC,GASd,IAAI8B,EAAIxhC,KAAKsB,cAAc8+B,OAAOmB,WAC7BC,GAAkB,mBAANA,KACbA,EAAIxhC,KAAKsB,aAAey8B,IAE5B,MAAMyB,EAAe,IAAIgC,EAAE1B,IACrB1hB,EAAOpF,EAAKU,QAClB,OAAI1Z,KAAKiwB,IAAgBoO,EACrBr+B,KAAKi+B,GAAax6B,KAAK2a,EAAMohB,EAAcC,EAAaC,GAGxDP,EAAwBn/B,KAAMoe,EAAMohB,EAAcC,EAAaC,GAE5DF,CACX,CACAiC,MAAM/B,GACF,OAAO1/B,KAAKmwB,KAAK,KAAMuP,EAC3B,CACAgC,QAAQC,GAEJ,IAAIH,EAAIxhC,KAAKsB,cAAc8+B,OAAOmB,WAC7BC,GAAkB,mBAANA,KACbA,EAAIzD,IAER,MAAMyB,EAAe,IAAIgC,EAAE1B,IAC3BN,EAAatB,IAAiBA,GAC9B,MAAM9f,EAAOpF,EAAKU,QAClB,OAAI1Z,KAAKiwB,IAAgBoO,EACrBr+B,KAAKi+B,GAAax6B,KAAK2a,EAAMohB,EAAcmC,EAAWA,GAGtDxC,EAAwBn/B,KAAMoe,EAAMohB,EAAcmC,EAAWA,GAE1DnC,CACX,EAIJzB,GAAiBiC,QAAajC,GAAiBiC,QAC/CjC,GAAiBC,OAAYD,GAAiBC,OAC9CD,GAAiBwC,KAAUxC,GAAiBwC,KAC5CxC,GAAiBzwB,IAASywB,GAAiBzwB,IAC3C,MAAMs0B,GAAiB1oB,EAAOgkB,GAAiBhkB,EAAO8I,QACtD9I,EAAO8I,QAAa+b,GACpB,MAAM8D,GAAoBjoB,EAAW,eACrC,SAASkoB,GAAUC,GACf,MAAM7N,EAAQ6N,EAAK3gC,UACb2C,EAAOusB,EAA+B4D,EAAO,QACnD,GAAInwB,KAA2B,IAAlBA,EAAK+a,WAAuB/a,EAAKuY,cAG1C,OAEJ,MAAM0lB,EAAe9N,EAAM/D,KAE3B+D,EAAMiJ,GAAc6E,EACpBD,EAAK3gC,UAAU+uB,KAAO,SAAUqQ,EAAWC,GAIvC,OAHgB,IAAI1C,GAAiB,CAACiC,GAAShC,MAC3CgE,EAAa/iC,KAAKe,KAAMggC,GAAShC,GAAM,GAE5B7N,KAAKqQ,EAAWC,EACnC,EACAsB,EAAKF,KAAqB,CAC9B,CAeA,OAdA1oB,EAAI2oB,UAAYA,GAcZF,KACAE,GAAUF,IACV1hB,EAAYhH,EAAQ,QAAUiH,GAflC,SAAS8hB,GAAQ/jC,GACb,OAAO,SAAUgI,EAAMxE,GACnB,IAAIwgC,EAAgBhkC,EAAG6B,MAAMmG,EAAMxE,GACnC,GAAIwgC,aAAyBnE,GACzB,OAAOmE,EAEX,IAAIC,EAAOD,EAAc5gC,YACzB,OAAK6gC,EAAKN,KACNC,GAAUK,GAEPD,CACX,CACJ,CAG+CD,CAAQ9hB,KAGvD6B,QAAQhJ,EAAKY,WAAW,0BAA4BkN,EAC7CiX,IAEf,CAmDA,SAASqE,GAAejpB,EAAKhZ,EAAQkiC,EAAYjjC,EAAQkjC,GACrD,MAAM3oB,EAASX,KAAKY,WAAWxa,GAC/B,GAAIe,EAAOwZ,GACP,OAEJ,MAAM4oB,EAAkBpiC,EAAOwZ,GAAUxZ,EAAOf,GAChDe,EAAOf,GAAU,SAAUC,EAAMmjC,EAAMr8B,GACnC,OAAIq8B,GAAQA,EAAKphC,WACbkhC,EAAUvjC,QAAQ,SAAUkH,GACxB,MAAM1F,EAAS,GAAG8hC,KAAcjjC,MAAa6G,EACvC7E,GAAYohC,EAAKphC,UASvB,IACI,GAAIA,GAAUlC,eAAe+G,GAAW,CACpC,MAAMw8B,GAAatpB,EAAImX,+BAA+BlvB,GAAW6E,GAC7Dw8B,IAAcA,GAAWhyB,OACzBgyB,GAAWhyB,MAAQ0I,EAAIiY,oBAAoBqR,GAAWhyB,MAAOlQ,GAC7D4Y,EAAIupB,kBAAkBF,EAAKphC,UAAW6E,EAAUw8B,KAE3CrhC,GAAU6E,KACf7E,GAAU6E,GAAYkT,EAAIiY,oBAAoBhwB,GAAU6E,GAAW1F,GAE3E,MACSa,GAAU6E,KACf7E,GAAU6E,GAAYkT,EAAIiY,oBAAoBhwB,GAAU6E,GAAW1F,GAE3E,OAGI,CAER,GAEGgiC,EAAetjC,KAAKkB,EAAQd,EAAMmjC,EAAMr8B,EACnD,EACAgT,EAAI6a,sBAAsB7zB,EAAOf,GAASmjC,EAC9C,CA4DA,MAAMI,GArxEN,SAASC,KAUL,MAAM1pB,EAAS0H,WACT+W,GAAmE,IAAlDze,EAAOU,GAAW,4BACzC,GAAIV,EAAOF,OAAY2e,GAAuD,mBAA9Bze,EAAOF,KAAQY,YAC3D,MAAM,IAAIna,MAAM,wBAGpByZ,SAAOF,OA/nBX,SAAS6pB,KACL,MAAMC,EAAc5pB,GAAO4pB,YAC3B,SAASC,EAAK1jC,IACVyjC,GAAeA,EAAYC,MAAWD,EAAYC,KAAQ1jC,GAC9D,CACA,SAAS2jC,EAAmB3jC,GAAM4jC,GAC9BH,GAAeA,EAAYI,SAAcJ,EAAYI,QAAW7jC,GAAM4jC,EAC1E,CACAF,EAAK,QACL,MAAMI,SAEOnjC,KAAK4Z,WAAaA,EAAY,CACvC,wBAAOwpB,GACH,GAAIlqB,GAAO8I,UAAeqhB,GAAQtF,iBAC9B,MAAM,IAAIt+B,MAAM,gSAMxB,CACA,eAAW6jC,GACP,IAAIllB,EAAO+kB,EAASzpB,QACpB,KAAO0E,EAAK5b,QACR4b,EAAOA,EAAK5b,OAEhB,OAAO4b,CACX,CACA,kBAAW1E,GACP,OAAO6pB,EAAkBnlB,IAC7B,CACA,sBAAWE,GACP,OAAOklB,CACX,CAEA,mBAAOvqB,CAAa5Z,EAAMnB,EAAIulC,GAAkB,GAC5C,GAAIJ,GAAQnkC,eAAeG,GAAO,CAI9B,MAAMs4B,GAAmE,IAAlDze,GAAOU,GAAW,4BACzC,IAAK6pB,GAAmB9L,EACpB,MAAMl4B,MAAM,yBAA2BJ,EAE/C,UACU6Z,GAAO,kBAAoB7Z,GAAO,CACxC,MAAMqkC,EAAW,QAAUrkC,EAC3B0jC,EAAKW,GACLL,GAAQhkC,GAAQnB,EAAGgb,GAAQiqB,EAAUQ,GACrCX,EAAmBU,EAAUA,EACjC,CACJ,CACA,UAAIlhC,GACA,OAAOxC,KAAK4jC,OAChB,CACA,QAAIvkC,GACA,OAAOW,KAAK6jC,KAChB,CACAviC,YAAYkB,EAAQ4nB,GAChBpqB,KAAK4jC,QAAUphC,EACfxC,KAAK6jC,MAAQzZ,EAAWA,EAAS/qB,MAAQ,UAAY,SACrDW,KAAK8jC,YAAe1Z,GAAYA,EAASnpB,YAAe,CAAC,EACzDjB,KAAK+jC,cAAgB,IAAIC,EAAchkC,KAAMA,KAAK4jC,SAAW5jC,KAAK4jC,QAAQG,cAAe3Z,EAC7F,CACA1X,IAAIrP,GACA,MAAM+a,EAAOpe,KAAK0vB,YAAYrsB,GAC9B,GAAI+a,EACA,OAAOA,EAAK0lB,YAAYzgC,EAChC,CACAqsB,YAAYrsB,GACR,IAAIqW,EAAU1Z,KACd,KAAO0Z,GAAS,CACZ,GAAIA,EAAQoqB,YAAY5kC,eAAemE,GACnC,OAAOqW,EAEXA,EAAUA,EAAQkqB,OACtB,CACA,OAAO,IACX,CACA1oB,KAAKkP,GACD,IAAKA,EACD,MAAM,IAAI3qB,MAAM,sBACpB,OAAOO,KAAK+jC,cAAc7oB,KAAKlb,KAAMoqB,EACzC,CACAiH,KAAKprB,EAAU1F,GACX,GAAwB,mBAAb0F,EACP,MAAM,IAAIxG,MAAM,2BAA6BwG,GAEjD,MAAMg+B,EAAYjkC,KAAK+jC,cAAcnW,UAAU5tB,KAAMiG,EAAU1F,GACzD6d,EAAOpe,KACb,OAAO,WACH,OAAOoe,EAAKyR,WAAWoU,EAAWjkC,KAAMC,UAAWM,EACvD,CACJ,CACA4a,IAAIlV,EAAUyW,EAAW4F,EAAW/hB,GAChCgjC,EAAoB,CAAE/gC,OAAQ+gC,EAAmBnlB,KAAMpe,MACvD,IACI,OAAOA,KAAK+jC,cAAcjhB,OAAO9iB,KAAMiG,EAAUyW,EAAW4F,EAAW/hB,EAC3E,SAEIgjC,EAAoBA,EAAkB/gC,MAC1C,CACJ,CACAqtB,WAAW5pB,EAAUyW,EAAY,KAAM4F,EAAW/hB,GAC9CgjC,EAAoB,CAAE/gC,OAAQ+gC,EAAmBnlB,KAAMpe,MACvD,IACI,IACI,OAAOA,KAAK+jC,cAAcjhB,OAAO9iB,KAAMiG,EAAUyW,EAAW4F,EAAW/hB,EAC3E,OACOqd,IACH,GAAI5d,KAAK+jC,cAAc/gB,YAAYhjB,KAAM4d,IACrC,MAAMA,EAEd,CACJ,SAEI2lB,EAAoBA,EAAkB/gC,MAC1C,CACJ,CACA0hC,QAAQ/hB,EAAMzF,EAAW4F,GACrB,GAAIH,EAAK/D,MAAQpe,KACb,MAAM,IAAIP,MAAM,+DACX0iB,EAAK/D,MAAQ+lB,IAAS9kC,KACvB,gBACAW,KAAKX,KACL,KAER,MAAM+kC,EAAWjiB,GAITjgB,QAAMqV,MAAQwN,eAAa,EAAO0W,kBAAgB,GAAU,CAAC,GAAMtZ,EAC3E,GAAIA,EAAKhQ,QAAUkyB,KAAiBniC,KAASoiC,IAAapiC,KAASohB,GAC/D,OAEJ,MAAMihB,GAAepiB,EAAKhQ,OAASqyB,GACnCD,IAAgBH,EAASK,cAAcD,GAASE,GAChD,MAAMC,GAAenB,EACrBA,EAAeY,EACfb,EAAoB,CAAE/gC,OAAQ+gC,EAAmBnlB,KAAMpe,MACvD,IACQkC,IAAQohB,GAAanB,EAAK5K,OAASwN,KAAe0W,KAClDtZ,EAAK4Z,cAAWz+B,GAEpB,IACI,OAAO0C,KAAK+jC,cAAcxhB,WAAWviB,KAAMokC,EAAU1nB,EAAW4F,EACpE,OACO1E,IACH,GAAI5d,KAAK+jC,cAAc/gB,YAAYhjB,KAAM4d,IACrC,MAAMA,EAEd,CACJ,SAII,MAAMzL,GAAQgQ,EAAKhQ,MACnB,GAAIA,KAAUkyB,IAAgBlyB,KAAUyyB,GACpC,GAAI1iC,IAAQoiC,IAAavf,IAAe0W,IAAiBtpB,KAAU0yB,EAC/DN,IAAgBH,EAASK,cAAcC,EAAWF,GAASK,OAE1D,CACD,MAAMC,GAAgBV,EAASW,eAC/B/kC,KAAK87B,iBAAiBsI,GAAU,GAChCG,IAAgBH,EAASK,cAAcJ,GAAcG,GAASH,IAC1D5I,KACA2I,EAASW,eAAiBD,GAElC,CAEJvB,EAAoBA,EAAkB/gC,OACtCghC,EAAemB,EACnB,CACJ,CACAviB,aAAaD,GACT,GAAIA,EAAK/D,MAAQ+D,EAAK/D,OAASpe,KAAM,CAGjC,IAAIglC,EAAUhlC,KACd,KAAOglC,GAAS,CACZ,GAAIA,IAAY7iB,EAAK/D,KACjB,MAAM3e,MAAM,8BAA8BO,KAAKX,kDAAkD8iB,EAAK/D,KAAK/e,QAE/G2lC,EAAUA,EAAQxiC,MACtB,CACJ,CACA2f,EAAKsiB,cAAcI,EAAYR,IAC/B,MAAMS,EAAgB,GACtB3iB,EAAK4iB,eAAiBD,EACtB3iB,EAAK8iB,MAAQjlC,KACb,IACImiB,EAAOniB,KAAK+jC,cAAc3hB,aAAapiB,KAAMmiB,EACjD,OACO8I,GAGH9I,QAAKsiB,cAAcG,GAASC,EAAYR,IAExCrkC,KAAK+jC,cAAc/gB,YAAYhjB,KAAMirB,GAC/BA,CACV,CACA,OAAI9I,EAAK4iB,iBAAmBD,GAExB9kC,KAAK87B,iBAAiB3Z,EAAM,GAE5BA,EAAKhQ,OAAS0yB,GACd1iB,EAAKsiB,cAAcC,EAAWG,GAE3B1iB,CACX,CACA7E,kBAAkB/c,EAAQ0F,EAAUsR,EAAMga,GACtC,OAAOvxB,KAAKoiB,aAAa,IAAI8iB,EAAS7hB,GAAW9iB,EAAQ0F,EAAUsR,EAAMga,OAAgBj0B,GAC7F,CACAm0B,kBAAkBlxB,EAAQ0F,EAAUsR,EAAMga,EAAgBC,IACtD,OAAOxxB,KAAKoiB,aAAa,IAAI8iB,EAAS5hB,EAAW/iB,EAAQ0F,EAAUsR,EAAMga,EAAgBC,IAC7F,CACAyI,kBAAkB15B,EAAQ0F,EAAUsR,EAAMga,EAAgBC,IACtD,OAAOxxB,KAAKoiB,aAAa,IAAI8iB,EAASZ,GAAW/jC,EAAQ0F,EAAUsR,EAAMga,EAAgBC,IAC7F,CACA/O,WAAWN,GACP,GAAIA,EAAK/D,MAAQpe,KACb,MAAM,IAAIP,MAAM,qEACX0iB,EAAK/D,MAAQ+lB,IAAS9kC,KACvB,gBACAW,KAAKX,KACL,KACR,GAAI8iB,EAAKhQ,QAAUuyB,GAAaviB,EAAKhQ,QAAUqyB,GAG/CriB,GAAKsiB,cAAcU,GAAWT,EAAWF,IACzC,IACIxkC,KAAK+jC,cAActhB,WAAWziB,KAAMmiB,EACxC,OACO8I,GAEH9I,QAAKsiB,cAAcG,GAASO,IAC5BnlC,KAAK+jC,cAAc/gB,YAAYhjB,KAAMirB,GAC/BA,CACV,CACA,OAAAjrB,KAAK87B,iBAAiB3Z,GAAM,GAC5BA,EAAKsiB,cAAcJ,GAAcc,IACjChjB,EAAKijB,UAAW,EACTjjB,EACX,CACA2Z,iBAAiB3Z,EAAM3O,GACnB,MAAMsxB,EAAgB3iB,EAAK4iB,gBACd,GAATvxB,IACA2O,EAAK4iB,eAAiB,MAE1B,QAASjmC,EAAI,EAAGA,EAAIgmC,EAAc9lC,OAAQF,IACtCgmC,EAAchmC,GAAGg9B,iBAAiB3Z,EAAKjgB,KAAMsR,EAErD,EAEJ,MAAM6xB,EAAc,CAChBhmC,KAAM,GACN4jB,UAAWA,CAAC9C,GAAUmlB,EAAGnlC,EAAQ+iB,IAAiB/C,GAASgD,QAAQhjB,EAAQ+iB,GAC3EhB,eAAgBA,CAAC/B,GAAUmlB,EAAGnlC,EAAQgiB,IAAShC,GAASiC,aAAajiB,EAAQgiB,GAC7EE,aAAcA,CAAClC,GAAUmlB,EAAGnlC,EAAQgiB,EAAMzF,EAAW4F,KAAcnC,GAASoC,WAAWpiB,EAAQgiB,EAAMzF,EAAW4F,IAChHE,aAAcA,CAACrC,GAAUmlB,EAAGnlC,EAAQgiB,IAAShC,GAASsC,WAAWtiB,EAAQgiB,IAE7E,MAAM6hB,EACF,QAAI5lB,GACA,OAAOpe,KAAKilC,KAChB,CACA3jC,YAAY8c,EAAMmnB,EAAgBnb,GAC9BpqB,KAAKwlC,YAAc,CACfniB,UAAa,EACbC,UAAa,EACbghB,UAAa,GAEjBtkC,KAAKilC,MAAQ7mB,EACbpe,KAAKylC,gBAAkBF,EACvBvlC,KAAK0lC,QAAUtb,IAAaA,GAAYA,EAASsD,OAAStD,EAAWmb,EAAeG,SACpF1lC,KAAK2lC,UAAYvb,IAAaA,EAASsD,OAAS6X,EAAiBA,EAAeI,WAChF3lC,KAAK4lC,cACDxb,IAAaA,EAASsD,OAAS1tB,KAAKilC,MAAQM,EAAeK,eAC/D5lC,KAAK6lC,aACDzb,IAAaA,EAASuD,YAAcvD,EAAWmb,EAAeM,cAClE7lC,KAAK8lC,eACD1b,IAAaA,EAASuD,YAAc4X,EAAiBA,EAAeO,gBACxE9lC,KAAK+lC,mBACD3b,IAAaA,EAASuD,YAAc3tB,KAAKilC,MAAQM,EAAeQ,oBACpE/lC,KAAKgmC,UAAY5b,IAAaA,EAAS1H,SAAW0H,EAAWmb,EAAeS,WAC5EhmC,KAAKimC,YACD7b,IAAaA,EAAS1H,SAAW6iB,EAAiBA,EAAeU,aACrEjmC,KAAKkmC,gBACD9b,IAAaA,EAAS1H,SAAW1iB,KAAKilC,MAAQM,EAAeW,iBACjElmC,KAAKmmC,eACD/b,IAAaA,EAASrH,cAAgBqH,EAAWmb,EAAeY,gBACpEnmC,KAAKomC,iBACDhc,IAAaA,EAASrH,cAAgBwiB,EAAiBA,EAAea,kBAC1EpmC,KAAKqmC,qBACDjc,IAAaA,EAASrH,cAAgB/iB,KAAKilC,MAAQM,EAAec,sBACtErmC,KAAKsmC,gBACDlc,IAAaA,EAASlI,eAAiBkI,EAAWmb,EAAee,iBACrEtmC,KAAKumC,kBACDnc,IAAaA,EAASlI,eAAiBqjB,EAAiBA,EAAegB,mBAC3EvmC,KAAKwmC,sBACDpc,IAAaA,EAASlI,eAAiBliB,KAAKilC,MAAQM,EAAeiB,uBACvExmC,KAAKymC,cACDrc,IAAaA,EAAS/H,aAAe+H,EAAWmb,EAAekB,eACnEzmC,KAAK0mC,gBACDtc,IAAaA,EAAS/H,aAAekjB,EAAiBA,EAAemB,iBACzE1mC,KAAK2mC,oBACDvc,IAAaA,EAAS/H,aAAeriB,KAAKilC,MAAQM,EAAeoB,qBACrE3mC,KAAK4mC,cACDxc,IAAaA,EAAS5H,aAAe4H,EAAWmb,EAAeqB,eACnE5mC,KAAK6mC,gBACDzc,IAAaA,EAAS5H,aAAe+iB,EAAiBA,EAAesB,iBACzE7mC,KAAK8mC,oBACD1c,IAAaA,EAAS5H,aAAexiB,KAAKilC,MAAQM,EAAeuB,qBACrE9mC,KAAK+mC,WAAa,KAClB/mC,KAAKgnC,aAAe,KACpBhnC,KAAKinC,kBAAoB,KACzBjnC,KAAKknC,iBAAmB,KACxB,MAAMC,EAAkB/c,GAAYA,EAASnH,UACvCmkB,GAAgB7B,GAAkBA,EAAewB,YACnDI,GAAmBC,MAGnBpnC,KAAK+mC,WAAaI,EAAkB/c,EAAWib,EAC/CrlC,KAAKgnC,aAAezB,EACpBvlC,KAAKinC,kBAAoBjnC,KACzBA,KAAKknC,iBAAmBlnC,KAAKilC,MACxB7a,EAASlI,iBACVliB,KAAKsmC,gBAAkBjB,EACvBrlC,KAAKumC,kBAAoBhB,EACzBvlC,KAAKwmC,sBAAwBxmC,KAAKilC,OAEjC7a,EAAS/H,eACVriB,KAAKymC,cAAgBpB,EACrBrlC,KAAK0mC,gBAAkBnB,EACvBvlC,KAAK2mC,oBAAsB3mC,KAAKilC,OAE/B7a,EAAS5H,eACVxiB,KAAK4mC,cAAgBvB,EACrBrlC,KAAK6mC,gBAAkBtB,EACvBvlC,KAAK8mC,oBAAsB9mC,KAAKilC,OAG5C,CACA/pB,KAAK2H,EAAYuH,GACb,OAAOpqB,KAAK0lC,QACN1lC,KAAK0lC,QAAQhY,OAAO1tB,KAAK2lC,UAAW3lC,KAAKoe,KAAMyE,EAAYuH,GAC3D,IAAI+Y,EAAStgB,EAAYuH,EACnC,CACAwD,UAAU/K,EAAY5c,EAAU1F,GAC5B,OAAOP,KAAK6lC,aACN7lC,KAAK6lC,aAAalY,YAAY3tB,KAAK8lC,eAAgB9lC,KAAK+lC,mBAAoBljB,EAAY5c,EAAU1F,GAClG0F,CACV,CACA6c,OAAOD,EAAY5c,EAAUyW,EAAW4F,EAAW/hB,IAC/C,OAAOP,KAAKgmC,UACNhmC,KAAKgmC,UAAUtjB,SAAS1iB,KAAKimC,YAAajmC,KAAKkmC,gBAAiBrjB,EAAY5c,EAAUyW,EAAW4F,EAAW/hB,IAC5G0F,EAASlG,MAAM2c,EAAW4F,EACpC,CACAU,YAAYH,EAAYjF,GACpB,OAAO5d,KAAKmmC,gBACNnmC,KAAKmmC,eAAepjB,cAAc/iB,KAAKomC,iBAAkBpmC,KAAKqmC,qBAAsBxjB,EAAYjF,EAE1G,CACAwE,aAAaS,EAAYV,GACrB,IAAIklB,EAAallB,EACjB,GAAIniB,KAAKsmC,gBACDtmC,KAAK+mC,YACLM,EAAWtC,eAAethC,KAAKzD,KAAKinC,mBAExCI,EAAarnC,KAAKsmC,gBAAgBpkB,eAAeliB,KAAKumC,kBAAmBvmC,KAAKwmC,sBAAuB3jB,EAAYV,GAC5GklB,IACDA,EAAallB,WAGbA,EAAKmlB,WACLnlB,EAAKmlB,WAAWnlB,OAAI,IAEfA,EAAKjgB,MAAQmhB,GAIlB,MAAM,IAAI5jB,MAAM,+BAHhB6d,GAAkB6E,EAG2B,CAGrD,OAAOklB,CACX,CACA9kB,WAAWM,EAAYV,EAAMzF,EAAW4F,GACpC,OAAOtiB,KAAKymC,cACNzmC,KAAKymC,cAAcpkB,aAAariB,KAAK0mC,gBAAiB1mC,KAAK2mC,oBAAqB9jB,EAAYV,EAAMzF,EAAW4F,GAC7GH,EAAKlc,SAASlG,MAAM2c,EAAW4F,EACzC,CACAG,WAAWI,EAAYV,GACnB,IAAI1R,EACJ,GAAIzQ,KAAK4mC,cACLn2B,EAAQzQ,KAAK4mC,cAAcpkB,aAAaxiB,KAAK6mC,gBAAiB7mC,KAAK8mC,oBAAqBjkB,EAAYV,OAEnG,CACD,IAAKA,EAAK4Z,SACN,MAAMt8B,MAAM,0BAEhBgR,EAAQ0R,EAAK4Z,SAAS5Z,EAC1B,CACA,OAAO1R,CACX,CACA0S,QAAQN,EAAY0kB,GAGhB,IACIvnC,KAAK+mC,YACD/mC,KAAK+mC,WAAW9jB,UAAUjjB,KAAKgnC,aAAchnC,KAAKknC,iBAAkBrkB,EAAY0kB,EACxF,OACOtc,GACHjrB,KAAKgjB,YAAYH,EAAYoI,EACjC,CACJ,CAEA6Q,iBAAiB55B,EAAMsR,GACnB,MAAMg0B,EAASxnC,KAAKwlC,YACdiC,EAAOD,EAAOtlC,GACdwlC,GAAQF,EAAOtlC,GAAQulC,EAAOj0B,EACpC,GAAIk0B,GAAO,EACP,MAAM,IAAIjoC,MAAM,4CAEpB,GAAY,GAARgoC,GAAqB,GAARC,GAAW,CACxB,MAAMH,GAAU,CACZlkB,UAAWmkB,EAAOnkB,UAAe,EACjCC,UAAWkkB,EAAOlkB,UAAe,EACjCghB,UAAWkD,EAAOlD,UAAe,EACjClhB,OAAQlhB,GAEZlC,KAAKmjB,QAAQnjB,KAAKilC,MAAOsC,GAC7B,CACJ,EAEJ,MAAMrC,EACF5jC,YAAYY,EAAM3B,EAAQ0F,EAAUE,EAASmhC,GAAYvL,IAarD,GAXA/7B,KAAKilC,MAAQ,KACbjlC,KAAKolC,SAAW,EAEhBplC,KAAK+kC,eAAiB,KAEtB/kC,KAAK67B,OAAS,eACd77B,KAAKkC,KAAOA,EACZlC,KAAKO,OAASA,EACdP,KAAKuX,KAAOpR,EACZnG,KAAKsnC,WAAaA,GAClBtnC,KAAK+7B,SAAWA,IACX91B,EACD,MAAM,IAAIxG,MAAM,2BAEpBO,KAAKiG,SAAWA,EAChB,MAAMC,GAAOlG,KAETkC,IAASoiC,IAAan+B,GAAWA,EAAQivB,KACzCp1B,KAAK8iB,OAASoiB,EAAS3iB,WAGvBviB,KAAK8iB,OAAS,WACV,OAAOoiB,EAAS3iB,WAAWtjB,KAAKia,GAAQhT,GAAMlG,KAAMC,UACxD,CAER,CACA,iBAAOsiB,CAAWJ,EAAMhiB,EAAQuB,GACvBygB,IACDA,EAAOniB,MAEX2nC,KACA,IACIxlB,SAAKijB,WACEjjB,EAAK/D,KAAK8lB,QAAQ/hB,EAAMhiB,EAAQuB,EAC3C,SAEqC,GAA7BimC,IACAC,KAEJD,IACJ,CACJ,CACA,QAAIvpB,GACA,OAAOpe,KAAKilC,KAChB,CACA,SAAI9yB,GACA,OAAOnS,KAAK67B,MAChB,CACAgM,wBACI7nC,KAAKykC,cAAcJ,GAAcQ,EACrC,CAEAJ,cAAcqD,EAASC,EAAYC,GAC/B,GAAIhoC,KAAK67B,SAAWkM,GAAc/nC,KAAK67B,SAAWmM,EAO9C,MAAM,IAAIvoC,MAAM,GAAGO,KAAKkC,SAASlC,KAAKO,mCAAmCunC,wBAA8BC,KAAcC,EAAa,QAAUA,EAAa,IAAM,YAAYhoC,KAAK67B,YANhL77B,KAAK67B,OAASiM,EACVA,GAAWzD,KACXrkC,KAAK+kC,eAAiB,KAMlC,CACAnW,WACI,OAAI5uB,KAAKuX,aAAevX,KAAKuX,KAAK0R,SAAa,IACpCjpB,KAAKuX,KAAK0R,SAAS2F,WAGnB1uB,OAAOkB,UAAUwtB,SAAS3vB,KAAKe,KAE9C,CAGAioC,SACI,MAAO,CACH/lC,KAAMlC,KAAKkC,KACXiQ,MAAOnS,KAAKmS,MACZ5R,OAAQP,KAAKO,OACb6d,KAAMpe,KAAKoe,KAAK/e,KAChB+lC,SAAUplC,KAAKolC,SAEvB,EAOJ,MAAM8C,EAAmBtuB,GAAW,cAC9BsjB,EAAgBtjB,GAAW,WAC3BujB,EAAavjB,GAAW,QAC9B,IAEIuuB,GAFAC,EAAkB,GAClBC,GAA4B,EAEhC,SAASjR,GAAwBhS,IAM7B,GALK+iB,IACGjvB,GAAOgkB,KACPiL,GAA8BjvB,GAAOgkB,GAAe8C,QAAQ,IAGhEmI,GAA6B,CAC7B,IAAIG,EAAaH,GAA4BhL,GACxCmL,IAGDA,EAAaH,GAA4BhY,MAE7CmY,EAAWrpC,KAAKkpC,GAA6B/iB,GACjD,MAEIlM,GAAOgvB,GAAkB9iB,GAAM,EAEvC,CACA,SAAS9H,GAAkB6E,IAGW,IAA9BwlB,IAA8D,IAA3BS,EAAgBppC,QAEnDo4B,GAAwBwQ,IAE5BzlB,IAAQimB,EAAgB3kC,KAAK0e,GACjC,CACA,SAASylB,KACL,IAAKS,EAA2B,CAE5B,IADAA,GAA4B,EACrBD,EAAgBppC,QAAQ,CAC3B,MAAMkgC,GAAQkJ,EACdA,EAAkB,GAClB,QAAStpC,EAAI,EAAGA,EAAIogC,GAAMlgC,OAAQF,IAAK,CACnC,MAAMqjB,EAAO+c,GAAMpgC,GACnB,IACIqjB,EAAK/D,KAAK8lB,QAAQ/hB,EAAM,KAAM,KAClC,OACOvE,GACH+lB,EAAKvG,iBAAiBxf,EAC1B,CACJ,CACJ,CACA+lB,EAAKpG,qBACL8K,GAA4B,CAChC,CACJ,CAMA,MAAMlE,GAAU,CAAE9kC,KAAM,WAClBglC,GAAe,eAAgBQ,EAAa,aAAcH,EAAY,YAAaF,GAAU,UAAWW,GAAY,YAAaP,GAAU,UAC3IvhB,GAAY,YAAaC,EAAY,YAAaghB,GAAY,YAC9DjB,GAAU,CAAC,EACXM,EAAO,CACThqB,OAAQC,GACR2uB,iBAAkBA,IAAMhF,EACxBnG,iBAAkB0C,GAClBvC,mBAAoBuC,GACpBxiB,kBAAmBA,GACnB+f,kBAAmBA,KAAO8F,EAASvpB,GAAW,oCAC9Cmc,iBAAkBA,IAAM,GACxBtC,kBAAmBqM,GACnB5f,YAAaA,IAAM4f,GACnB/N,cAAeA,IAAM,GACrB+P,UAAWA,IAAMhC,GACjBzL,eAAgBA,IAAMyL,GACtBhF,oBAAqBA,IAAMgF,GAC3BhL,WAAYA,KAAM,EAClB0T,iBAAkBA,OAClBhY,qBAAsBA,IAAMsP,GAC5BxP,+BAAgCA,OAChCK,aAAcA,OACdC,WAAYA,IAAM,GAClBiD,WAAYA,IAAMiM,GAClB1O,oBAAqBA,IAAM0O,GAC3B9D,iBAAkBA,IAAM,GACxBhI,sBAAuBA,IAAM8L,GAC7B4C,kBAAmBA,IAAM5C,GACzBsC,eAAgBA,IAAMtC,GACtB1I,wBAAyBA,IAE7B,IAAImM,EAAoB,CAAE/gC,OAAQ,KAAM4b,KAAM,IAAI+kB,EAAS,KAAM,OAC7DK,EAAe,KACfmE,GAA4B,EAChC,SAAS7H,KAAS,CAClBkD,SAAmB,OAAQ,QACpBG,CACX,CAkBuBN,GACZ3pB,EAAOF,IAClB,CAmwEe4pB,IANf,SAAS6F,GAAYzvB,GACjBgkB,GAAahkB,GAnJjB,SAAS0vB,GAAc1vB,GAGnBA,EAAKC,aAAa,WAAaC,IAE3B,MAAMyvB,EAA2BC,SAASxnC,UAAUwtB,SAC9Cia,EAA2BnX,GAAW,oBACtCoX,EAAiBpX,GAAW,WAC5BqX,EAAerX,GAAW,SAC1BsX,EAAsB,WACxB,GAAoB,mBAAThpC,KAAqB,CAC5B,MAAM82B,EAAmB92B,KAAK6oC,GAC9B,GAAI/R,EACA,MAAgC,mBAArBA,EACA6R,EAAyB1pC,KAAK63B,GAG9B52B,OAAOkB,UAAUwtB,SAAS3vB,KAAK63B,GAG9C,GAAI92B,OAASgiB,QAAS,CAClB,MAAMinB,EAAgB/vB,EAAO4vB,GAC7B,GAAIG,EACA,OAAON,EAAyB1pC,KAAKgqC,EAE7C,CACA,GAAIjpC,OAASP,MAAO,CAChB,MAAMypC,EAAchwB,EAAO6vB,GAC3B,GAAIG,EACA,OAAOP,EAAyB1pC,KAAKiqC,EAE7C,CACJ,CACA,OAAOP,EAAyB1pC,KAAKe,KACzC,EACAgpC,EAAoBH,GAA4BF,EAChDC,SAASxnC,UAAUwtB,SAAWoa,EAE9B,MAAMG,EAAyBjpC,OAAOkB,UAAUwtB,SAEhD1uB,OAAOkB,UAAUwtB,SAAW,WACxB,MAAuB,mBAAZ5M,SAA0BhiB,gBAAgBgiB,QAFxB,mBAKtBmnB,EAAuBlqC,KAAKe,KACvC,GAER,CAqGI0oC,CAAc1vB,GAtDlB,SAASowB,GAAUpwB,GACfA,EAAKC,aAAa,OAAQ,CAACC,EAAQF,EAAMG,KAGrC,MAAMkwB,EAAa9M,GAAgBrjB,GACnCC,EAAIsa,kBAAoBA,EACxBta,EAAI+G,YAAcA,EAClB/G,EAAI4Y,cAAgBA,GACpB5Y,EAAIkb,eAAiBA,EAMrB,MAAMiV,EAA6BtwB,EAAKY,WAAW,uBAC7C2vB,EAA0BvwB,EAAKY,WAAW,oBAC5CV,EAAOqwB,KACPrwB,EAAOowB,GAA8BpwB,EAAOqwB,IAE5CrwB,EAAOowB,KACPtwB,EAAKswB,GAA8BtwB,EAAKuwB,GACpCrwB,EAAOowB,IAEfnwB,EAAI2hB,oBAAsBA,GAC1B3hB,EAAI4c,iBAAmBA,EACvB5c,EAAI2b,WAAaA,GACjB3b,EAAIqX,qBAAuBA,GAC3BrX,EAAImX,+BAAiCA,GACrCnX,EAAIwX,aAAeA,GACnBxX,EAAIyX,WAAaA,GACjBzX,EAAI0a,WAAaA,EACjB1a,EAAIiY,oBAAsBA,GAC1BjY,EAAI6iB,iBAAmBA,GACvB7iB,EAAI6a,sBAAwBA,EAC5B7a,EAAIupB,kBAAoBxiC,OAAOic,eAC/BhD,EAAIipB,eAAiBA,GACrBjpB,EAAIqvB,iBAAmB,MACnBlT,gBACAD,uBACAgU,aACAjX,aACAE,SACAlY,UACA6W,YACAC,aACAC,sBACAN,0BACAC,8BACJ,EAER,CAKIsY,CAAUpwB,EACd,EAGAyvB,CAAY9F,IA75BZ,SAAS6G,GAAaxwB,GAClBA,EAAKC,aAAa,SAAWC,IACzB,MAAMuwB,EAAcvwB,EAAOF,EAAKY,WAAW,gBACvC6vB,GACAA,GAAY,GAGpBzwB,EAAKC,aAAa,SAAWC,IACzB,MAAMxI,EAAM,MACNg5B,EAAQ,QACdzO,GAAW/hB,EAAQxI,EAAKg5B,EAAO,WAC/BzO,GAAW/hB,EAAQxI,EAAKg5B,EAAO,YAC/BzO,GAAW/hB,EAAQxI,EAAKg5B,EAAO,YAAW,GAE9C1wB,EAAKC,aAAa,wBAA0BC,IACxC+hB,GAAW/hB,EAAQ,UAAW,SAAU,kBACxC+hB,GAAW/hB,EAAQ,aAAc,YAAa,kBAC9C+hB,GAAW/hB,EAAQ,gBAAiB,eAAgB,iBAAgB,GAExEF,EAAKC,aAAa,WAAY,CAACC,EAAQF,KACnC,MAAM2wB,EAAkB,CAAC,QAAS,SAAU,WAC5C,QAAS7qC,EAAI,EAAGA,EAAI6qC,EAAgB3qC,OAAQF,IAAK,CAC7C,MAAMO,EAAOsqC,EAAgB7qC,GAC7BohB,EAAYhH,EAAQ7Z,EAAM,CAAC8gB,EAAUxG,EAAQta,IAClC,SAAUuqC,EAAGloC,GAChB,OAAOsX,EAAKU,QAAQyB,IAAIgF,EAAUjH,EAAQxX,EAAMrC,EACpD,EAER,IAEJ2Z,EAAKC,aAAa,cAAe,CAACC,EAAQF,EAAMG,MA3HpD,SAAS0wB,GAAW3wB,EAAQC,GACxBA,EAAI2hB,oBAAoB5hB,EAAQC,EACpC,EA0HQ0wB,CAAW3wB,EAAQC,GApJ3B,SAAS2wB,GAAiBjY,EAAS1Y,GAC/B,GAAIH,KAAKG,EAAIQ,OAAO,qBAEhB,OAEJ,MAAQ0vB,aAAYhU,uBAAsBpE,WAAUC,YAAWC,sBAAuBhY,EAAIqvB,mBAE1F,QAAS1pC,EAAI,EAAGA,EAAIuqC,EAAWrqC,OAAQF,IAAK,CACxC,MAAMw0B,EAAY+V,EAAWvqC,GAGvB6a,GAASwX,GAFQmC,EAAYpC,GAG7B4E,GAAgB3E,GAFAmC,EAAYrC,GAGlCoE,EAAqB/B,GAAa,CAAC,EACnC+B,EAAqB/B,GAAWpC,GAAavX,GAC7C0b,EAAqB/B,GAAWrC,GAAY6E,EAChD,CACA,MAAMiU,EAAelY,EAAQmY,YAC7B,OAAKD,GAAiBA,EAAa3oC,WAGnC+X,EAAI4c,iBAAiBlE,EAAS1Y,EAAK,CAAC4wB,GAAgBA,EAAa3oC,aAC1D,QAJP,CAKJ,CA8HQ0oC,CAAiB5wB,EAAQC,GAEzB,MAAM8wB,EAA4B/wB,EAAO+wB,0BACrCA,GAA6BA,EAA0B7oC,WACvD+X,EAAI4c,iBAAiB7c,EAAQC,EAAK,CAAC8wB,EAA0B7oC,WAAU,GAG/E4X,EAAKC,aAAa,mBAAoB,CAACC,EAAQF,EAAMG,KACjD0a,EAAW,oBACXA,EAAW,yBAAwB,GAEvC7a,EAAKC,aAAa,uBAAwB,CAACC,EAAQF,EAAMG,KACrD0a,EAAW,uBAAsB,GAErC7a,EAAKC,aAAa,aAAc,CAACC,EAAQF,EAAMG,KAC3C0a,EAAW,aAAY,GAE3B7a,EAAKC,aAAa,cAAe,CAACC,EAAQF,EAAMG,KAC5CwjB,GAAwBxjB,EAAKD,EAAM,GAEvCF,EAAKC,aAAa,iBAAkB,CAACC,EAAQF,EAAMG,MA5LvD,SAAS+wB,GAAoBrY,EAAS1Y,GAClC,MAAQiZ,YAAWE,SAAUnZ,EAAIqvB,mBACjC,IAAMpW,IAAcE,IAAWT,EAAQsY,kBAAuB,mBAAoBtY,GAC9E,OAaJ1Y,EAAIipB,eAAejpB,EAAK0Y,EAAQsY,eAAgB,iBAAkB,SAVhD,CACd,oBACA,uBACA,kBACA,2BACA,yBACA,uBACA,oBACA,4BAGR,CA4KQD,CAAoBhxB,EAAQC,EAAG,GAEnCH,EAAKC,aAAa,MAAO,CAACC,EAAQF,MAS9B,SAASoxB,EAASjtC,GACd,MAAMktC,EAAiBltC,EAAOktC,eAC9B,IAAKA,EAED,OAEJ,MAAMC,GAA0BD,EAAejpC,UAI/C,IAAImpC,GAAiBD,GAAwBvZ,IACzCyZ,GAAoBF,GAAwBtZ,IAChD,IAAKuZ,GAAgB,CACjB,MAAMN,EAA4B9sC,EAAO8sC,0BACzC,GAAIA,EAA2B,CAC3B,MAAMQ,EAAqCR,EAA0B7oC,UACrEmpC,GAAiBE,EAAmC1Z,IACpDyZ,GAAoBC,EAAmCzZ,GAC3D,CACJ,CACA,MAAM0Z,GAAqB,mBACrBC,GAAY,YAClB,SAASvoB,EAAaD,GAClB,MAAM5K,EAAO4K,EAAK5K,KACZpX,EAASoX,EAAKpX,OACpBA,EAAOyqC,IAAiB,EACxBzqC,EAAO0qC,IAA8B,EAErC,MAAMlY,GAAWxyB,EAAO2qC,GACnBP,KACDA,GAAiBpqC,EAAO4wB,IACxByZ,GAAoBrqC,EAAO6wB,KAE3B2B,IACA6X,GAAkBvrC,KAAKkB,EAAQuqC,GAAoB/X,IAEvD,MAAMoY,GAAe5qC,EAAO2qC,GAAgB,KACxC,GAAI3qC,EAAO6qC,aAAe7qC,EAAO8qC,KAG7B,IAAK1zB,EAAKuiB,SAAW35B,EAAOyqC,IAAkBzoB,EAAKhQ,QAAUw4B,GAAW,CAQpE,MAAMO,EAAY/qC,EAAO6Y,EAAKY,WAAW,cACzC,GAAsB,IAAlBzZ,EAAO0gC,QAAgBqK,GAAaA,EAAUlsC,OAAS,EAAG,CAC1D,MAAMmsC,EAAYhpB,EAAKW,OACvBX,EAAKW,OAAS,WAGV,MAAMooB,EAAY/qC,EAAO6Y,EAAKY,WAAW,cACzC,QAAS9a,EAAI,EAAGA,EAAIosC,EAAUlsC,OAAQF,IAC9BosC,EAAUpsC,KAAOqjB,GACjB+oB,EAAUr+B,OAAO/N,EAAG,IAGvByY,EAAKuiB,SAAW3X,EAAKhQ,QAAUw4B,IAChCQ,EAAUlsC,KAAKkjB,EAEvB,EACA+oB,EAAUznC,KAAK0e,EACnB,MAEIA,EAAKW,QAEb,MACUvL,EAAKuiB,UAAqC,IAA1B35B,EAAOyqC,KAE7BzqC,EAAO0qC,IAA8B,IAIjDN,UAAetrC,KAAKkB,EAAQuqC,GAAoBK,IAC7B5qC,EAAOirC,KAEtBjrC,EAAOirC,GAAYjpB,GAEvBkpB,GAAWtrC,MAAMI,EAAQoX,EAAK7V,MAC9BvB,EAAOyqC,IAAiB,EACjBzoB,CACX,CACA,SAASmpB,IAAwB,CACjC,SAAS3P,GAAUxZ,GACf,MAAM5K,EAAO4K,EAAK5K,KAGlBA,SAAKuiB,SAAU,EACRyR,GAAYxrC,MAAMwX,EAAKpX,OAAQoX,EAAK7V,KAC/C,CACA,MAAM8pC,GAAatrB,EAAYoqB,GAAyB,OAAQ,IAAM,SAAUpkC,EAAMxE,GAClFwE,SAAKulC,GAAuB,GAAX/pC,EAAK,GACtBwE,EAAKwlC,GAAWhqC,EAAK,GACd8pC,GAAWzrC,MAAMmG,EAAMxE,EAClC,GAEMiqC,GAAoBja,GAAW,qBAC/Bka,EAAsBla,GAAW,uBACjC2Z,GAAanrB,EAAYoqB,GAAyB,OAAQ,IAAM,SAAUpkC,EAAMxE,GAOlF,IAN0C,IAAtCsX,EAAKU,QAAQkyB,IAMb1lC,EAAKulC,GAEL,OAAOJ,GAAWtrC,MAAMmG,EAAMxE,GAE7B,CACD,MAAMyE,EAAU,CACZhG,OAAQ+F,EACRgjB,IAAKhjB,EAAKwlC,GACV3mB,YAAY,EACZrjB,KAAMA,EACNo4B,SAAS,GAEP3X,GAAOmP,GAtBS,sBAsB+Cga,EAAqBnlC,EAASic,EAAcuZ,IAC7Gz1B,IACqC,IAArCA,EAAK2kC,KACJ1kC,EAAQ2zB,SACT3X,GAAKhQ,QAAUw4B,IAIfxoB,GAAKW,QAEb,CACJ,GACMyoB,GAAcrrB,EAAYoqB,GAAyB,QAAS,IAAM,SAAUpkC,EAAMxE,GACpF,MAAMygB,EA9HV,SAAS0pB,GAAgB1rC,GACrB,OAAOA,EAAOirC,EAClB,CA4HiBS,CAAgB3lC,GAC7B,GAAIic,GAA4B,iBAAbA,EAAKjgB,KAAkB,CAKtC,GAAqB,MAAjBigB,EAAK4Z,UAAqB5Z,EAAK5K,MAAQ4K,EAAK5K,KAAKuiB,QACjD,OAEJ3X,EAAK/D,KAAKqE,WAAWN,EACzB,UAC6C,IAApCnJ,EAAKU,QAAQiyB,IAElB,OAAOJ,GAAYxrC,MAAMmG,EAAMxE,EAKvC,EACJ,CA/JA0oC,CAASlxB,GACT,MAAMkyB,EAAW1Z,GAAW,WACtB+Z,EAAW/Z,GAAW,WACtBoZ,EAAepZ,GAAW,eAC1BkZ,EAAgBlZ,GAAW,gBAC3Bga,EAAUha,GAAW,UACrBmZ,EAA6BnZ,GAAW,0BAyJ9C,GAEJ1Y,EAAKC,aAAa,cAAgBC,IAE1BA,EAAOrU,WAAgBqU,EAAOrU,UAAainC,aAhhDvD,SAASC,GAAe3qC,EAAW4qC,GAC/B,MAAMzrC,EAASa,EAAUE,YAAYjC,KACrC,QAASP,EAAI,EAAGA,EAAIktC,EAAQhtC,OAAQF,IAAK,CACrC,MAAMO,EAAO2sC,EAAQltC,GACfqhB,EAAW/e,EAAU/B,GAC3B,GAAI8gB,EAAU,CAEV,IAAK6R,GADiB1B,GAA+BlvB,EAAW/B,IAE5D,SAEJ+B,EAAU/B,GAAI,CAAM8gB,IAChB,MAAMuU,EAAU,WACZ,OAAOvU,EAASpgB,MAAMC,KAAM+xB,GAAc9xB,UAAWM,EAAS,IAAMlB,GACxE,EACA20B,SAAsBU,EAASvU,GACxBuU,CACX,EANc,CAMXvU,EACP,CACJ,CACJ,CA8/CY4rB,CAAe7yB,EAAOrU,UAAainC,YAAa,CAAC,qBAAsB,iBAAgB,GAG/F9yB,EAAKC,aAAa,wBAAyB,CAACC,EAAQF,KAEhD,SAASizB,EAA4BvR,GACjC,OAAO,SAAUl7B,GACM66B,EAAenhB,EAAQwhB,GAC/B37B,QAASulC,IAGhB,MAAM4H,EAAwBhzB,EAAOgzB,sBACrC,GAAIA,EAAuB,CACvB,MAAMC,EAAM,IAAID,EAAsBxR,EAAS,CAC3CgE,QAASl/B,EAAEk/B,QACXqC,OAAQvhC,EAAE89B,YAEdgH,EAAUxhB,OAAOqpB,EACrB,GAER,CACJ,CACIjzB,EAAOgzB,wBACPlzB,EAAK0Y,GAAW,qCACZua,EAA4B,sBAChCjzB,EAAK0Y,GAAW,4BACZua,EAA4B,oBAAkB,GAG1DjzB,EAAKC,aAAa,iBAAkB,CAACC,EAAQF,EAAMG,MAphBvD,SAASizB,GAAoBlzB,EAAQC,GACjCA,EAAI+G,YAAYhH,EAAQ,iBAAmBiH,GAChC,SAAUja,EAAMxE,GACnBsX,KAAKU,QAAQ4D,kBAAkB,iBAAkB5b,EAAK,GAC1D,EAER,CA+gBQ0qC,CAAoBlzB,EAAQC,EAAG,EAEvC,CAiqBAqwB,CAAa7G","names":["__WEBPACK_AMD_DEFINE_RESULT__","window","document","exportName","undefined","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","round","Math","abs","now","Date","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","i","forEach","length","call","hasOwnProperty","deprecate","method","name","message","deprecationMessage","e","Error","stack","replace","log","console","warn","apply","this","arguments","Object","target","TypeError","output","index","source","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","childP","baseP","prototype","create","constructor","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","a","b","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","COMPUTE_INTERVAL","INPUT_START","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","computeInputData","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offset","offsetDelta","prevDelta","prevInput","x","deltaX","y","deltaY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","getScale","start","end","rotation","getRotation","maxPointers","computeIntervalInputData","velocity","velocityX","velocityY","direction","last","lastInterval","v","srcEvent","emit","recognize","clientX","clientY","p1","p2","props","sqrt","atan2","PI","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","getTouchActionProps","touchMap","cssSupports","CSS","supports","TouchAction","value","set","compute","actions","update","touchAction","recognizers","recognizer","getTouchAction","cleanTouchActions","hasPanX","hasPanY","join","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","preventDefault","STATE_POSSIBLE","Recognizer","defaults","id","uniqueId","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","handlers","oldCssProps","createInputInstance","toggleCssProps","item","add","stop","force","stopped","curRecognizer","existing","remove","on","events","off","data","triggerDomEvent","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","INPUT_MOVE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press","define","exports","__webpack_require__","module","patchJasmine","Zone","__load_patch","global","api","jest","jasmine","__zone_patch__","SyncTestZoneSpec","ProxyZoneSpec","ambientZone","current","symbol","__symbol__","disablePatchingJasmineClock","enableAutoFakeAsyncWhenClockPatched","globalErrors","GlobalErrors","instance","originalInstall","install","isNode","originalHandlers","listeners","eventListeners","result","removeAllListeners","jasmineEnv","getEnv","methodName","originalJasmineFn","description","specDefinitions","wrapDescribeInZone","describeBody","fork","run","wrapTestInZone","originalClockFn","clock","originalTick","tick","fakeAsyncZoneSpec","originalMockDate","mockDate","dateTime","setFakeBaseSystemTime","getTime","FakeAsyncTestZoneSpec","originalCreateSpyObj","createSpyObj","spyObj","defineProperty","p","attributes","configurable","enumerable","runInTestZone","testBody","applyThis","queueRunner","done","isClockInstalled","testProxyZoneSpec","testProxyZone","fakeAsyncModule","fakeAsync","QueueRunner","ZoneQueueRunner","attrs","onComplete","scheduleMicroTask","nativeSetTimeout","nativeClearTimeout","UserContext","userContext","onException","error","proxyZoneSpec","pendingTasksInfo","getAndClearPendingTasksInfo","d","__","__extends","execute","zone","isChildOfAmbientZone","currentTask","patchJest","rootZone","syncZone","proxyZone","isTestFunc","wrappedFunc","isFakeAsync","writable","originalJestFn","wrapDescribeFactoryInZone","tableArgs","originalDescribeFn","describe","only","fdescribe","skip","xdescribe","wrapTestFactoryInZone","todo","it","fit","xit","patchJestObject","Timer","isModern","isPatchingFakeTimer","isInTestFunc","patchMethod","delegate","getRealSystemTime","flushMicrotasks","flush","flushOnlyPendingTimers","tickToNext","removeAllTimers","getTimerCount","global$2","globalThis","__Zone_symbol_prefix","__global","AsyncTestZoneSpec","symbolParentUnresolved","finishCallback","failCallback","namePrefix","_pendingMicroTasks","_pendingMacroTasks","_alreadyErrored","_isSync","_existingFinishTimer","entryFunction","runZone","unresolvedChainedPromiseCount","supportWaitUnresolvedChainedPromise","isUnresolvedChainedPromisePending","_finishCallbackIfDone","patchPromiseForTest","Promise","unPatchPromiseForTest","onScheduleTask","task","scheduleTask","onInvokeTask","applyArgs","invokeTask","onCancelTask","cancelTask","onInvoke","parentZoneDelegate","currentZone","targetZone","invoke","onHandleError","handleError","onHasTask","hasTaskState","hasTask","change","microTask","macroTask","global$1","OriginalDate","FakeDate","setTime","patchedTimers","fakeAsyncTestZoneSpec","getFakeSystemTime","UTC","parse","timeoutCallback","Scheduler","nextNodeJSId","nextId","_schedulerQueue","_currentTickTime","_currentFakeBaseSystemTime","_currentTickRequeuePeriodicEntries","getNextId","getCurrentTickTime","fakeBaseSystemTime","scheduleFunction","cb","delay","currentId","isPeriodic","isRequestAnimationFrame","isRequeuePeriodic","newEntry","endTime","func","currentEntry","removeScheduledFunctionWithId","removeAll","step","doTick","tickOptions","startTime","targetTask","millis","finalTime","lastCurrentTime","schedulerQueue","processNewMacroTasksSynchronously","shift","idx","lastTask","limit","flushPeriodic","flushNonPeriodic","assertInZone","trackPendingRequestAnimationFrame","macroTaskOptions","_scheduler","_microtasks","_lastError","_uncaughtPromiseErrors","pendingPeriodicTimers","pendingTimers","patchDateLocked","_fnAndFlush","completers","onSuccess","onError","_removeTimer","timers","_dequeueTimer","_requeuePeriodicTimer","_dequeuePeriodicTimer","_setTimeout","isTimer","removeTimerFn","_clearTimeout","_setInterval","_clearInterval","_resetLastErrorAndThrow","realTime","patchDate","checkTimerPatch","resetDate","setInterval","clearInterval","lockDatePatch","unlockDatePatch","steps","microtask","flushErrors","elapsed","additionalArgs","callbackIndex","cbIdx","handleId","url","macroTaskOption","findMacroTaskOption","callbackArgs","_fakeAsyncTestZoneSpec","getProxyZoneSpec","resetFakeAsyncZone","assertPresent","resetDelegate","fakeAsyncFn","getDelegate","res","lastProxyZoneSpec","setDelegate","_getFakeAsyncZoneSpec","ignoreNestedTimeout","maxTurns","discardPeriodicTasks","zoneSpec","patchLongStackTrace","NEWLINE","IGNORE_FRAMES","creationTrace","ERROR_TAG","SEP_TAG","sepTemplate","LongStackTrace","getStacktrace","timestamp","getStacktraceWithUncaughtError","getStacktraceWithCaughtError","err","caughtError","getFrames","addErrorStack","lines","trace","frame","renderLongStackTrace","frames","longTrace","traceFrames","lastTime","separator","stackTracesEnabled","stackTraceLimit","captureStackTraces","stackTraces","longStackTraceZoneSpec","longStackTraceLimit","getLongStackTrace","parentTask","longStack","computeIgnoreFrames","frames1","frames2","frame1","match","isLoaded","defaultSpecDelegate","_delegateSpec","propertyKeys","lastTaskState","isNeedToTriggerHasTask","tasks","delegateSpec","isNewDelegate","k","tryTriggerHasTask","removeFromTasks","map","dataInfo","onFork","onIntercept","intercept","rollupTesting","patchProxyZoneSpec","patchSyncTest","patchMocha","Mocha","testZone","suiteZone","mochaOriginal","after","afterEach","before","beforeEach","modifyArguments","syncTest","asyncTest","toString","wrapSuiteInZone","originalRunTest","originalRun","suite","specify","xspecify","suiteTeardown","teardown","suiteSetup","setup","Runner","runTest","patchAsyncTest","getZoneWith","previousDelegate","testZoneSpec","runGuarded","fail","patchFakeAsyncTest","patchPromiseTesting","symbolState","oriThen","then","chained","asyncTestZoneSpec","ObjectGetOwnPropertyDescriptor","getOwnPropertyDescriptor","ObjectDefineProperty","ObjectGetPrototypeOf","getPrototypeOf","ObjectCreate","ArraySlice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrapWithCurrentZone","wrap","scheduleMacroTaskWithCurrentZone","customSchedule","customCancel","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","bindArguments","isPropertyWritable","propertyDesc","isWebWorker","WorkerGlobalScope","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","enableBeforeunloadSymbol","wrapFn","eventNameSymbol","listener","errorEvent","filename","lineno","colno","returnValue","patchProperty","desc","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","removeAttribute","patchOnProperties","onProperties","j","originalInstanceKey","patchClass","className","OriginalClass","attachOriginToPatched","patchFn","proto","delegateName","patchDelegate","patchMacroTask","funcName","metaCreator","setNative","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIEOrEdge","ua","isFunction","isNumber","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","useG","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","patchEventTarget","apis","patchOptions","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","originalDelegate","once","globalCallback","isCapture","errors","copyTasks","nativeScheduleMicroTask","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","checkDuplicate","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","isExisting","capture","symbolEventNames","symbolEventName","existingTasks","removeAbortListener","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","passive","copyEventListenerOptions","newOptions","signal","buildEventListenerOptions","aborted","constructorName","targetSource","scheduleEventTask","onAbort","unshift","existingTask","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","exec","evtName","foundTasks","captureFalseTasks","captureTrueTasks","patchEventPrototype","Event","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","handleOrId","handle","isRefreshable","refresh","clearTask","originalRefresh","_state","_updateTaskCount","cancelFn","filterProperties","ignoreProperties","tip","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","substring","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchPromise","isDisableWrappingUncaughtPromiseRejection","symbolPromise","symbolThen","onUnhandledError","showUncaughtError","rejection","microtaskDrainDone","uncaughtPromiseError","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","isThenable","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","resolvePromise","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","clearRejectedNoCatch","queue","scheduleResolveOrReject","readableObjectToString","JSON","stringify","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","noop","AggregateError","resolve","withResolvers","rej","any","Symbol","promises","finished","race","onResolve","onReject","allWithCallback","allSettled","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","C","catch","finally","onFinally","NativePromise","symbolThenPatched","patchThen","Ctor","originalThen","zoneify","resultPromise","ctor","patchCallbacks","targetName","callbacks","nativeDelegate","opts","descriptor","_redefineProperty","Zone$1","loadZone","initZone","performance","mark","performanceMeasure","label","measure","ZoneImpl","assertZonePatched","patches","root","_currentZoneFrame","_currentTask","ignoreDuplicate","perfName","_api","_parent","_name","_properties","_zoneDelegate","_ZoneDelegate","_callback","runTask","NO_ZONE","zoneTask","notScheduled","eventTask","reEntryGuard","running","_transitionTo","scheduled","previousTask","unknown","scheduling","zoneDelegates","_zoneDelegates","newZone","_zone","ZoneTask","canceling","runCount","DELEGATE_ZS","_","parentDelegate","_taskCounts","_parentDelegate","_forkZS","_forkDlgt","_forkCurrZone","_interceptZS","_interceptDlgt","_interceptCurrZone","_invokeZS","_invokeDlgt","_invokeCurrZone","_handleErrorZS","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","returnTask","scheduleFn","isEmpty","counts","prev","next","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toJSON","symbolSetTimeout","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","nativeThen","currentZoneFrame","getGlobalObjects","patchCommon","patchToString","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","nativePromise","nativeError","originalObjectToString","patchUtil","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchBrowser","legacyPatch","clear","blockingMethods","s","patchEvent","eventTargetPatch","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","patchCustomElements","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","findPendingTask","geolocation","patchPrototype","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt","patchQueueMicrotask"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/hammerjs/hammer.js","./node_modules/zone.js/fesm2015/zone-testing.js","./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nfunction patchJasmine(Zone) {\n    Zone.__load_patch('jasmine', (global, Zone, api) => {\n        const __extends = function (d, b) {\n            for (const p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype =\n                b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());\n        };\n        // Patch jasmine's describe/it/beforeEach/afterEach functions so test code always runs\n        // in a testZone (ProxyZone). (See: angular/zone.js#91 & angular/angular#10503)\n        if (!Zone)\n            throw new Error('Missing: zone.js');\n        if (typeof jest !== 'undefined') {\n            // return if jasmine is a light implementation inside jest\n            // in this case, we are running inside jest not jasmine\n            return;\n        }\n        if (typeof jasmine == 'undefined' || jasmine['__zone_patch__']) {\n            return;\n        }\n        jasmine['__zone_patch__'] = true;\n        const SyncTestZoneSpec = Zone['SyncTestZoneSpec'];\n        const ProxyZoneSpec = Zone['ProxyZoneSpec'];\n        if (!SyncTestZoneSpec)\n            throw new Error('Missing: SyncTestZoneSpec');\n        if (!ProxyZoneSpec)\n            throw new Error('Missing: ProxyZoneSpec');\n        const ambientZone = Zone.current;\n        const symbol = Zone.__symbol__;\n        // whether patch jasmine clock when in fakeAsync\n        const disablePatchingJasmineClock = global[symbol('fakeAsyncDisablePatchingClock')] === true;\n        // the original variable name fakeAsyncPatchLock is not accurate, so the name will be\n        // fakeAsyncAutoFakeAsyncWhenClockPatched and if this enablePatchingJasmineClock is false, we\n        // also automatically disable the auto jump into fakeAsync feature\n        const enableAutoFakeAsyncWhenClockPatched = !disablePatchingJasmineClock &&\n            (global[symbol('fakeAsyncPatchLock')] === true ||\n                global[symbol('fakeAsyncAutoFakeAsyncWhenClockPatched')] === true);\n        const ignoreUnhandledRejection = global[symbol('ignoreUnhandledRejection')] === true;\n        if (!ignoreUnhandledRejection) {\n            const globalErrors = jasmine.GlobalErrors;\n            if (globalErrors && !jasmine[symbol('GlobalErrors')]) {\n                jasmine[symbol('GlobalErrors')] = globalErrors;\n                jasmine.GlobalErrors = function () {\n                    const instance = new globalErrors();\n                    const originalInstall = instance.install;\n                    if (originalInstall && !instance[symbol('install')]) {\n                        instance[symbol('install')] = originalInstall;\n                        instance.install = function () {\n                            const isNode = typeof process !== 'undefined' && !!process.on;\n                            // Note: Jasmine checks internally if `process` and `process.on` is defined.\n                            // Otherwise, it installs the browser rejection handler through the\n                            // `global.addEventListener`. This code may be run in the browser environment where\n                            // `process` is not defined, and this will lead to a runtime exception since Webpack 5\n                            // removed automatic Node.js polyfills. Note, that events are named differently, it's\n                            // `unhandledRejection` in Node.js and `unhandledrejection` in the browser.\n                            const originalHandlers = isNode\n                                ? process.listeners('unhandledRejection')\n                                : global.eventListeners('unhandledrejection');\n                            const result = originalInstall.apply(this, arguments);\n                            isNode\n                                ? process.removeAllListeners('unhandledRejection')\n                                : global.removeAllListeners('unhandledrejection');\n                            if (originalHandlers) {\n                                originalHandlers.forEach((handler) => {\n                                    if (isNode) {\n                                        process.on('unhandledRejection', handler);\n                                    }\n                                    else {\n                                        global.addEventListener('unhandledrejection', handler);\n                                    }\n                                });\n                            }\n                            return result;\n                        };\n                    }\n                    return instance;\n                };\n            }\n        }\n        // Monkey patch all of the jasmine DSL so that each function runs in appropriate zone.\n        const jasmineEnv = jasmine.getEnv();\n        ['describe', 'xdescribe', 'fdescribe'].forEach((methodName) => {\n            let originalJasmineFn = jasmineEnv[methodName];\n            jasmineEnv[methodName] = function (description, specDefinitions) {\n                return originalJasmineFn.call(this, description, wrapDescribeInZone(description, specDefinitions));\n            };\n        });\n        ['it', 'xit', 'fit'].forEach((methodName) => {\n            let originalJasmineFn = jasmineEnv[methodName];\n            jasmineEnv[symbol(methodName)] = originalJasmineFn;\n            jasmineEnv[methodName] = function (description, specDefinitions, timeout) {\n                arguments[1] = wrapTestInZone(specDefinitions);\n                return originalJasmineFn.apply(this, arguments);\n            };\n        });\n        ['beforeEach', 'afterEach', 'beforeAll', 'afterAll'].forEach((methodName) => {\n            let originalJasmineFn = jasmineEnv[methodName];\n            jasmineEnv[symbol(methodName)] = originalJasmineFn;\n            jasmineEnv[methodName] = function (specDefinitions, timeout) {\n                arguments[0] = wrapTestInZone(specDefinitions);\n                return originalJasmineFn.apply(this, arguments);\n            };\n        });\n        if (!disablePatchingJasmineClock) {\n            // need to patch jasmine.clock().mockDate and jasmine.clock().tick() so\n            // they can work properly in FakeAsyncTest\n            const originalClockFn = (jasmine[symbol('clock')] = jasmine['clock']);\n            jasmine['clock'] = function () {\n                const clock = originalClockFn.apply(this, arguments);\n                if (!clock[symbol('patched')]) {\n                    clock[symbol('patched')] = symbol('patched');\n                    const originalTick = (clock[symbol('tick')] = clock.tick);\n                    clock.tick = function () {\n                        const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                        if (fakeAsyncZoneSpec) {\n                            return fakeAsyncZoneSpec.tick.apply(fakeAsyncZoneSpec, arguments);\n                        }\n                        return originalTick.apply(this, arguments);\n                    };\n                    const originalMockDate = (clock[symbol('mockDate')] = clock.mockDate);\n                    clock.mockDate = function () {\n                        const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                        if (fakeAsyncZoneSpec) {\n                            const dateTime = arguments.length > 0 ? arguments[0] : new Date();\n                            return fakeAsyncZoneSpec.setFakeBaseSystemTime.apply(fakeAsyncZoneSpec, dateTime && typeof dateTime.getTime === 'function'\n                                ? [dateTime.getTime()]\n                                : arguments);\n                        }\n                        return originalMockDate.apply(this, arguments);\n                    };\n                    // for auto go into fakeAsync feature, we need the flag to enable it\n                    if (enableAutoFakeAsyncWhenClockPatched) {\n                        ['install', 'uninstall'].forEach((methodName) => {\n                            const originalClockFn = (clock[symbol(methodName)] = clock[methodName]);\n                            clock[methodName] = function () {\n                                const FakeAsyncTestZoneSpec = Zone['FakeAsyncTestZoneSpec'];\n                                if (FakeAsyncTestZoneSpec) {\n                                    jasmine[symbol('clockInstalled')] = 'install' === methodName;\n                                    return;\n                                }\n                                return originalClockFn.apply(this, arguments);\n                            };\n                        });\n                    }\n                }\n                return clock;\n            };\n        }\n        // monkey patch createSpyObj to make properties enumerable to true\n        if (!jasmine[Zone.__symbol__('createSpyObj')]) {\n            const originalCreateSpyObj = jasmine.createSpyObj;\n            jasmine[Zone.__symbol__('createSpyObj')] = originalCreateSpyObj;\n            jasmine.createSpyObj = function () {\n                const args = Array.prototype.slice.call(arguments);\n                const propertyNames = args.length >= 3 ? args[2] : null;\n                let spyObj;\n                if (propertyNames) {\n                    const defineProperty = Object.defineProperty;\n                    Object.defineProperty = function (obj, p, attributes) {\n                        return defineProperty.call(this, obj, p, {\n                            ...attributes,\n                            configurable: true,\n                            enumerable: true,\n                        });\n                    };\n                    try {\n                        spyObj = originalCreateSpyObj.apply(this, args);\n                    }\n                    finally {\n                        Object.defineProperty = defineProperty;\n                    }\n                }\n                else {\n                    spyObj = originalCreateSpyObj.apply(this, args);\n                }\n                return spyObj;\n            };\n        }\n        /**\n         * Gets a function wrapping the body of a Jasmine `describe` block to execute in a\n         * synchronous-only zone.\n         */\n        function wrapDescribeInZone(description, describeBody) {\n            return function () {\n                // Create a synchronous-only zone in which to run `describe` blocks in order to raise an\n                // error if any asynchronous operations are attempted inside of a `describe`.\n                const syncZone = ambientZone.fork(new SyncTestZoneSpec(`jasmine.describe#${description}`));\n                return syncZone.run(describeBody, this, arguments);\n            };\n        }\n        function runInTestZone(testBody, applyThis, queueRunner, done) {\n            const isClockInstalled = !!jasmine[symbol('clockInstalled')];\n            queueRunner.testProxyZoneSpec;\n            const testProxyZone = queueRunner.testProxyZone;\n            if (isClockInstalled && enableAutoFakeAsyncWhenClockPatched) {\n                // auto run a fakeAsync\n                const fakeAsyncModule = Zone[Zone.__symbol__('fakeAsyncTest')];\n                if (fakeAsyncModule && typeof fakeAsyncModule.fakeAsync === 'function') {\n                    testBody = fakeAsyncModule.fakeAsync(testBody);\n                }\n            }\n            if (done) {\n                return testProxyZone.run(testBody, applyThis, [done]);\n            }\n            else {\n                return testProxyZone.run(testBody, applyThis);\n            }\n        }\n        /**\n         * Gets a function wrapping the body of a Jasmine `it/beforeEach/afterEach` block to\n         * execute in a ProxyZone zone.\n         * This will run in `testProxyZone`. The `testProxyZone` will be reset by the `ZoneQueueRunner`\n         */\n        function wrapTestInZone(testBody) {\n            // The `done` callback is only passed through if the function expects at least one argument.\n            // Note we have to make a function with correct number of arguments, otherwise jasmine will\n            // think that all functions are sync or async.\n            return (testBody &&\n                (testBody.length\n                    ? function (done) {\n                        return runInTestZone(testBody, this, this.queueRunner, done);\n                    }\n                    : function () {\n                        return runInTestZone(testBody, this, this.queueRunner);\n                    }));\n        }\n        const QueueRunner = jasmine.QueueRunner;\n        jasmine.QueueRunner = (function (_super) {\n            __extends(ZoneQueueRunner, _super);\n            function ZoneQueueRunner(attrs) {\n                if (attrs.onComplete) {\n                    attrs.onComplete = ((fn) => () => {\n                        // All functions are done, clear the test zone.\n                        this.testProxyZone = null;\n                        this.testProxyZoneSpec = null;\n                        ambientZone.scheduleMicroTask('jasmine.onComplete', fn);\n                    })(attrs.onComplete);\n                }\n                const nativeSetTimeout = global[Zone.__symbol__('setTimeout')];\n                const nativeClearTimeout = global[Zone.__symbol__('clearTimeout')];\n                if (nativeSetTimeout) {\n                    // should run setTimeout inside jasmine outside of zone\n                    attrs.timeout = {\n                        setTimeout: nativeSetTimeout ? nativeSetTimeout : global.setTimeout,\n                        clearTimeout: nativeClearTimeout ? nativeClearTimeout : global.clearTimeout,\n                    };\n                }\n                // create a userContext to hold the queueRunner itself\n                // so we can access the testProxy in it/xit/beforeEach ...\n                if (jasmine.UserContext) {\n                    if (!attrs.userContext) {\n                        attrs.userContext = new jasmine.UserContext();\n                    }\n                    attrs.userContext.queueRunner = this;\n                }\n                else {\n                    if (!attrs.userContext) {\n                        attrs.userContext = {};\n                    }\n                    attrs.userContext.queueRunner = this;\n                }\n                // patch attrs.onException\n                const onException = attrs.onException;\n                attrs.onException = function (error) {\n                    if (error &&\n                        error.message ===\n                            'Timeout - Async callback was not invoked within timeout specified by jasmine.DEFAULT_TIMEOUT_INTERVAL.') {\n                        // jasmine timeout, we can make the error message more\n                        // reasonable to tell what tasks are pending\n                        const proxyZoneSpec = this && this.testProxyZoneSpec;\n                        if (proxyZoneSpec) {\n                            const pendingTasksInfo = proxyZoneSpec.getAndClearPendingTasksInfo();\n                            try {\n                                // try catch here in case error.message is not writable\n                                error.message += pendingTasksInfo;\n                            }\n                            catch (err) { }\n                        }\n                    }\n                    if (onException) {\n                        onException.call(this, error);\n                    }\n                };\n                _super.call(this, attrs);\n            }\n            ZoneQueueRunner.prototype.execute = function () {\n                let zone = Zone.current;\n                let isChildOfAmbientZone = false;\n                while (zone) {\n                    if (zone === ambientZone) {\n                        isChildOfAmbientZone = true;\n                        break;\n                    }\n                    zone = zone.parent;\n                }\n                if (!isChildOfAmbientZone)\n                    throw new Error('Unexpected Zone: ' + Zone.current.name);\n                // This is the zone which will be used for running individual tests.\n                // It will be a proxy zone, so that the tests function can retroactively install\n                // different zones.\n                // Example:\n                //   - In beforeEach() do childZone = Zone.current.fork(...);\n                //   - In it() try to do fakeAsync(). The issue is that because the beforeEach forked the\n                //     zone outside of fakeAsync it will be able to escape the fakeAsync rules.\n                //   - Because ProxyZone is parent fo `childZone` fakeAsync can retroactively add\n                //     fakeAsync behavior to the childZone.\n                this.testProxyZoneSpec = new ProxyZoneSpec();\n                this.testProxyZone = ambientZone.fork(this.testProxyZoneSpec);\n                if (!Zone.currentTask) {\n                    // if we are not running in a task then if someone would register a\n                    // element.addEventListener and then calling element.click() the\n                    // addEventListener callback would think that it is the top most task and would\n                    // drain the microtask queue on element.click() which would be incorrect.\n                    // For this reason we always force a task when running jasmine tests.\n                    Zone.current.scheduleMicroTask('jasmine.execute().forceTask', () => QueueRunner.prototype.execute.call(this));\n                }\n                else {\n                    _super.prototype.execute.call(this);\n                }\n            };\n            return ZoneQueueRunner;\n        })(QueueRunner);\n    });\n}\n\nfunction patchJest(Zone) {\n    Zone.__load_patch('jest', (context, Zone, api) => {\n        if (typeof jest === 'undefined' || jest['__zone_patch__']) {\n            return;\n        }\n        // From jest 29 and jest-preset-angular v13, the module transform logic\n        // changed, and now jest-preset-angular use the use the tsconfig target\n        // other than the hardcoded one, https://github.com/thymikee/jest-preset-angular/issues/2010\n        // But jest-angular-preset doesn't introduce the @babel/plugin-transform-async-to-generator\n        // which is needed by angular since `async/await` still need to be transformed\n        // to promise for ES2017+ target.\n        // So for now, we disable to output the uncaught error console log for a temp solution,\n        // until jest-preset-angular find a proper solution.\n        Zone[api.symbol('ignoreConsoleErrorUncaughtError')] = true;\n        jest['__zone_patch__'] = true;\n        const ProxyZoneSpec = Zone['ProxyZoneSpec'];\n        const SyncTestZoneSpec = Zone['SyncTestZoneSpec'];\n        if (!ProxyZoneSpec) {\n            throw new Error('Missing ProxyZoneSpec');\n        }\n        const rootZone = Zone.current;\n        const syncZone = rootZone.fork(new SyncTestZoneSpec('jest.describe'));\n        const proxyZoneSpec = new ProxyZoneSpec();\n        const proxyZone = rootZone.fork(proxyZoneSpec);\n        function wrapDescribeFactoryInZone(originalJestFn) {\n            return function (...tableArgs) {\n                const originalDescribeFn = originalJestFn.apply(this, tableArgs);\n                return function (...args) {\n                    args[1] = wrapDescribeInZone(args[1]);\n                    return originalDescribeFn.apply(this, args);\n                };\n            };\n        }\n        function wrapTestFactoryInZone(originalJestFn) {\n            return function (...tableArgs) {\n                return function (...args) {\n                    args[1] = wrapTestInZone(args[1]);\n                    return originalJestFn.apply(this, tableArgs).apply(this, args);\n                };\n            };\n        }\n        /**\n         * Gets a function wrapping the body of a jest `describe` block to execute in a\n         * synchronous-only zone.\n         */\n        function wrapDescribeInZone(describeBody) {\n            return function (...args) {\n                return syncZone.run(describeBody, this, args);\n            };\n        }\n        /**\n         * Gets a function wrapping the body of a jest `it/beforeEach/afterEach` block to\n         * execute in a ProxyZone zone.\n         * This will run in the `proxyZone`.\n         */\n        function wrapTestInZone(testBody, isTestFunc = false) {\n            if (typeof testBody !== 'function') {\n                return testBody;\n            }\n            const wrappedFunc = function () {\n                if (Zone[api.symbol('useFakeTimersCalled')] === true &&\n                    testBody &&\n                    !testBody.isFakeAsync) {\n                    // jest.useFakeTimers is called, run into fakeAsyncTest automatically.\n                    const fakeAsyncModule = Zone[Zone.__symbol__('fakeAsyncTest')];\n                    if (fakeAsyncModule && typeof fakeAsyncModule.fakeAsync === 'function') {\n                        testBody = fakeAsyncModule.fakeAsync(testBody);\n                    }\n                }\n                proxyZoneSpec.isTestFunc = isTestFunc;\n                return proxyZone.run(testBody, null, arguments);\n            };\n            // Update the length of wrappedFunc to be the same as the length of the testBody\n            // So jest core can handle whether the test function has `done()` or not correctly\n            Object.defineProperty(wrappedFunc, 'length', {\n                configurable: true,\n                writable: true,\n                enumerable: false,\n            });\n            wrappedFunc.length = testBody.length;\n            return wrappedFunc;\n        }\n        ['describe', 'xdescribe', 'fdescribe'].forEach((methodName) => {\n            let originalJestFn = context[methodName];\n            if (context[Zone.__symbol__(methodName)]) {\n                return;\n            }\n            context[Zone.__symbol__(methodName)] = originalJestFn;\n            context[methodName] = function (...args) {\n                args[1] = wrapDescribeInZone(args[1]);\n                return originalJestFn.apply(this, args);\n            };\n            context[methodName].each = wrapDescribeFactoryInZone(originalJestFn.each);\n        });\n        context.describe.only = context.fdescribe;\n        context.describe.skip = context.xdescribe;\n        ['it', 'xit', 'fit', 'test', 'xtest'].forEach((methodName) => {\n            let originalJestFn = context[methodName];\n            if (context[Zone.__symbol__(methodName)]) {\n                return;\n            }\n            context[Zone.__symbol__(methodName)] = originalJestFn;\n            context[methodName] = function (...args) {\n                args[1] = wrapTestInZone(args[1], true);\n                return originalJestFn.apply(this, args);\n            };\n            context[methodName].each = wrapTestFactoryInZone(originalJestFn.each);\n            context[methodName].todo = originalJestFn.todo;\n        });\n        context.it.only = context.fit;\n        context.it.skip = context.xit;\n        context.test.only = context.fit;\n        context.test.skip = context.xit;\n        ['beforeEach', 'afterEach', 'beforeAll', 'afterAll'].forEach((methodName) => {\n            let originalJestFn = context[methodName];\n            if (context[Zone.__symbol__(methodName)]) {\n                return;\n            }\n            context[Zone.__symbol__(methodName)] = originalJestFn;\n            context[methodName] = function (...args) {\n                args[0] = wrapTestInZone(args[0]);\n                return originalJestFn.apply(this, args);\n            };\n        });\n        Zone.patchJestObject = function patchJestObject(Timer, isModern = false) {\n            // check whether currently the test is inside fakeAsync()\n            function isPatchingFakeTimer() {\n                const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                return !!fakeAsyncZoneSpec;\n            }\n            // check whether the current function is inside `test/it` or other methods\n            // such as `describe/beforeEach`\n            function isInTestFunc() {\n                const proxyZoneSpec = Zone.current.get('ProxyZoneSpec');\n                return proxyZoneSpec && proxyZoneSpec.isTestFunc;\n            }\n            if (Timer[api.symbol('fakeTimers')]) {\n                return;\n            }\n            Timer[api.symbol('fakeTimers')] = true;\n            // patch jest fakeTimer internal method to make sure no console.warn print out\n            api.patchMethod(Timer, '_checkFakeTimers', (delegate) => {\n                return function (self, args) {\n                    if (isPatchingFakeTimer()) {\n                        return true;\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch useFakeTimers(), set useFakeTimersCalled flag, and make test auto run into fakeAsync\n            api.patchMethod(Timer, 'useFakeTimers', (delegate) => {\n                return function (self, args) {\n                    Zone[api.symbol('useFakeTimersCalled')] = true;\n                    if (isModern || isInTestFunc()) {\n                        return delegate.apply(self, args);\n                    }\n                    return self;\n                };\n            });\n            // patch useRealTimers(), unset useFakeTimers flag\n            api.patchMethod(Timer, 'useRealTimers', (delegate) => {\n                return function (self, args) {\n                    Zone[api.symbol('useFakeTimersCalled')] = false;\n                    if (isModern || isInTestFunc()) {\n                        return delegate.apply(self, args);\n                    }\n                    return self;\n                };\n            });\n            // patch setSystemTime(), call setCurrentRealTime() in the fakeAsyncTest\n            api.patchMethod(Timer, 'setSystemTime', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec && isPatchingFakeTimer()) {\n                        fakeAsyncZoneSpec.setFakeBaseSystemTime(args[0]);\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch getSystemTime(), call getCurrentRealTime() in the fakeAsyncTest\n            api.patchMethod(Timer, 'getRealSystemTime', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec && isPatchingFakeTimer()) {\n                        return fakeAsyncZoneSpec.getRealSystemTime();\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch runAllTicks(), run all microTasks inside fakeAsync\n            api.patchMethod(Timer, 'runAllTicks', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.flushMicrotasks();\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch runAllTimers(), run all macroTasks inside fakeAsync\n            api.patchMethod(Timer, 'runAllTimers', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.flush(100, true);\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch advanceTimersByTime(), call tick() in the fakeAsyncTest\n            api.patchMethod(Timer, 'advanceTimersByTime', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.tick(args[0]);\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch runOnlyPendingTimers(), call flushOnlyPendingTimers() in the fakeAsyncTest\n            api.patchMethod(Timer, 'runOnlyPendingTimers', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.flushOnlyPendingTimers();\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch advanceTimersToNextTimer(), call tickToNext() in the fakeAsyncTest\n            api.patchMethod(Timer, 'advanceTimersToNextTimer', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.tickToNext(args[0]);\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch clearAllTimers(), call removeAllTimers() in the fakeAsyncTest\n            api.patchMethod(Timer, 'clearAllTimers', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        fakeAsyncZoneSpec.removeAllTimers();\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n            // patch getTimerCount(), call getTimerCount() in the fakeAsyncTest\n            api.patchMethod(Timer, 'getTimerCount', (delegate) => {\n                return function (self, args) {\n                    const fakeAsyncZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n                    if (fakeAsyncZoneSpec) {\n                        return fakeAsyncZoneSpec.getTimerCount();\n                    }\n                    else {\n                        return delegate.apply(self, args);\n                    }\n                };\n            });\n        };\n    });\n}\n\nfunction patchMocha(Zone) {\n    Zone.__load_patch('mocha', (global, Zone) => {\n        const Mocha = global.Mocha;\n        if (typeof Mocha === 'undefined') {\n            // return if Mocha is not available, because now zone-testing\n            // will load mocha patch with jasmine/jest patch\n            return;\n        }\n        if (typeof Zone === 'undefined') {\n            throw new Error('Missing Zone.js');\n        }\n        const ProxyZoneSpec = Zone['ProxyZoneSpec'];\n        const SyncTestZoneSpec = Zone['SyncTestZoneSpec'];\n        if (!ProxyZoneSpec) {\n            throw new Error('Missing ProxyZoneSpec');\n        }\n        if (Mocha['__zone_patch__']) {\n            throw new Error('\"Mocha\" has already been patched with \"Zone\".');\n        }\n        Mocha['__zone_patch__'] = true;\n        const rootZone = Zone.current;\n        const syncZone = rootZone.fork(new SyncTestZoneSpec('Mocha.describe'));\n        let testZone = null;\n        const suiteZone = rootZone.fork(new ProxyZoneSpec());\n        const mochaOriginal = {\n            after: global.after,\n            afterEach: global.afterEach,\n            before: global.before,\n            beforeEach: global.beforeEach,\n            describe: global.describe,\n            it: global.it,\n        };\n        function modifyArguments(args, syncTest, asyncTest) {\n            for (let i = 0; i < args.length; i++) {\n                let arg = args[i];\n                if (typeof arg === 'function') {\n                    // The `done` callback is only passed through if the function expects at\n                    // least one argument.\n                    // Note we have to make a function with correct number of arguments,\n                    // otherwise mocha will\n                    // think that all functions are sync or async.\n                    args[i] = arg.length === 0 ? syncTest(arg) : asyncTest(arg);\n                    // Mocha uses toString to view the test body in the result list, make sure we return the\n                    // correct function body\n                    args[i].toString = function () {\n                        return arg.toString();\n                    };\n                }\n            }\n            return args;\n        }\n        function wrapDescribeInZone(args) {\n            const syncTest = function (fn) {\n                return function () {\n                    return syncZone.run(fn, this, arguments);\n                };\n            };\n            return modifyArguments(args, syncTest);\n        }\n        function wrapTestInZone(args) {\n            const asyncTest = function (fn) {\n                return function (done) {\n                    return testZone.run(fn, this, [done]);\n                };\n            };\n            const syncTest = function (fn) {\n                return function () {\n                    return testZone.run(fn, this);\n                };\n            };\n            return modifyArguments(args, syncTest, asyncTest);\n        }\n        function wrapSuiteInZone(args) {\n            const asyncTest = function (fn) {\n                return function (done) {\n                    return suiteZone.run(fn, this, [done]);\n                };\n            };\n            const syncTest = function (fn) {\n                return function () {\n                    return suiteZone.run(fn, this);\n                };\n            };\n            return modifyArguments(args, syncTest, asyncTest);\n        }\n        global.describe = global.suite = function () {\n            return mochaOriginal.describe.apply(this, wrapDescribeInZone(arguments));\n        };\n        global.xdescribe =\n            global.suite.skip =\n                global.describe.skip =\n                    function () {\n                        return mochaOriginal.describe.skip.apply(this, wrapDescribeInZone(arguments));\n                    };\n        global.describe.only = global.suite.only = function () {\n            return mochaOriginal.describe.only.apply(this, wrapDescribeInZone(arguments));\n        };\n        global.it =\n            global.specify =\n                global.test =\n                    function () {\n                        return mochaOriginal.it.apply(this, wrapTestInZone(arguments));\n                    };\n        global.xit =\n            global.xspecify =\n                global.it.skip =\n                    function () {\n                        return mochaOriginal.it.skip.apply(this, wrapTestInZone(arguments));\n                    };\n        global.it.only = global.test.only = function () {\n            return mochaOriginal.it.only.apply(this, wrapTestInZone(arguments));\n        };\n        global.after = global.suiteTeardown = function () {\n            return mochaOriginal.after.apply(this, wrapSuiteInZone(arguments));\n        };\n        global.afterEach = global.teardown = function () {\n            return mochaOriginal.afterEach.apply(this, wrapTestInZone(arguments));\n        };\n        global.before = global.suiteSetup = function () {\n            return mochaOriginal.before.apply(this, wrapSuiteInZone(arguments));\n        };\n        global.beforeEach = global.setup = function () {\n            return mochaOriginal.beforeEach.apply(this, wrapTestInZone(arguments));\n        };\n        ((originalRunTest, originalRun) => {\n            Mocha.Runner.prototype.runTest = function (fn) {\n                Zone.current.scheduleMicroTask('mocha.forceTask', () => {\n                    originalRunTest.call(this, fn);\n                });\n            };\n            Mocha.Runner.prototype.run = function (fn) {\n                this.on('test', (e) => {\n                    testZone = rootZone.fork(new ProxyZoneSpec());\n                });\n                this.on('fail', (test, err) => {\n                    const proxyZoneSpec = testZone && testZone.get('ProxyZoneSpec');\n                    if (proxyZoneSpec && err) {\n                        try {\n                            // try catch here in case err.message is not writable\n                            err.message += proxyZoneSpec.getAndClearPendingTasksInfo();\n                        }\n                        catch (error) { }\n                    }\n                });\n                return originalRun.call(this, fn);\n            };\n        })(Mocha.Runner.prototype.runTest, Mocha.Runner.prototype.run);\n    });\n}\n\nconst global$2 = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global$2['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\n\nconst __global = (typeof window !== 'undefined' && window) || (typeof self !== 'undefined' && self) || global;\nclass AsyncTestZoneSpec {\n    // Needs to be a getter and not a plain property in order run this just-in-time. Otherwise\n    // `__symbol__` would be evaluated during top-level execution prior to the Zone prefix being\n    // changed for tests.\n    static get symbolParentUnresolved() {\n        return __symbol__('parentUnresolved');\n    }\n    constructor(finishCallback, failCallback, namePrefix) {\n        this.finishCallback = finishCallback;\n        this.failCallback = failCallback;\n        this._pendingMicroTasks = false;\n        this._pendingMacroTasks = false;\n        this._alreadyErrored = false;\n        this._isSync = false;\n        this._existingFinishTimer = null;\n        this.entryFunction = null;\n        this.runZone = Zone.current;\n        this.unresolvedChainedPromiseCount = 0;\n        this.supportWaitUnresolvedChainedPromise = false;\n        this.name = 'asyncTestZone for ' + namePrefix;\n        this.properties = { 'AsyncTestZoneSpec': this };\n        this.supportWaitUnresolvedChainedPromise =\n            __global[__symbol__('supportWaitUnResolvedChainedPromise')] === true;\n    }\n    isUnresolvedChainedPromisePending() {\n        return this.unresolvedChainedPromiseCount > 0;\n    }\n    _finishCallbackIfDone() {\n        // NOTE: Technically the `onHasTask` could fire together with the initial synchronous\n        // completion in `onInvoke`. `onHasTask` might call this method when it captured e.g.\n        // microtasks in the proxy zone that now complete as part of this async zone run.\n        // Consider the following scenario:\n        //    1. A test `beforeEach` schedules a microtask in the ProxyZone.\n        //    2. An actual empty `it` spec executes in the AsyncTestZone` (using e.g. `waitForAsync`).\n        //    3. The `onInvoke` invokes `_finishCallbackIfDone` because the spec runs synchronously.\n        //    4. We wait the scheduled timeout (see below) to account for unhandled promises.\n        //    5. The microtask from (1) finishes and `onHasTask` is invoked.\n        //    --> We register a second `_finishCallbackIfDone` even though we have scheduled a timeout.\n        // If the finish timeout from below is already scheduled, terminate the existing scheduled\n        // finish invocation, avoiding calling `jasmine` `done` multiple times. *Note* that we would\n        // want to schedule a new finish callback in case the task state changes again.\n        if (this._existingFinishTimer !== null) {\n            clearTimeout(this._existingFinishTimer);\n            this._existingFinishTimer = null;\n        }\n        if (!(this._pendingMicroTasks ||\n            this._pendingMacroTasks ||\n            (this.supportWaitUnresolvedChainedPromise && this.isUnresolvedChainedPromisePending()))) {\n            // We wait until the next tick because we would like to catch unhandled promises which could\n            // cause test logic to be executed. In such cases we cannot finish with tasks pending then.\n            this.runZone.run(() => {\n                this._existingFinishTimer = setTimeout(() => {\n                    if (!this._alreadyErrored && !(this._pendingMicroTasks || this._pendingMacroTasks)) {\n                        this.finishCallback();\n                    }\n                }, 0);\n            });\n        }\n    }\n    patchPromiseForTest() {\n        if (!this.supportWaitUnresolvedChainedPromise) {\n            return;\n        }\n        const patchPromiseForTest = Promise[Zone.__symbol__('patchPromiseForTest')];\n        if (patchPromiseForTest) {\n            patchPromiseForTest();\n        }\n    }\n    unPatchPromiseForTest() {\n        if (!this.supportWaitUnresolvedChainedPromise) {\n            return;\n        }\n        const unPatchPromiseForTest = Promise[Zone.__symbol__('unPatchPromiseForTest')];\n        if (unPatchPromiseForTest) {\n            unPatchPromiseForTest();\n        }\n    }\n    onScheduleTask(delegate, current, target, task) {\n        if (task.type !== 'eventTask') {\n            this._isSync = false;\n        }\n        if (task.type === 'microTask' && task.data && task.data instanceof Promise) {\n            // check whether the promise is a chained promise\n            if (task.data[AsyncTestZoneSpec.symbolParentUnresolved] === true) {\n                // chained promise is being scheduled\n                this.unresolvedChainedPromiseCount--;\n            }\n        }\n        return delegate.scheduleTask(target, task);\n    }\n    onInvokeTask(delegate, current, target, task, applyThis, applyArgs) {\n        if (task.type !== 'eventTask') {\n            this._isSync = false;\n        }\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n    }\n    onCancelTask(delegate, current, target, task) {\n        if (task.type !== 'eventTask') {\n            this._isSync = false;\n        }\n        return delegate.cancelTask(target, task);\n    }\n    // Note - we need to use onInvoke at the moment to call finish when a test is\n    // fully synchronous. TODO(juliemr): remove this when the logic for\n    // onHasTask changes and it calls whenever the task queues are dirty.\n    // updated by(JiaLiPassion), only call finish callback when no task\n    // was scheduled/invoked/canceled.\n    onInvoke(parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\n        if (!this.entryFunction) {\n            this.entryFunction = delegate;\n        }\n        try {\n            this._isSync = true;\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\n        }\n        finally {\n            // We need to check the delegate is the same as entryFunction or not.\n            // Consider the following case.\n            //\n            // asyncTestZone.run(() => { // Here the delegate will be the entryFunction\n            //   Zone.current.run(() => { // Here the delegate will not be the entryFunction\n            //   });\n            // });\n            //\n            // We only want to check whether there are async tasks scheduled\n            // for the entry function.\n            if (this._isSync && this.entryFunction === delegate) {\n                this._finishCallbackIfDone();\n            }\n        }\n    }\n    onHandleError(parentZoneDelegate, currentZone, targetZone, error) {\n        // Let the parent try to handle the error.\n        const result = parentZoneDelegate.handleError(targetZone, error);\n        if (result) {\n            this.failCallback(error);\n            this._alreadyErrored = true;\n        }\n        return false;\n    }\n    onHasTask(delegate, current, target, hasTaskState) {\n        delegate.hasTask(target, hasTaskState);\n        // We should only trigger finishCallback when the target zone is the AsyncTestZone\n        // Consider the following cases.\n        //\n        // const childZone = asyncTestZone.fork({\n        //   name: 'child',\n        //   onHasTask: ...\n        // });\n        //\n        // So we have nested zones declared the onHasTask hook, in this case,\n        // the onHasTask will be triggered twice, and cause the finishCallbackIfDone()\n        // is also be invoked twice. So we need to only trigger the finishCallbackIfDone()\n        // when the current zone is the same as the target zone.\n        if (current !== target) {\n            return;\n        }\n        if (hasTaskState.change == 'microTask') {\n            this._pendingMicroTasks = hasTaskState.microTask;\n            this._finishCallbackIfDone();\n        }\n        else if (hasTaskState.change == 'macroTask') {\n            this._pendingMacroTasks = hasTaskState.macroTask;\n            this._finishCallbackIfDone();\n        }\n    }\n}\nfunction patchAsyncTest(Zone) {\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['AsyncTestZoneSpec'] = AsyncTestZoneSpec;\n    Zone.__load_patch('asynctest', (global, Zone, api) => {\n        /**\n         * Wraps a test function in an asynchronous test zone. The test will automatically\n         * complete when all asynchronous calls within this zone are done.\n         */\n        Zone[api.symbol('asyncTest')] = function asyncTest(fn) {\n            // If we're running using the Jasmine test framework, adapt to call the 'done'\n            // function when asynchronous activity is finished.\n            if (global.jasmine) {\n                // Not using an arrow function to preserve context passed from call site\n                return function (done) {\n                    if (!done) {\n                        // if we run beforeEach in @angular/core/testing/testing_internal then we get no done\n                        // fake it here and assume sync.\n                        done = function () { };\n                        done.fail = function (e) {\n                            throw e;\n                        };\n                    }\n                    runInTestZone(fn, this, done, (err) => {\n                        if (typeof err === 'string') {\n                            return done.fail(new Error(err));\n                        }\n                        else {\n                            done.fail(err);\n                        }\n                    });\n                };\n            }\n            // Otherwise, return a promise which will resolve when asynchronous activity\n            // is finished. This will be correctly consumed by the Mocha framework with\n            // it('...', async(myFn)); or can be used in a custom framework.\n            // Not using an arrow function to preserve context passed from call site\n            return function () {\n                return new Promise((finishCallback, failCallback) => {\n                    runInTestZone(fn, this, finishCallback, failCallback);\n                });\n            };\n        };\n        function runInTestZone(fn, context, finishCallback, failCallback) {\n            const currentZone = Zone.current;\n            const AsyncTestZoneSpec = Zone['AsyncTestZoneSpec'];\n            if (AsyncTestZoneSpec === undefined) {\n                throw new Error('AsyncTestZoneSpec is needed for the async() test helper but could not be found. ' +\n                    'Please make sure that your environment includes zone.js/plugins/async-test');\n            }\n            const ProxyZoneSpec = Zone['ProxyZoneSpec'];\n            if (!ProxyZoneSpec) {\n                throw new Error('ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n                    'Please make sure that your environment includes zone.js/plugins/proxy');\n            }\n            const proxyZoneSpec = ProxyZoneSpec.get();\n            ProxyZoneSpec.assertPresent();\n            // We need to create the AsyncTestZoneSpec outside the ProxyZone.\n            // If we do it in ProxyZone then we will get to infinite recursion.\n            const proxyZone = Zone.current.getZoneWith('ProxyZoneSpec');\n            const previousDelegate = proxyZoneSpec.getDelegate();\n            proxyZone.parent.run(() => {\n                const testZoneSpec = new AsyncTestZoneSpec(() => {\n                    // Need to restore the original zone.\n                    if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                        // Only reset the zone spec if it's\n                        // still this one. Otherwise, assume\n                        // it's OK.\n                        proxyZoneSpec.setDelegate(previousDelegate);\n                    }\n                    testZoneSpec.unPatchPromiseForTest();\n                    currentZone.run(() => {\n                        finishCallback();\n                    });\n                }, (error) => {\n                    // Need to restore the original zone.\n                    if (proxyZoneSpec.getDelegate() == testZoneSpec) {\n                        // Only reset the zone spec if it's sill this one. Otherwise, assume it's OK.\n                        proxyZoneSpec.setDelegate(previousDelegate);\n                    }\n                    testZoneSpec.unPatchPromiseForTest();\n                    currentZone.run(() => {\n                        failCallback(error);\n                    });\n                }, 'test');\n                proxyZoneSpec.setDelegate(testZoneSpec);\n                testZoneSpec.patchPromiseForTest();\n            });\n            return Zone.current.runGuarded(fn, context);\n        }\n    });\n}\n\nconst global$1 = (typeof window === 'object' && window) || (typeof self === 'object' && self) || globalThis.global;\nconst OriginalDate = global$1.Date;\n// Since when we compile this file to `es2015`, and if we define\n// this `FakeDate` as `class FakeDate`, and then set `FakeDate.prototype`\n// there will be an error which is `Cannot assign to read only property 'prototype'`\n// so we need to use function implementation here.\nfunction FakeDate() {\n    if (arguments.length === 0) {\n        const d = new OriginalDate();\n        d.setTime(FakeDate.now());\n        return d;\n    }\n    else {\n        const args = Array.prototype.slice.call(arguments);\n        return new OriginalDate(...args);\n    }\n}\nFakeDate.now = function () {\n    const fakeAsyncTestZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n    if (fakeAsyncTestZoneSpec) {\n        return fakeAsyncTestZoneSpec.getFakeSystemTime();\n    }\n    return OriginalDate.now.apply(this, arguments);\n};\nFakeDate.UTC = OriginalDate.UTC;\nFakeDate.parse = OriginalDate.parse;\n// keep a reference for zone patched timer function\nlet patchedTimers;\nconst timeoutCallback = function () { };\nclass Scheduler {\n    // Next scheduler id.\n    static { this.nextNodeJSId = 1; }\n    static { this.nextId = -1; }\n    constructor() {\n        // Scheduler queue with the tuple of end time and callback function - sorted by end time.\n        this._schedulerQueue = [];\n        // Current simulated time in millis.\n        this._currentTickTime = 0;\n        // Current fake system base time in millis.\n        this._currentFakeBaseSystemTime = OriginalDate.now();\n        // track requeuePeriodicTimer\n        this._currentTickRequeuePeriodicEntries = [];\n    }\n    static getNextId() {\n        const id = patchedTimers.nativeSetTimeout.call(global$1, timeoutCallback, 0);\n        patchedTimers.nativeClearTimeout.call(global$1, id);\n        if (typeof id === 'number') {\n            return id;\n        }\n        // in NodeJS, we just use a number for fakeAsync, since it will not\n        // conflict with native TimeoutId\n        return Scheduler.nextNodeJSId++;\n    }\n    getCurrentTickTime() {\n        return this._currentTickTime;\n    }\n    getFakeSystemTime() {\n        return this._currentFakeBaseSystemTime + this._currentTickTime;\n    }\n    setFakeBaseSystemTime(fakeBaseSystemTime) {\n        this._currentFakeBaseSystemTime = fakeBaseSystemTime;\n    }\n    getRealSystemTime() {\n        return OriginalDate.now();\n    }\n    scheduleFunction(cb, delay, options) {\n        options = {\n            ...{\n                args: [],\n                isPeriodic: false,\n                isRequestAnimationFrame: false,\n                id: -1,\n                isRequeuePeriodic: false,\n            },\n            ...options,\n        };\n        let currentId = options.id < 0 ? Scheduler.nextId : options.id;\n        Scheduler.nextId = Scheduler.getNextId();\n        let endTime = this._currentTickTime + delay;\n        // Insert so that scheduler queue remains sorted by end time.\n        let newEntry = {\n            endTime: endTime,\n            id: currentId,\n            func: cb,\n            args: options.args,\n            delay: delay,\n            isPeriodic: options.isPeriodic,\n            isRequestAnimationFrame: options.isRequestAnimationFrame,\n        };\n        if (options.isRequeuePeriodic) {\n            this._currentTickRequeuePeriodicEntries.push(newEntry);\n        }\n        let i = 0;\n        for (; i < this._schedulerQueue.length; i++) {\n            let currentEntry = this._schedulerQueue[i];\n            if (newEntry.endTime < currentEntry.endTime) {\n                break;\n            }\n        }\n        this._schedulerQueue.splice(i, 0, newEntry);\n        return currentId;\n    }\n    removeScheduledFunctionWithId(id) {\n        for (let i = 0; i < this._schedulerQueue.length; i++) {\n            if (this._schedulerQueue[i].id == id) {\n                this._schedulerQueue.splice(i, 1);\n                break;\n            }\n        }\n    }\n    removeAll() {\n        this._schedulerQueue = [];\n    }\n    getTimerCount() {\n        return this._schedulerQueue.length;\n    }\n    tickToNext(step = 1, doTick, tickOptions) {\n        if (this._schedulerQueue.length < step) {\n            return;\n        }\n        // Find the last task currently queued in the scheduler queue and tick\n        // till that time.\n        const startTime = this._currentTickTime;\n        const targetTask = this._schedulerQueue[step - 1];\n        this.tick(targetTask.endTime - startTime, doTick, tickOptions);\n    }\n    tick(millis = 0, doTick, tickOptions) {\n        let finalTime = this._currentTickTime + millis;\n        let lastCurrentTime = 0;\n        tickOptions = Object.assign({ processNewMacroTasksSynchronously: true }, tickOptions);\n        // we need to copy the schedulerQueue so nested timeout\n        // will not be wrongly called in the current tick\n        // https://github.com/angular/angular/issues/33799\n        const schedulerQueue = tickOptions.processNewMacroTasksSynchronously\n            ? this._schedulerQueue\n            : this._schedulerQueue.slice();\n        if (schedulerQueue.length === 0 && doTick) {\n            doTick(millis);\n            return;\n        }\n        while (schedulerQueue.length > 0) {\n            // clear requeueEntries before each loop\n            this._currentTickRequeuePeriodicEntries = [];\n            let current = schedulerQueue[0];\n            if (finalTime < current.endTime) {\n                // Done processing the queue since it's sorted by endTime.\n                break;\n            }\n            else {\n                // Time to run scheduled function. Remove it from the head of queue.\n                let current = schedulerQueue.shift();\n                if (!tickOptions.processNewMacroTasksSynchronously) {\n                    const idx = this._schedulerQueue.indexOf(current);\n                    if (idx >= 0) {\n                        this._schedulerQueue.splice(idx, 1);\n                    }\n                }\n                lastCurrentTime = this._currentTickTime;\n                this._currentTickTime = current.endTime;\n                if (doTick) {\n                    doTick(this._currentTickTime - lastCurrentTime);\n                }\n                let retval = current.func.apply(global$1, current.isRequestAnimationFrame ? [this._currentTickTime] : current.args);\n                if (!retval) {\n                    // Uncaught exception in the current scheduled function. Stop processing the queue.\n                    break;\n                }\n                // check is there any requeue periodic entry is added in\n                // current loop, if there is, we need to add to current loop\n                if (!tickOptions.processNewMacroTasksSynchronously) {\n                    this._currentTickRequeuePeriodicEntries.forEach((newEntry) => {\n                        let i = 0;\n                        for (; i < schedulerQueue.length; i++) {\n                            const currentEntry = schedulerQueue[i];\n                            if (newEntry.endTime < currentEntry.endTime) {\n                                break;\n                            }\n                        }\n                        schedulerQueue.splice(i, 0, newEntry);\n                    });\n                }\n            }\n        }\n        lastCurrentTime = this._currentTickTime;\n        this._currentTickTime = finalTime;\n        if (doTick) {\n            doTick(this._currentTickTime - lastCurrentTime);\n        }\n    }\n    flushOnlyPendingTimers(doTick) {\n        if (this._schedulerQueue.length === 0) {\n            return 0;\n        }\n        // Find the last task currently queued in the scheduler queue and tick\n        // till that time.\n        const startTime = this._currentTickTime;\n        const lastTask = this._schedulerQueue[this._schedulerQueue.length - 1];\n        this.tick(lastTask.endTime - startTime, doTick, { processNewMacroTasksSynchronously: false });\n        return this._currentTickTime - startTime;\n    }\n    flush(limit = 20, flushPeriodic = false, doTick) {\n        if (flushPeriodic) {\n            return this.flushPeriodic(doTick);\n        }\n        else {\n            return this.flushNonPeriodic(limit, doTick);\n        }\n    }\n    flushPeriodic(doTick) {\n        if (this._schedulerQueue.length === 0) {\n            return 0;\n        }\n        // Find the last task currently queued in the scheduler queue and tick\n        // till that time.\n        const startTime = this._currentTickTime;\n        const lastTask = this._schedulerQueue[this._schedulerQueue.length - 1];\n        this.tick(lastTask.endTime - startTime, doTick);\n        return this._currentTickTime - startTime;\n    }\n    flushNonPeriodic(limit, doTick) {\n        const startTime = this._currentTickTime;\n        let lastCurrentTime = 0;\n        let count = 0;\n        while (this._schedulerQueue.length > 0) {\n            count++;\n            if (count > limit) {\n                throw new Error('flush failed after reaching the limit of ' +\n                    limit +\n                    ' tasks. Does your code use a polling timeout?');\n            }\n            // flush only non-periodic timers.\n            // If the only remaining tasks are periodic(or requestAnimationFrame), finish flushing.\n            if (this._schedulerQueue.filter((task) => !task.isPeriodic && !task.isRequestAnimationFrame)\n                .length === 0) {\n                break;\n            }\n            const current = this._schedulerQueue.shift();\n            lastCurrentTime = this._currentTickTime;\n            this._currentTickTime = current.endTime;\n            if (doTick) {\n                // Update any secondary schedulers like Jasmine mock Date.\n                doTick(this._currentTickTime - lastCurrentTime);\n            }\n            const retval = current.func.apply(global$1, current.args);\n            if (!retval) {\n                // Uncaught exception in the current scheduled function. Stop processing the queue.\n                break;\n            }\n        }\n        return this._currentTickTime - startTime;\n    }\n}\nclass FakeAsyncTestZoneSpec {\n    static assertInZone() {\n        if (Zone.current.get('FakeAsyncTestZoneSpec') == null) {\n            throw new Error('The code should be running in the fakeAsync zone to call this function');\n        }\n    }\n    constructor(namePrefix, trackPendingRequestAnimationFrame = false, macroTaskOptions) {\n        this.trackPendingRequestAnimationFrame = trackPendingRequestAnimationFrame;\n        this.macroTaskOptions = macroTaskOptions;\n        this._scheduler = new Scheduler();\n        this._microtasks = [];\n        this._lastError = null;\n        this._uncaughtPromiseErrors = Promise[Zone.__symbol__('uncaughtPromiseErrors')];\n        this.pendingPeriodicTimers = [];\n        this.pendingTimers = [];\n        this.patchDateLocked = false;\n        this.properties = { 'FakeAsyncTestZoneSpec': this };\n        this.name = 'fakeAsyncTestZone for ' + namePrefix;\n        // in case user can't access the construction of FakeAsyncTestSpec\n        // user can also define macroTaskOptions by define a global variable.\n        if (!this.macroTaskOptions) {\n            this.macroTaskOptions = global$1[Zone.__symbol__('FakeAsyncTestMacroTask')];\n        }\n    }\n    _fnAndFlush(fn, completers) {\n        return (...args) => {\n            fn.apply(global$1, args);\n            if (this._lastError === null) {\n                // Success\n                if (completers.onSuccess != null) {\n                    completers.onSuccess.apply(global$1);\n                }\n                // Flush microtasks only on success.\n                this.flushMicrotasks();\n            }\n            else {\n                // Failure\n                if (completers.onError != null) {\n                    completers.onError.apply(global$1);\n                }\n            }\n            // Return true if there were no errors, false otherwise.\n            return this._lastError === null;\n        };\n    }\n    static _removeTimer(timers, id) {\n        let index = timers.indexOf(id);\n        if (index > -1) {\n            timers.splice(index, 1);\n        }\n    }\n    _dequeueTimer(id) {\n        return () => {\n            FakeAsyncTestZoneSpec._removeTimer(this.pendingTimers, id);\n        };\n    }\n    _requeuePeriodicTimer(fn, interval, args, id) {\n        return () => {\n            // Requeue the timer callback if it's not been canceled.\n            if (this.pendingPeriodicTimers.indexOf(id) !== -1) {\n                this._scheduler.scheduleFunction(fn, interval, {\n                    args,\n                    isPeriodic: true,\n                    id,\n                    isRequeuePeriodic: true,\n                });\n            }\n        };\n    }\n    _dequeuePeriodicTimer(id) {\n        return () => {\n            FakeAsyncTestZoneSpec._removeTimer(this.pendingPeriodicTimers, id);\n        };\n    }\n    _setTimeout(fn, delay, args, isTimer = true) {\n        let removeTimerFn = this._dequeueTimer(Scheduler.nextId);\n        // Queue the callback and dequeue the timer on success and error.\n        let cb = this._fnAndFlush(fn, { onSuccess: removeTimerFn, onError: removeTimerFn });\n        let id = this._scheduler.scheduleFunction(cb, delay, { args, isRequestAnimationFrame: !isTimer });\n        if (isTimer) {\n            this.pendingTimers.push(id);\n        }\n        return id;\n    }\n    _clearTimeout(id) {\n        FakeAsyncTestZoneSpec._removeTimer(this.pendingTimers, id);\n        this._scheduler.removeScheduledFunctionWithId(id);\n    }\n    _setInterval(fn, interval, args) {\n        let id = Scheduler.nextId;\n        let completers = { onSuccess: null, onError: this._dequeuePeriodicTimer(id) };\n        let cb = this._fnAndFlush(fn, completers);\n        // Use the callback created above to requeue on success.\n        completers.onSuccess = this._requeuePeriodicTimer(cb, interval, args, id);\n        // Queue the callback and dequeue the periodic timer only on error.\n        this._scheduler.scheduleFunction(cb, interval, { args, isPeriodic: true });\n        this.pendingPeriodicTimers.push(id);\n        return id;\n    }\n    _clearInterval(id) {\n        FakeAsyncTestZoneSpec._removeTimer(this.pendingPeriodicTimers, id);\n        this._scheduler.removeScheduledFunctionWithId(id);\n    }\n    _resetLastErrorAndThrow() {\n        let error = this._lastError || this._uncaughtPromiseErrors[0];\n        this._uncaughtPromiseErrors.length = 0;\n        this._lastError = null;\n        throw error;\n    }\n    getCurrentTickTime() {\n        return this._scheduler.getCurrentTickTime();\n    }\n    getFakeSystemTime() {\n        return this._scheduler.getFakeSystemTime();\n    }\n    setFakeBaseSystemTime(realTime) {\n        this._scheduler.setFakeBaseSystemTime(realTime);\n    }\n    getRealSystemTime() {\n        return this._scheduler.getRealSystemTime();\n    }\n    static patchDate() {\n        if (!!global$1[Zone.__symbol__('disableDatePatching')]) {\n            // we don't want to patch global Date\n            // because in some case, global Date\n            // is already being patched, we need to provide\n            // an option to let user still use their\n            // own version of Date.\n            return;\n        }\n        if (global$1['Date'] === FakeDate) {\n            // already patched\n            return;\n        }\n        global$1['Date'] = FakeDate;\n        FakeDate.prototype = OriginalDate.prototype;\n        // try check and reset timers\n        // because jasmine.clock().install() may\n        // have replaced the global timer\n        FakeAsyncTestZoneSpec.checkTimerPatch();\n    }\n    static resetDate() {\n        if (global$1['Date'] === FakeDate) {\n            global$1['Date'] = OriginalDate;\n        }\n    }\n    static checkTimerPatch() {\n        if (!patchedTimers) {\n            throw new Error('Expected timers to have been patched.');\n        }\n        if (global$1.setTimeout !== patchedTimers.setTimeout) {\n            global$1.setTimeout = patchedTimers.setTimeout;\n            global$1.clearTimeout = patchedTimers.clearTimeout;\n        }\n        if (global$1.setInterval !== patchedTimers.setInterval) {\n            global$1.setInterval = patchedTimers.setInterval;\n            global$1.clearInterval = patchedTimers.clearInterval;\n        }\n    }\n    lockDatePatch() {\n        this.patchDateLocked = true;\n        FakeAsyncTestZoneSpec.patchDate();\n    }\n    unlockDatePatch() {\n        this.patchDateLocked = false;\n        FakeAsyncTestZoneSpec.resetDate();\n    }\n    tickToNext(steps = 1, doTick, tickOptions = { processNewMacroTasksSynchronously: true }) {\n        if (steps <= 0) {\n            return;\n        }\n        FakeAsyncTestZoneSpec.assertInZone();\n        this.flushMicrotasks();\n        this._scheduler.tickToNext(steps, doTick, tickOptions);\n        if (this._lastError !== null) {\n            this._resetLastErrorAndThrow();\n        }\n    }\n    tick(millis = 0, doTick, tickOptions = { processNewMacroTasksSynchronously: true }) {\n        FakeAsyncTestZoneSpec.assertInZone();\n        this.flushMicrotasks();\n        this._scheduler.tick(millis, doTick, tickOptions);\n        if (this._lastError !== null) {\n            this._resetLastErrorAndThrow();\n        }\n    }\n    flushMicrotasks() {\n        FakeAsyncTestZoneSpec.assertInZone();\n        const flushErrors = () => {\n            if (this._lastError !== null || this._uncaughtPromiseErrors.length) {\n                // If there is an error stop processing the microtask queue and rethrow the error.\n                this._resetLastErrorAndThrow();\n            }\n        };\n        while (this._microtasks.length > 0) {\n            let microtask = this._microtasks.shift();\n            microtask.func.apply(microtask.target, microtask.args);\n        }\n        flushErrors();\n    }\n    flush(limit, flushPeriodic, doTick) {\n        FakeAsyncTestZoneSpec.assertInZone();\n        this.flushMicrotasks();\n        const elapsed = this._scheduler.flush(limit, flushPeriodic, doTick);\n        if (this._lastError !== null) {\n            this._resetLastErrorAndThrow();\n        }\n        return elapsed;\n    }\n    flushOnlyPendingTimers(doTick) {\n        FakeAsyncTestZoneSpec.assertInZone();\n        this.flushMicrotasks();\n        const elapsed = this._scheduler.flushOnlyPendingTimers(doTick);\n        if (this._lastError !== null) {\n            this._resetLastErrorAndThrow();\n        }\n        return elapsed;\n    }\n    removeAllTimers() {\n        FakeAsyncTestZoneSpec.assertInZone();\n        this._scheduler.removeAll();\n        this.pendingPeriodicTimers = [];\n        this.pendingTimers = [];\n    }\n    getTimerCount() {\n        return this._scheduler.getTimerCount() + this._microtasks.length;\n    }\n    onScheduleTask(delegate, current, target, task) {\n        switch (task.type) {\n            case 'microTask':\n                let args = task.data && task.data.args;\n                // should pass additional arguments to callback if have any\n                // currently we know process.nextTick will have such additional\n                // arguments\n                let additionalArgs;\n                if (args) {\n                    let callbackIndex = task.data.cbIdx;\n                    if (typeof args.length === 'number' && args.length > callbackIndex + 1) {\n                        additionalArgs = Array.prototype.slice.call(args, callbackIndex + 1);\n                    }\n                }\n                this._microtasks.push({\n                    func: task.invoke,\n                    args: additionalArgs,\n                    target: task.data && task.data.target,\n                });\n                break;\n            case 'macroTask':\n                switch (task.source) {\n                    case 'setTimeout':\n                        task.data['handleId'] = this._setTimeout(task.invoke, task.data['delay'], Array.prototype.slice.call(task.data['args'], 2));\n                        break;\n                    case 'setImmediate':\n                        task.data['handleId'] = this._setTimeout(task.invoke, 0, Array.prototype.slice.call(task.data['args'], 1));\n                        break;\n                    case 'setInterval':\n                        task.data['handleId'] = this._setInterval(task.invoke, task.data['delay'], Array.prototype.slice.call(task.data['args'], 2));\n                        break;\n                    case 'XMLHttpRequest.send':\n                        throw new Error('Cannot make XHRs from within a fake async test. Request URL: ' +\n                            task.data['url']);\n                    case 'requestAnimationFrame':\n                    case 'webkitRequestAnimationFrame':\n                    case 'mozRequestAnimationFrame':\n                        // Simulate a requestAnimationFrame by using a setTimeout with 16 ms.\n                        // (60 frames per second)\n                        task.data['handleId'] = this._setTimeout(task.invoke, 16, task.data['args'], this.trackPendingRequestAnimationFrame);\n                        break;\n                    default:\n                        // user can define which macroTask they want to support by passing\n                        // macroTaskOptions\n                        const macroTaskOption = this.findMacroTaskOption(task);\n                        if (macroTaskOption) {\n                            const args = task.data && task.data['args'];\n                            const delay = args && args.length > 1 ? args[1] : 0;\n                            let callbackArgs = macroTaskOption.callbackArgs ? macroTaskOption.callbackArgs : args;\n                            if (!!macroTaskOption.isPeriodic) {\n                                // periodic macroTask, use setInterval to simulate\n                                task.data['handleId'] = this._setInterval(task.invoke, delay, callbackArgs);\n                                task.data.isPeriodic = true;\n                            }\n                            else {\n                                // not periodic, use setTimeout to simulate\n                                task.data['handleId'] = this._setTimeout(task.invoke, delay, callbackArgs);\n                            }\n                            break;\n                        }\n                        throw new Error('Unknown macroTask scheduled in fake async test: ' + task.source);\n                }\n                break;\n            case 'eventTask':\n                task = delegate.scheduleTask(target, task);\n                break;\n        }\n        return task;\n    }\n    onCancelTask(delegate, current, target, task) {\n        switch (task.source) {\n            case 'setTimeout':\n            case 'requestAnimationFrame':\n            case 'webkitRequestAnimationFrame':\n            case 'mozRequestAnimationFrame':\n                return this._clearTimeout(task.data['handleId']);\n            case 'setInterval':\n                return this._clearInterval(task.data['handleId']);\n            default:\n                // user can define which macroTask they want to support by passing\n                // macroTaskOptions\n                const macroTaskOption = this.findMacroTaskOption(task);\n                if (macroTaskOption) {\n                    const handleId = task.data['handleId'];\n                    return macroTaskOption.isPeriodic\n                        ? this._clearInterval(handleId)\n                        : this._clearTimeout(handleId);\n                }\n                return delegate.cancelTask(target, task);\n        }\n    }\n    onInvoke(delegate, current, target, callback, applyThis, applyArgs, source) {\n        try {\n            FakeAsyncTestZoneSpec.patchDate();\n            return delegate.invoke(target, callback, applyThis, applyArgs, source);\n        }\n        finally {\n            if (!this.patchDateLocked) {\n                FakeAsyncTestZoneSpec.resetDate();\n            }\n        }\n    }\n    findMacroTaskOption(task) {\n        if (!this.macroTaskOptions) {\n            return null;\n        }\n        for (let i = 0; i < this.macroTaskOptions.length; i++) {\n            const macroTaskOption = this.macroTaskOptions[i];\n            if (macroTaskOption.source === task.source) {\n                return macroTaskOption;\n            }\n        }\n        return null;\n    }\n    onHandleError(parentZoneDelegate, currentZone, targetZone, error) {\n        this._lastError = error;\n        return false; // Don't propagate error to parent zone.\n    }\n}\nlet _fakeAsyncTestZoneSpec = null;\nfunction getProxyZoneSpec() {\n    return Zone && Zone['ProxyZoneSpec'];\n}\n/**\n * Clears out the shared fake async zone for a test.\n * To be called in a global `beforeEach`.\n *\n * @experimental\n */\nfunction resetFakeAsyncZone() {\n    if (_fakeAsyncTestZoneSpec) {\n        _fakeAsyncTestZoneSpec.unlockDatePatch();\n    }\n    _fakeAsyncTestZoneSpec = null;\n    // in node.js testing we may not have ProxyZoneSpec in which case there is nothing to reset.\n    getProxyZoneSpec() && getProxyZoneSpec().assertPresent().resetDelegate();\n}\n/**\n * Wraps a function to be executed in the fakeAsync zone:\n * - microtasks are manually executed by calling `flushMicrotasks()`,\n * - timers are synchronous, `tick()` simulates the asynchronous passage of time.\n *\n * When flush is `false`, if there are any pending timers at the end of the function,\n * an exception will be thrown.\n *\n * Can be used to wrap inject() calls.\n *\n * ## Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @param fn\n * @param options\n *     flush: when true, will drain the macrotask queue after the test function completes.\n * @returns The function wrapped to be executed in the fakeAsync zone\n *\n * @experimental\n */\nfunction fakeAsync(fn, options = {}) {\n    const { flush = false } = options;\n    // Not using an arrow function to preserve context passed from call site\n    const fakeAsyncFn = function (...args) {\n        const ProxyZoneSpec = getProxyZoneSpec();\n        if (!ProxyZoneSpec) {\n            throw new Error('ProxyZoneSpec is needed for the async() test helper but could not be found. ' +\n                'Please make sure that your environment includes zone.js/plugins/proxy');\n        }\n        const proxyZoneSpec = ProxyZoneSpec.assertPresent();\n        if (Zone.current.get('FakeAsyncTestZoneSpec')) {\n            throw new Error('fakeAsync() calls can not be nested');\n        }\n        try {\n            // in case jasmine.clock init a fakeAsyncTestZoneSpec\n            if (!_fakeAsyncTestZoneSpec) {\n                const FakeAsyncTestZoneSpec = Zone && Zone['FakeAsyncTestZoneSpec'];\n                if (proxyZoneSpec.getDelegate() instanceof FakeAsyncTestZoneSpec) {\n                    throw new Error('fakeAsync() calls can not be nested');\n                }\n                _fakeAsyncTestZoneSpec = new FakeAsyncTestZoneSpec();\n            }\n            let res;\n            const lastProxyZoneSpec = proxyZoneSpec.getDelegate();\n            proxyZoneSpec.setDelegate(_fakeAsyncTestZoneSpec);\n            _fakeAsyncTestZoneSpec.lockDatePatch();\n            try {\n                res = fn.apply(this, args);\n                if (flush) {\n                    _fakeAsyncTestZoneSpec.flush(20, true);\n                }\n                else {\n                    flushMicrotasks();\n                }\n            }\n            finally {\n                proxyZoneSpec.setDelegate(lastProxyZoneSpec);\n            }\n            if (!flush) {\n                if (_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length > 0) {\n                    throw new Error(`${_fakeAsyncTestZoneSpec.pendingPeriodicTimers.length} ` +\n                        `periodic timer(s) still in the queue.`);\n                }\n                if (_fakeAsyncTestZoneSpec.pendingTimers.length > 0) {\n                    throw new Error(`${_fakeAsyncTestZoneSpec.pendingTimers.length} timer(s) still in the queue.`);\n                }\n            }\n            return res;\n        }\n        finally {\n            resetFakeAsyncZone();\n        }\n    };\n    fakeAsyncFn.isFakeAsync = true;\n    return fakeAsyncFn;\n}\nfunction _getFakeAsyncZoneSpec() {\n    if (_fakeAsyncTestZoneSpec == null) {\n        _fakeAsyncTestZoneSpec = Zone.current.get('FakeAsyncTestZoneSpec');\n        if (_fakeAsyncTestZoneSpec == null) {\n            throw new Error('The code should be running in the fakeAsync zone to call this function');\n        }\n    }\n    return _fakeAsyncTestZoneSpec;\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone.\n *\n * The microtasks queue is drained at the very start of this function and after any timer\n * callback has been executed.\n *\n * ## Example\n *\n * {@example core/testing/ts/fake_async.ts region='basic'}\n *\n * @experimental\n */\nfunction tick(millis = 0, ignoreNestedTimeout = false) {\n    _getFakeAsyncZoneSpec().tick(millis, null, ignoreNestedTimeout);\n}\n/**\n * Simulates the asynchronous passage of time for the timers in the fakeAsync zone by\n * draining the macrotask queue until it is empty. The returned value is the milliseconds\n * of time that would have been elapsed.\n *\n * @param maxTurns\n * @returns The simulated time elapsed, in millis.\n *\n * @experimental\n */\nfunction flush(maxTurns) {\n    return _getFakeAsyncZoneSpec().flush(maxTurns);\n}\n/**\n * Discard all remaining periodic tasks.\n *\n * @experimental\n */\nfunction discardPeriodicTasks() {\n    const zoneSpec = _getFakeAsyncZoneSpec();\n    zoneSpec.pendingPeriodicTimers;\n    zoneSpec.pendingPeriodicTimers.length = 0;\n}\n/**\n * Flush any pending microtasks.\n *\n * @experimental\n */\nfunction flushMicrotasks() {\n    _getFakeAsyncZoneSpec().flushMicrotasks();\n}\nfunction patchFakeAsyncTest(Zone) {\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['FakeAsyncTestZoneSpec'] = FakeAsyncTestZoneSpec;\n    Zone.__load_patch('fakeasync', (global, Zone, api) => {\n        Zone[api.symbol('fakeAsyncTest')] = {\n            resetFakeAsyncZone,\n            flushMicrotasks,\n            discardPeriodicTasks,\n            tick,\n            flush,\n            fakeAsync,\n        };\n    }, true);\n    patchedTimers = {\n        setTimeout: global$1.setTimeout,\n        setInterval: global$1.setInterval,\n        clearTimeout: global$1.clearTimeout,\n        clearInterval: global$1.clearInterval,\n        nativeSetTimeout: global$1[Zone.__symbol__('setTimeout')],\n        nativeClearTimeout: global$1[Zone.__symbol__('clearTimeout')],\n    };\n    Scheduler.nextId = Scheduler.getNextId();\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction patchLongStackTrace(Zone) {\n    const NEWLINE = '\\n';\n    const IGNORE_FRAMES = {};\n    const creationTrace = '__creationTrace__';\n    const ERROR_TAG = 'STACKTRACE TRACKING';\n    const SEP_TAG = '__SEP_TAG__';\n    let sepTemplate = SEP_TAG + '@[native]';\n    class LongStackTrace {\n        constructor() {\n            this.error = getStacktrace();\n            this.timestamp = new Date();\n        }\n    }\n    function getStacktraceWithUncaughtError() {\n        return new Error(ERROR_TAG);\n    }\n    function getStacktraceWithCaughtError() {\n        try {\n            throw getStacktraceWithUncaughtError();\n        }\n        catch (err) {\n            return err;\n        }\n    }\n    // Some implementations of exception handling don't create a stack trace if the exception\n    // isn't thrown, however it's faster not to actually throw the exception.\n    const error = getStacktraceWithUncaughtError();\n    const caughtError = getStacktraceWithCaughtError();\n    const getStacktrace = error.stack\n        ? getStacktraceWithUncaughtError\n        : caughtError.stack\n            ? getStacktraceWithCaughtError\n            : getStacktraceWithUncaughtError;\n    function getFrames(error) {\n        return error.stack ? error.stack.split(NEWLINE) : [];\n    }\n    function addErrorStack(lines, error) {\n        let trace = getFrames(error);\n        for (let i = 0; i < trace.length; i++) {\n            const frame = trace[i];\n            // Filter out the Frames which are part of stack capturing.\n            if (!IGNORE_FRAMES.hasOwnProperty(frame)) {\n                lines.push(trace[i]);\n            }\n        }\n    }\n    function renderLongStackTrace(frames, stack) {\n        const longTrace = [stack ? stack.trim() : ''];\n        if (frames) {\n            let timestamp = new Date().getTime();\n            for (let i = 0; i < frames.length; i++) {\n                const traceFrames = frames[i];\n                const lastTime = traceFrames.timestamp;\n                let separator = `____________________Elapsed ${timestamp - lastTime.getTime()} ms; At: ${lastTime}`;\n                separator = separator.replace(/[^\\w\\d]/g, '_');\n                longTrace.push(sepTemplate.replace(SEP_TAG, separator));\n                addErrorStack(longTrace, traceFrames.error);\n                timestamp = lastTime.getTime();\n            }\n        }\n        return longTrace.join(NEWLINE);\n    }\n    // if Error.stackTraceLimit is 0, means stack trace\n    // is disabled, so we don't need to generate long stack trace\n    // this will improve performance in some test(some test will\n    // set stackTraceLimit to 0, https://github.com/angular/zone.js/issues/698\n    function stackTracesEnabled() {\n        // Cast through any since this property only exists on Error in the nodejs\n        // typings.\n        return Error.stackTraceLimit > 0;\n    }\n    Zone['longStackTraceZoneSpec'] = {\n        name: 'long-stack-trace',\n        longStackTraceLimit: 10, // Max number of task to keep the stack trace for.\n        // add a getLongStackTrace method in spec to\n        // handle handled reject promise error.\n        getLongStackTrace: function (error) {\n            if (!error) {\n                return undefined;\n            }\n            const trace = error[Zone.__symbol__('currentTaskTrace')];\n            if (!trace) {\n                return error.stack;\n            }\n            return renderLongStackTrace(trace, error.stack);\n        },\n        onScheduleTask: function (parentZoneDelegate, currentZone, targetZone, task) {\n            if (stackTracesEnabled()) {\n                const currentTask = Zone.currentTask;\n                let trace = (currentTask && currentTask.data && currentTask.data[creationTrace]) || [];\n                trace = [new LongStackTrace()].concat(trace);\n                if (trace.length > this.longStackTraceLimit) {\n                    trace.length = this.longStackTraceLimit;\n                }\n                if (!task.data)\n                    task.data = {};\n                if (task.type === 'eventTask') {\n                    // Fix issue https://github.com/angular/zone.js/issues/1195,\n                    // For event task of browser, by default, all task will share a\n                    // singleton instance of data object, we should create a new one here\n                    // The cast to `any` is required to workaround a closure bug which wrongly applies\n                    // URL sanitization rules to .data access.\n                    task.data = { ...task.data };\n                }\n                task.data[creationTrace] = trace;\n            }\n            return parentZoneDelegate.scheduleTask(targetZone, task);\n        },\n        onHandleError: function (parentZoneDelegate, currentZone, targetZone, error) {\n            if (stackTracesEnabled()) {\n                const parentTask = Zone.currentTask || error.task;\n                if (error instanceof Error && parentTask) {\n                    const longStack = renderLongStackTrace(parentTask.data && parentTask.data[creationTrace], error.stack);\n                    try {\n                        error.stack = error.longStack = longStack;\n                    }\n                    catch (err) { }\n                }\n            }\n            return parentZoneDelegate.handleError(targetZone, error);\n        },\n    };\n    function captureStackTraces(stackTraces, count) {\n        if (count > 0) {\n            stackTraces.push(getFrames(new LongStackTrace().error));\n            captureStackTraces(stackTraces, count - 1);\n        }\n    }\n    function computeIgnoreFrames() {\n        if (!stackTracesEnabled()) {\n            return;\n        }\n        const frames = [];\n        captureStackTraces(frames, 2);\n        const frames1 = frames[0];\n        const frames2 = frames[1];\n        for (let i = 0; i < frames1.length; i++) {\n            const frame1 = frames1[i];\n            if (frame1.indexOf(ERROR_TAG) == -1) {\n                let match = frame1.match(/^\\s*at\\s+/);\n                if (match) {\n                    sepTemplate = match[0] + SEP_TAG + ' (http://localhost)';\n                    break;\n                }\n            }\n        }\n        for (let i = 0; i < frames1.length; i++) {\n            const frame1 = frames1[i];\n            const frame2 = frames2[i];\n            if (frame1 === frame2) {\n                IGNORE_FRAMES[frame1] = true;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    computeIgnoreFrames();\n}\n\nclass ProxyZoneSpec {\n    static get() {\n        return Zone.current.get('ProxyZoneSpec');\n    }\n    static isLoaded() {\n        return ProxyZoneSpec.get() instanceof ProxyZoneSpec;\n    }\n    static assertPresent() {\n        if (!ProxyZoneSpec.isLoaded()) {\n            throw new Error(`Expected to be running in 'ProxyZone', but it was not found.`);\n        }\n        return ProxyZoneSpec.get();\n    }\n    constructor(defaultSpecDelegate = null) {\n        this.defaultSpecDelegate = defaultSpecDelegate;\n        this.name = 'ProxyZone';\n        this._delegateSpec = null;\n        this.properties = { 'ProxyZoneSpec': this };\n        this.propertyKeys = null;\n        this.lastTaskState = null;\n        this.isNeedToTriggerHasTask = false;\n        this.tasks = [];\n        this.setDelegate(defaultSpecDelegate);\n    }\n    setDelegate(delegateSpec) {\n        const isNewDelegate = this._delegateSpec !== delegateSpec;\n        this._delegateSpec = delegateSpec;\n        this.propertyKeys && this.propertyKeys.forEach((key) => delete this.properties[key]);\n        this.propertyKeys = null;\n        if (delegateSpec && delegateSpec.properties) {\n            this.propertyKeys = Object.keys(delegateSpec.properties);\n            this.propertyKeys.forEach((k) => (this.properties[k] = delegateSpec.properties[k]));\n        }\n        // if a new delegateSpec was set, check if we need to trigger hasTask\n        if (isNewDelegate &&\n            this.lastTaskState &&\n            (this.lastTaskState.macroTask || this.lastTaskState.microTask)) {\n            this.isNeedToTriggerHasTask = true;\n        }\n    }\n    getDelegate() {\n        return this._delegateSpec;\n    }\n    resetDelegate() {\n        this.getDelegate();\n        this.setDelegate(this.defaultSpecDelegate);\n    }\n    tryTriggerHasTask(parentZoneDelegate, currentZone, targetZone) {\n        if (this.isNeedToTriggerHasTask && this.lastTaskState) {\n            // last delegateSpec has microTask or macroTask\n            // should call onHasTask in current delegateSpec\n            this.isNeedToTriggerHasTask = false;\n            this.onHasTask(parentZoneDelegate, currentZone, targetZone, this.lastTaskState);\n        }\n    }\n    removeFromTasks(task) {\n        if (!this.tasks) {\n            return;\n        }\n        for (let i = 0; i < this.tasks.length; i++) {\n            if (this.tasks[i] === task) {\n                this.tasks.splice(i, 1);\n                return;\n            }\n        }\n    }\n    getAndClearPendingTasksInfo() {\n        if (this.tasks.length === 0) {\n            return '';\n        }\n        const taskInfo = this.tasks.map((task) => {\n            const dataInfo = task.data &&\n                Object.keys(task.data)\n                    .map((key) => {\n                    return key + ':' + task.data[key];\n                })\n                    .join(',');\n            return `type: ${task.type}, source: ${task.source}, args: {${dataInfo}}`;\n        });\n        const pendingTasksInfo = '--Pending async tasks are: [' + taskInfo + ']';\n        // clear tasks\n        this.tasks = [];\n        return pendingTasksInfo;\n    }\n    onFork(parentZoneDelegate, currentZone, targetZone, zoneSpec) {\n        if (this._delegateSpec && this._delegateSpec.onFork) {\n            return this._delegateSpec.onFork(parentZoneDelegate, currentZone, targetZone, zoneSpec);\n        }\n        else {\n            return parentZoneDelegate.fork(targetZone, zoneSpec);\n        }\n    }\n    onIntercept(parentZoneDelegate, currentZone, targetZone, delegate, source) {\n        if (this._delegateSpec && this._delegateSpec.onIntercept) {\n            return this._delegateSpec.onIntercept(parentZoneDelegate, currentZone, targetZone, delegate, source);\n        }\n        else {\n            return parentZoneDelegate.intercept(targetZone, delegate, source);\n        }\n    }\n    onInvoke(parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source) {\n        this.tryTriggerHasTask(parentZoneDelegate, currentZone, targetZone);\n        if (this._delegateSpec && this._delegateSpec.onInvoke) {\n            return this._delegateSpec.onInvoke(parentZoneDelegate, currentZone, targetZone, delegate, applyThis, applyArgs, source);\n        }\n        else {\n            return parentZoneDelegate.invoke(targetZone, delegate, applyThis, applyArgs, source);\n        }\n    }\n    onHandleError(parentZoneDelegate, currentZone, targetZone, error) {\n        if (this._delegateSpec && this._delegateSpec.onHandleError) {\n            return this._delegateSpec.onHandleError(parentZoneDelegate, currentZone, targetZone, error);\n        }\n        else {\n            return parentZoneDelegate.handleError(targetZone, error);\n        }\n    }\n    onScheduleTask(parentZoneDelegate, currentZone, targetZone, task) {\n        if (task.type !== 'eventTask') {\n            this.tasks.push(task);\n        }\n        if (this._delegateSpec && this._delegateSpec.onScheduleTask) {\n            return this._delegateSpec.onScheduleTask(parentZoneDelegate, currentZone, targetZone, task);\n        }\n        else {\n            return parentZoneDelegate.scheduleTask(targetZone, task);\n        }\n    }\n    onInvokeTask(parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs) {\n        if (task.type !== 'eventTask') {\n            this.removeFromTasks(task);\n        }\n        this.tryTriggerHasTask(parentZoneDelegate, currentZone, targetZone);\n        if (this._delegateSpec && this._delegateSpec.onInvokeTask) {\n            return this._delegateSpec.onInvokeTask(parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs);\n        }\n        else {\n            return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n        }\n    }\n    onCancelTask(parentZoneDelegate, currentZone, targetZone, task) {\n        if (task.type !== 'eventTask') {\n            this.removeFromTasks(task);\n        }\n        this.tryTriggerHasTask(parentZoneDelegate, currentZone, targetZone);\n        if (this._delegateSpec && this._delegateSpec.onCancelTask) {\n            return this._delegateSpec.onCancelTask(parentZoneDelegate, currentZone, targetZone, task);\n        }\n        else {\n            return parentZoneDelegate.cancelTask(targetZone, task);\n        }\n    }\n    onHasTask(delegate, current, target, hasTaskState) {\n        this.lastTaskState = hasTaskState;\n        if (this._delegateSpec && this._delegateSpec.onHasTask) {\n            this._delegateSpec.onHasTask(delegate, current, target, hasTaskState);\n        }\n        else {\n            delegate.hasTask(target, hasTaskState);\n        }\n    }\n}\nfunction patchProxyZoneSpec(Zone) {\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['ProxyZoneSpec'] = ProxyZoneSpec;\n}\n\nfunction patchSyncTest(Zone) {\n    class SyncTestZoneSpec {\n        constructor(namePrefix) {\n            this.runZone = Zone.current;\n            this.name = 'syncTestZone for ' + namePrefix;\n        }\n        onScheduleTask(delegate, current, target, task) {\n            switch (task.type) {\n                case 'microTask':\n                case 'macroTask':\n                    throw new Error(`Cannot call ${task.source} from within a sync test (${this.name}).`);\n                case 'eventTask':\n                    task = delegate.scheduleTask(target, task);\n                    break;\n            }\n            return task;\n        }\n    }\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['SyncTestZoneSpec'] = SyncTestZoneSpec;\n}\n\nfunction patchPromiseTesting(Zone) {\n    /**\n     * Promise for async/fakeAsync zoneSpec test\n     * can support async operation which not supported by zone.js\n     * such as\n     * it ('test jsonp in AsyncZone', async() => {\n     *   new Promise(res => {\n     *     jsonp(url, (data) => {\n     *       // success callback\n     *       res(data);\n     *     });\n     *   }).then((jsonpResult) => {\n     *     // get jsonp result.\n     *\n     *     // user will expect AsyncZoneSpec wait for\n     *     // then, but because jsonp is not zone aware\n     *     // AsyncZone will finish before then is called.\n     *   });\n     * });\n     */\n    Zone.__load_patch('promisefortest', (global, Zone, api) => {\n        const symbolState = api.symbol('state');\n        const UNRESOLVED = null;\n        const symbolParentUnresolved = api.symbol('parentUnresolved');\n        // patch Promise.prototype.then to keep an internal\n        // number for tracking unresolved chained promise\n        // we will decrease this number when the parent promise\n        // being resolved/rejected and chained promise was\n        // scheduled as a microTask.\n        // so we can know such kind of chained promise still\n        // not resolved in AsyncTestZone\n        Promise[api.symbol('patchPromiseForTest')] = function patchPromiseForTest() {\n            let oriThen = Promise[Zone.__symbol__('ZonePromiseThen')];\n            if (oriThen) {\n                return;\n            }\n            oriThen = Promise[Zone.__symbol__('ZonePromiseThen')] = Promise.prototype.then;\n            Promise.prototype.then = function () {\n                const chained = oriThen.apply(this, arguments);\n                if (this[symbolState] === UNRESOLVED) {\n                    // parent promise is unresolved.\n                    const asyncTestZoneSpec = Zone.current.get('AsyncTestZoneSpec');\n                    if (asyncTestZoneSpec) {\n                        asyncTestZoneSpec.unresolvedChainedPromiseCount++;\n                        chained[symbolParentUnresolved] = true;\n                    }\n                }\n                return chained;\n            };\n        };\n        Promise[api.symbol('unPatchPromiseForTest')] = function unpatchPromiseForTest() {\n            // restore origin then\n            const oriThen = Promise[Zone.__symbol__('ZonePromiseThen')];\n            if (oriThen) {\n                Promise.prototype.then = oriThen;\n                Promise[Zone.__symbol__('ZonePromiseThen')] = undefined;\n            }\n        };\n    });\n}\n\nfunction rollupTesting(Zone) {\n    patchLongStackTrace(Zone);\n    patchProxyZoneSpec(Zone);\n    patchSyncTest(Zone);\n    patchJasmine(Zone);\n    patchJest(Zone);\n    patchMocha(Zone);\n    patchAsyncTest(Zone);\n    patchFakeAsyncTest(Zone);\n    patchPromiseTesting(Zone);\n}\n\nrollupTesting(Zone);\n","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            const zoneTask = task;\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            const { type, data: { isPeriodic = false, isRefreshable = false } = {} } = task;\n            if (task.state === notScheduled && (type === eventTask || type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && zoneTask._transitionTo(running, scheduled);\n            const previousTask = _currentTask;\n            _currentTask = zoneTask;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (type == macroTask && task.data && !isPeriodic && !isRefreshable) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, zoneTask, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                const state = task.state;\n                if (state !== notScheduled && state !== unknown) {\n                    if (type == eventTask || isPeriodic || (isRefreshable && state === scheduling)) {\n                        reEntryGuard && zoneTask._transitionTo(scheduled, running, scheduling);\n                    }\n                    else {\n                        const zoneDelegates = zoneTask._zoneDelegates;\n                        this._updateTaskCount(zoneTask, -1);\n                        reEntryGuard && zoneTask._transitionTo(notScheduled, running, notScheduled);\n                        if (isRefreshable) {\n                            zoneTask._zoneDelegates = zoneDelegates;\n                        }\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = -1;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = {\n                'microTask': 0,\n                'macroTask': 0,\n                'eventTask': 0,\n            };\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst enableBeforeunloadSymbol = zoneSymbol('enable_beforeunload');\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (\n        // https://github.com/angular/angular/issues/47579\n        // https://www.w3.org/TR/2011/WD-html5-20110525/history.html#beforeunloadevent\n        // This is the only specific case we should check for. The spec defines that the\n        // `returnValue` attribute represents the message to show the user. When the event\n        // is created, this attribute must be set to the empty string.\n        event.type === 'beforeunload' &&\n            // To prevent any breaking changes resulting from this change, given that\n            // it was already causing a significant number of failures in G3, we have hidden\n            // that behavior behind a global configuration flag. Consumers can enable this\n            // flag explicitly if they want the `beforeunload` event to be handled as defined\n            // in the specification.\n            _global[enableBeforeunloadSymbol] &&\n            // The IDL event definition is `attribute DOMString returnValue`, so we check whether\n            // `typeof result` is a string.\n            typeof result === 'string') {\n            event.returnValue = result;\n        }\n        else if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n// Note that passive event listeners are now supported by most modern browsers,\n// including Chrome, Firefox, Safari, and Edge. There's a pending change that\n// would remove support for legacy browsers by zone.js. Removing `passiveSupported`\n// from the codebase will reduce the final code size for existing apps that still use zone.js.\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            },\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // We use a shared global `taskData` to pass data for `scheduleEventTask`,\n        // eliminating the need to create a new object solely for passing data.\n        // WARNING: This object has a static lifetime, meaning it is not created\n        // each time `addEventListener` is called. It is instantiated only once\n        // and captured by reference inside the `addEventListener` and\n        // `removeEventListener` functions. Do not add any new properties to this\n        // object, as doing so would necessitate maintaining the information\n        // between `addEventListener` calls.\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        /**\n         * In the context of events and listeners, this function will be\n         * called at the end by `cancelTask`, which, in turn, calls `task.cancelFn`.\n         * Cancelling a task is primarily used to remove event listeners from\n         * the task target.\n         */\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (task.removeAbortListener) {\n                                task.removeAbortListener();\n                                task.removeAbortListener = null;\n                            }\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        function copyEventListenerOptions(options) {\n            if (typeof options === 'object' && options !== null) {\n                // We need to destructure the target `options` object since it may\n                // be frozen or sealed (possibly provided implicitly by a third-party\n                // library), or its properties may be readonly.\n                const newOptions = { ...options };\n                // The `signal` option was recently introduced, which caused regressions in\n                // third-party scenarios where `AbortController` was directly provided to\n                // `addEventListener` as options. For instance, in cases like\n                // `document.addEventListener('keydown', callback, abortControllerInstance)`,\n                // which is valid because `AbortController` includes a `signal` getter, spreading\n                // `{...options}` wouldn't copy the `signal`. Additionally, using `Object.create`\n                // isn't feasible since `AbortController` is a built-in object type, and attempting\n                // to create a new object directly with it as the prototype might result in\n                // unexpected behavior.\n                if (options.signal) {\n                    newOptions.signal = options.signal;\n                }\n                return newOptions;\n            }\n            return options;\n        }\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = copyEventListenerOptions(buildEventListenerOptions(arguments[2], passive));\n                const signal = options?.signal;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // In the code below, `options` should no longer be reassigned; instead, it\n                // should only be mutated. This is because we pass that object to the native\n                // `addEventListener`.\n                // It's generally recommended to use the same object reference for options.\n                // This ensures consistency and avoids potential issues.\n                taskData.options = options;\n                if (once) {\n                    // When using `addEventListener` with the `once` option, we don't pass\n                    // the `once` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `once` setting and handle it ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // When using `addEventListener` with the `signal` option, we don't pass\n                    // the `signal` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `signal` setting and handle it ourselves.\n                    taskData.options.signal = undefined;\n                }\n                // The `scheduleEventTask` function will ultimately call `customScheduleGlobal`,\n                // which in turn calls the native `addEventListener`. This is why `taskData.options`\n                // is updated before scheduling the task, as `customScheduleGlobal` uses\n                // `taskData.options` to pass it to the native `addEventListener`.\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    // Wrapping `task` in a weak reference would not prevent memory leaks. Weak references are\n                    // primarily used for preventing strong references cycles. `onAbort` is always reachable\n                    // as it's an event listener, so its closure retains a strong reference to the `task`.\n                    const onAbort = () => task.zone.cancelTask(task);\n                    nativeListener.call(signal, 'abort', onAbort, { once: true });\n                    // We need to remove the `abort` listener when the event listener is going to be removed,\n                    // as it creates a closure that captures `task`. This closure retains a reference to the\n                    // `task` object even after it goes out of scope, preventing `task` from being garbage\n                    // collected.\n                    task.removeAbortListener = () => signal.removeEventListener('abort', onAbort);\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    taskData.options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            // `existingTasks` may not exist if the `addEventListener` was called before\n            // it was patched by zone.js. Please refer to the attached issue for\n            // clarification, particularly after the `if` condition, before calling\n            // the native `removeEventListener`.\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        // In all other conditions, when `addEventListener` is called after being\n                        // patched by zone.js, we would always find an event task on the `EventTarget`.\n                        // This will trigger `cancelFn` on the `existingTask`, leading to `customCancelGlobal`,\n                        // which ultimately removes an event listener and cleans up the abort listener\n                        // (if an `AbortSignal` was provided when scheduling a task).\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // https://github.com/angular/zone.js/issues/930\n            // We may encounter a situation where the `addEventListener` was\n            // called on the event target before zone.js is loaded, resulting\n            // in no task being stored on the event target due to its invocation\n            // of the native implementation. In this scenario, we simply need to\n            // invoke the native `removeEventListener`.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        const handleOrId = setNative.apply(window, data.args);\n        // Whlist on Node.js when get can the ID by using `[Symbol.toPrimitive]()` we do\n        // to this so that we do not cause potentally leaks when using `setTimeout`\n        // since this can be periodic when using `.refresh`.\n        if (isNumber(handleOrId)) {\n            data.handleId = handleOrId;\n        }\n        else {\n            data.handle = handleOrId;\n            // On Node.js a timeout and interval can be restarted over and over again by using the `.refresh` method.\n            data.isRefreshable = isFunction(handleOrId.refresh);\n        }\n        return task;\n    }\n    function clearTask(task) {\n        const { handle, handleId } = task.data;\n        return clearNative.call(window, handle ?? handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (isFunction(args[0])) {\n            const options = {\n                isRefreshable: false,\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    const { handle, handleId, isPeriodic, isRefreshable } = options;\n                    if (!isPeriodic && !isRefreshable) {\n                        if (handleId) {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[handleId];\n                        }\n                        else if (handle) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            handle[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const { handleId, handle, isRefreshable, isPeriodic } = task.data;\n            if (handleId) {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handleId] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n                if (isRefreshable && !isPeriodic) {\n                    const originalRefresh = handle.refresh;\n                    handle.refresh = function () {\n                        const { zone, state } = task;\n                        if (state === 'notScheduled') {\n                            task._state = 'scheduled';\n                            zone._updateTaskCount(task, 1);\n                        }\n                        else if (state === 'running') {\n                            task._state = 'scheduling';\n                        }\n                        return originalRefresh.call(this);\n                    };\n                }\n            }\n            return handle ?? handleId ?? task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (isNumber(id)) {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n            delete tasksByHandleId[id];\n        }\n        else {\n            // nodejs env ?? other environments.\n            task = id?.[taskSymbol];\n            if (task) {\n                id[taskSymbol] = null;\n            }\n            else {\n                task = id;\n            }\n        }\n        if (task?.type) {\n            if (task.cancelFn) {\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = isIE()\n            ? [{ target: internalWindow, ignoreProperties: ['error'] }]\n            : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target &&\n            target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n"],"x_google_ignoreList":[0,1,2]}